{"version":3,"sources":["translation/Wrapper.js","component/widgets/Trail.js","component/widgets/Footer.js","component/GlobalStyles.js","component/Theme.js","component/ThemeContext.js","component/css/photo_2021-06-30_11-38-49.jpg","component/widgets/NavBar.js","component/js/homePage.js","component/js/Sliding_window.js","component/widgets/Carousel.js","component/widgets/VerticalSlider.js","App.js","SocketContext.js","component/widgets/LoadingDialog.js","component/hooks/useInput.js","serviceWorker.js","component/widgets/NotAllowed.js","component/LoginAndSignup/LoginAndSignup.js","component/widgets/AccountsNavigator.js","component/accounts/AccountLevel.js","component/widgets/MarketSearchSec.js","component/market/Withdraw.js","Extentions.js","component/widgets/MarketBar.js","component/market/Trade.js","component/coins/CoinInfoScreen.js","component/widgets/QrCode.js","component/market/DepositScreen.js","component/more_pages/FAQScreen.js","component/accounts/IdVerification.js","component/market/MarketList.js","component/accounts/MessagesScreen.js","component/accounts/SettingScreen.js","component/widgets/VerifiedScreen.js","component/accounts/WalletOverview.js","component/market/Convert.js","component/LoginAndSignup/ForgetPassword.js","Root.js","component/css/IranNastaliq.ttf","index.js"],"names":["lang","Trail","open","children","items","React","Children","toArray","trail","useTrail","length","config","mass","tension","friction","opacity","x","height","from","map","index","style","div","Context","createContext","local","localStorage","getItem","navigator","language","split","English","farsi","Wrapper","props","useState","locale","setLocale","messages","setMessages","Provider","value","selectLanguage","e","newLocale","target","setItem","Footer","windowSize","setWindowSize","setInterval","window","innerWidth","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","context","useContext","className","onClick","state","href","id","a","FaTelegramPlane","IoLogoInstagram","IoLogoTwitter","MdEmail","GlobalStyles","createGlobalStyle","theme","body","text","cardHeader","textSec","hoverBtn","shadowColor","border","dropDown","sideNav","bodySec","footer","cardBodyBorder","EstTotal","vipLvOne","colorInfo","background","cardBorder","glowShadow","marquee","toggleBorder","lightTheme","autoComplete","darkTheme","Theme","ThemeContext","themName","setThemName","setTheme","themeChanger","NavBar","toggle","setToggle","LoginContext","isLoggedIn","history","setIsLoggedIn","useHistory","setError","setIsLoading","logOut","axios","get","headers","status","Error","removeItem","refreshPage","message","location","reload","isOpen","push","defaultMessage","type","ListItem","ListItemText","FaCheck","FaBars","FaWallet","RiAccountPinBoxLine","alignItems","ListItemAvatar","Avatar","width","alt","src","pic","IconButton","textAlign","disabled","Badge","badgeContent","color","secondary","Fragment","Typography","component","variant","Divider","RiLogoutBoxRLine","IoMdSettings","BsBellFill","$","document","ready","jqUpdateSize","click","selectTab","parent","removeClass","attr","addClass","animate","list2","list1","list3","list4","table2_rows","resize","first","hover","css","next","Banner","newProp","console","log","contentPosition","totalItems","mediaLength","content","Grid","item","xs","CardContent","Name","Caption","Button","i","Items","media","CardMedia","image","Image","title","unshift","splice","Card","raised","container","spacing","BannerExample","autoPlay","animation","indicators","timeout","navButtonsAlwaysVisible","navButtonsAlwaysInvisible","cycleNavigation","autoBind","this","setState","event","Component","VerticalSlider","isLoading","error","tickers","setTickers","fetchCoinHandler","useCallback","listResponse","keys","marketL","data","loadedList","name","markets","rank","response","ticker","loadedData","key","undefined","toLowerCase","lastPrice","last","dayOpen","volume","parseFloat","vol","toFixed","DayChange","sort","b","useEffect","CircularProgress","classNames","verticalCss","direction","autoplay","slice","defaults","baseURL","interceptors","use","errors","msg","toast","autoClose","Promise","reject","App","setWidth","topLosers","setTopLosers","vLeaders","setVLeaders","tableSwitcher","setTableSwitcher","loadedTL","loadedVL","numberFormatter","num","replace","gradientColor","pauseOnHover","loop","speed","RiCoinsFill","role","scope","Carousel","SocketContext","LoadingDialog","Dialog","onClose","maxWidth","Backdrop","zIndex","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","isValid","hasError","valueChangeHandler","inputBlurHandler","reset","Boolean","hostname","match","NotAllowed","disableScroll","on","LoginAndSignup","setEmail","setPass","setLoading","isSignup","showLogin","setShowLogin","emailRef","useRef","passRef","VerificationContext","setIsVerified","isVerified","addToast","useToasts","includes","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","trim","enteredPass","enteredPassIsValid","passInputHasError","passChangedHandler","passBlurHandler","resetPassInput","formIsValid","emailInputClasses","passInputClasses","loginOrSignup","isLogin","Axios","post","URLSearchParams","username","current","password","then","res","appearance","autoDismiss","access_token","tmp_token","setIsEmailVerifingNeeded","isAuth","goBack","toString","show","isEmailVerifingNeeded","showPass","setShowPass","showPassSignup","setShowPassSignup","dir","onSubmit","preventDefault","placeholder","onBlur","onChange","ref","required","htmlFor","FaEye","FaEyeSlash","MdPlayArrow","AccountsNavigator","styling","BottomNavigation","backgroundColor","margin","showLabels","BottomNavigationAction","label","icon","CgListTree","MdStreetview","HiInboxIn","VscReferences","AccountLevel","defaultChecked","overflowX","styles","buildStyles","strokeLinecap","textSize","pathTransitionDuration","pathColor","trailColor","textColor","IoMdArrowDropdown","MarketSearchSec","marketList","setMarketList","networks","setNetworks","setIsMarket","loadedCoinList","loadedNetwork","short_name","val","setVal","paddingTop","borderRadius","onFetchCoinData","configData","onSocket","onGetMarketDetail","setFirst","market","setSecond","filterOptions","createFilterOptions","matchFrom","Autocomplete","sx","size","padding","options","filterSelectedOptions","autoHighlight","clearIcon","renderInput","params","TextField","autoFocus","Withdraw","Arrived","setArrived","arrivedType","setArrivedType","selectedNetworks","setFee","selectedOne","setSelectedOne","configs","setConfigs","chains","setChain","coinBalanceInfo","setCoinBalanceInfo","IsLoading","AddressRef","ArrivedRef","fetchGeneralList","fetch","json","generalLi","asset","withdraw_least_amount","withdraw_tx_fee","chain","can_withdraw","fetchCoinData","loadedConfigs","j","network","Response","balance","balanceInfo","loadedBalanceInfo","available","frozen","lable","Balance","Math","floor","Date","parseFulDate","dateToParse","moment","unix","format","parseNumber","Number","prototype","parseNumberLength","s","toFixedSpecial","n","fixed","str","indexOf","spl","reduce","p","Array","join","insert","StyledAutocompletePopper","styled","autocompleteClasses","paper","boxShadow","fontSize","listbox","palette","mode","option","minHeight","borderBottom","action","popperDisablePortal","position","PopperComponent","disablePortal","anchorEl","other","StyledPopper","Popper","modal","StyledInput","InputBase","transition","transitions","create","borderColor","ButtonBase","paddingBottom","fontWeight","GitHubLabel","setAnchorEl","setValue","pendingValue","setPendingValue","disableRipple","currentTarget","placement","ClickAwayListener","onClickAway","focus","multiple","newValue","reason","Value","go","disableCloseOnSelect","renderTags","noOptionsText","renderOption","selected","mr","ml","visibility","flexShrink","mb","flexGrow","getOptionLabel","InputProps","inputProps","PrettoSlider","withStyles","root","thumb","marginTop","marginLeft","active","valueLabel","left","track","rail","mark","Slider","marks","SliderValueLabelComponent","Tooltip","enterTouchDelay","Trade","TableCell","MuiTableCell","els","querySelector","getElementsByClassName","steps","forEach","call","addEventListener","stepNum","classList","remove","add","progress","chartRef","isOpenCoinSelectorPopover","setIsOpenCoinSelectorPopover","isOrderBookSelected","setIsOrderBookIsSelected","buyOrdersBook","setBuyOrdersBook","sellOrdersBook","setSellOrdersBook","tradeHistory","setTradeHistory","availableUSDT","setAvailableUSDT","availableCoin","setAvailableCoin","marketPrice","setMarketPrice","price","setPrice","stop","setStop","limit","setLimit","amount","setAmount","isCurrentOrdersSelected","setIsCurrentOrdersSelected","currentOrders","setCurrentOrders","ordersHistory","setOrdersHistory","marketDetail","setMarketDetail","marketDetailRef","getMarketDetail","pair","setupWebSockets","getBalanceInfo","getPendingOrders","getOrderFinished","isLoadingBalances","setIsLoadingBalances","setBalances","USDT","toUpperCase","isBuyMode","setIsBuyMode","addingOrder","setAddingOrder","tokken","isBuy","limitOrder","method","JSON","stringify","marketOrder","orderModeIndex","setOrderModeIndex","lastTsCurrentPrice","setLastTsCurrentPrice","floorAmount","setFloorAmount","lastTsIsBuy","setLastTsIsBuy","currentPrice","setCurrentPrice","twentyFourOpen","setTwentyFourOpen","twentyFourHigh","setTwentyFourHigh","twentyFourLowest","setTwentyFourLowest","twentyFourVolume","setTwentyFourVolume","pairToShow","sliderValue","setSliderValue","group","search","marketData","ws","WebSocket","onmessage","parse","high","low","buyLs","sellLs","asks","elem","bids","prv","ls","onopen","send","isLoadingPendingOrders","setLoadingPendingOrders","cancelPendingOrders","delete","totalAmountsAsks","totalAmountsBids","Popover","anchorOrigin","vertical","horizontal","transformOrigin","autoHide","autoHideTimeout","List","button","justifyContent","lg","flex","trading_name","reverse","time","RiStarLine","place","BsInfo","autosize","isTransparent","symbol","hide_side_toolbar","pattern","step","paddingLeft","ValueLabelComponent","valueLabelDisplay","defaultValue","TableContainer","Table","TableHead","TableRow","TableBody","create_time","order_type","avg_price","onDismiss","maxHeight","checked","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","CoinInfoScreen","coinInfo","BsStar","bgColor","completed","QrCode","renderAs","fgColor","level","DepositScreen","address","setAddress","coinType","setCoinType","copySuccess","setCopySuccess","setIsloading","deposit_least_amount","can_deposit","adressContent","fetchAddress","smart_contract_name","Addresses","coin_address","BiCopy","FAQScreen","IdVerification","FaIdCardAlt","GrContactInfo","labelPlacement","accept","display","FaRegIdCard","RiQrScan2Line","MarketList","marketCap","buy_amount","currentSearch","setCurrentSearch","nameSortActiveINC","setNameSortActiveINC","nameSortActiveDEC","setNameSortActiveDEC","priceSortActiveINC","setPriceSortActiveINC","priceSortActiveDEC","setPriceSortActiveDEC","percentSortActiveDEC","setPercentSortActiveDEC","percentSortActiveINC","setPercentSortActiveINC","marketSortActiveDEC","setMarketSortActiveDEC","marketSortActiveINC","setMarketSortActiveINC","compareNumberINC","object1","object2","obj1","compareNumberDEC","FaSearchDollar","ticker1","ticker2","defaultSort","FaHashtag","AiFillCaretUp","obj2","compareNameINC","sortListNameINC","AiFillCaretDown","compareNameDEC","sortListNameDEC","sortListPriceINC","sortListPriceDEC","key1","key2","comparePercentINC","sortListPercentINC","sortListPercentDEC","sortListMarketCapINC","sortListMarketCapDEC","filter","startsWith","FaAngleDoubleRight","MessagesScreen","set","MdMoveToInbox","tabIndex","SettingScreen","classes","makeStyles","formControl","minWidth","useStyles","Select","IconComponent","labelId","MenuItem","VerifiedScreen","charSet","httpEquiv","rel","integrity","crossOrigin","WalletOverview","eye","setEye","showTabs","setShowTabs","assets","setAssets","total","setTotal","hideAssets","setHideAssets","tickerAll","smallAsset","operation","isUnion","Set","has","difference","inBoth","sum","accumulator","labels","datasets","hoverBackgroundColor","responsive","layouts","top","plugins","legend","duration","TiArrowUnsorted","Convert","currentPriceUSD","setCurrentPriceUSD","second","priceRef","availableCoinName","setAvailableCoinName","convertAmount","setConvertAmount","calculated","setCalculated","notMatch","convert","fi","sec","Amount","ConvertOrder","convert_value","addConvert","Price","ForgetPassword","Timer","codeRef","repPassRef","setEnteredEmail","pass","repPass","setRepPass","enteredCode","setEnteredCode","nextStep","setNextStep","getCode","email","emailCode","Code","resetPassword","code","RepPass","tempToken","userName","resetPassRequest","RestCode","isPlaying","strokeWidth","colors","onComplete","remainingTime","jss","jssPreset","rtl","Root","StylesProvider","Consumer","socket","exact","path","ReactDOM","render","autoDismissTimeout","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e4c3f7d0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {IntlProvider} from 'react-intl';\r\nimport English from \"./en.json\";\r\nimport farsi from \"./fa.json\";\r\n\r\n\r\nexport const Context = React.createContext();\r\n\r\n\r\n const local = localStorage.getItem(\"language\") || navigator.language.split(\"-\")[0];\r\n\r\n\r\nlet lang;\r\nif (local === 'en') {\r\n    lang = English;\r\n\r\n}\r\nif (local === 'fa') {\r\n    lang = farsi;\r\n\r\n}\r\n\r\n\r\nconst Wrapper = (props) => {\r\n    const [locale, setLocale] = useState(local);\r\n    const [messages, setMessages] = useState(lang);\r\n\r\n\r\n    function selectLanguage(e) {\r\n        var newLocale;\r\n\r\n        if (e.target){\r\n             newLocale = e.target.value;\r\n        }\r\n       else {\r\n             newLocale = e;\r\n        }\r\n        setLocale(newLocale);\r\n        if (newLocale === 'en') {\r\n            setMessages(English);\r\n            localStorage.setItem(\"language\", \"en\");\r\n        }\r\n\r\n        else if (newLocale === 'fa') {\r\n                setMessages(farsi);\r\n                localStorage.setItem(\"language\", \"fa\");\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        <Context.Provider value={{locale, selectLanguage}}>\r\n            <IntlProvider messages={messages} locale={locale}>\r\n                {props.children}\r\n            </IntlProvider>\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useState } from 'react'\r\nimport { useTrail, a } from '@react-spring/web'\r\n\r\nconst Trail: React.FC<{ open: boolean }> = ({ open, children }) => {\r\n    const items = React.Children.toArray(children)\r\n    const trail = useTrail(items.length, {\r\n        config: { mass: 5, tension: 2000, friction: 200 },\r\n        opacity: open ? 1 : 0,\r\n        x: open ? 0 : 10,\r\n        height: open ? 36 : 0,\r\n        from: { opacity: 0, x: 20, height: 0 },\r\n    })\r\n    return (\r\n        <div>\r\n            {trail.map(({ height, ...style }, index) => (\r\n                <a.div key={index} style={style}>\r\n                    <a.div style={{ height }}>{items[index]}</a.div>\r\n                </a.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trail;","import React, {useContext, useState} from 'react';\r\nimport '../css/bootstrap.css';\r\nimport '../css/footer.css';\r\nimport {FaTelegramPlane} from \"@react-icons/all-files/fa/FaTelegramPlane\";\r\nimport {IoLogoInstagram} from \"@react-icons/all-files/io/IoLogoInstagram\";\r\nimport {MdEmail} from \"@react-icons/all-files/md/MdEmail\";\r\nimport {IoLogoTwitter} from \"@react-icons/all-files/io/IoLogoTwitter\";\r\nimport Trail from \"./Trail\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    const [windowSize, setWindowSize] = useState();\r\n\r\n    setInterval(() => {\r\n        setWindowSize(window.innerWidth);\r\n    }, 1000);\r\n\r\n    const [open, setOpen] = useState(window.innerWidth <= 990 ? true : true);\r\n    const [open2, setOpen2] = useState(window.innerWidth <= 990 ? false : true);\r\n    const [open3, setOpen3] = useState(window.innerWidth <= 990 ? false : true);\r\n    const [open4, setOpen4] = useState(window.innerWidth <= 990 ? false : true);\r\n\r\n    const context = useContext(Context);\r\n\r\n    return (\r\n        <div\r\n            className={`col-xs-12 col-md-12 col-sm-12 container-fluid footer pt-5  ${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <div className=\"row pb-5\">\r\n                <div className=\"col-xs-12 col-lg-2 col-sm-12 col-md-6 footer-divs text-center  text-capitalize\">\r\n                    <li className=\"list-group-item border-0\"\r\n                        onClick={() => windowSize <= 990 && setOpen(state => !state)}>\r\n                        <span className=\"fw-bold dd-button\">About Us</span>\r\n                        <ul className=\"list-group \">\r\n                            <Trail open={open}>\r\n                                <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                    About Sigloy\r\n                                </a>\r\n                                <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                    Develop Team\r\n                                </a>\r\n                            </Trail>\r\n                        </ul>\r\n                    </li>\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-lg-2 col-sm-12 col-md-6  footer-divs text-center text-capitalize\">\r\n                    <li className=\"list-group-item border-0 \">\r\n                        <span className=\"fw-bold dd-button\" onClick={() => windowSize <= 990 && setOpen2(state => !state)}>Condition</span>\r\n                    <ul className=\"list-group \">\r\n                        <Trail open={open2}>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                Fees Standard\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                Privacy Policy\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                Account Security\r\n                            </a>\r\n                        </Trail>\r\n                    </ul>\r\n                    </li>\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-lg-2 col-sm-12 col-md-6  footer-divs text-center text-capitalize\">\r\n                    <li className=\"list-group-item border-0 \"\r\n                      >\r\n                        <span className=\"fw-bold dd-button\" onClick={() => windowSize <= 990 && setOpen3(state => !state)}>Service</span>\r\n                    <ul className=\"list-group \">\r\n                        <Trail open={open3}>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                About\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                Careers\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                A fourth item\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                        </Trail>\r\n                    </ul>\r\n                    </li>\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-lg-2 col-sm-12 col-md-6  footer-divs text-center text-capitalize \">\r\n                    <li className=\"list-group-item border-0 \"\r\n                      >\r\n                        <span className=\"fw-bold dd-button\"   onClick={() => windowSize <= 990 && setOpen4(state => !state)}>Support</span>\r\n                    <ul className=\"list-group \">\r\n                        <Trail open={open4} a>\r\n                            <a href=\"#\" className=\"p-2 small\" id=\"list-link\">\r\n                                About\r\n                            </a>\r\n                            <a href=\"#\" className=\" p-2 small\" id=\"list-link\">\r\n                                Careers\r\n                            </a>\r\n                            <a href=\"#\" className=\"p-2 small\" id=\"list-link\">\r\n                                A fourth item\r\n                            </a>\r\n                            <a href=\"#\" className=\"p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                            <a href=\"#\" className=\"p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                            <a href=\"#\" className=\"  p-2 small\" id=\"list-link\">\r\n                                And a fifth one\r\n                            </a>\r\n                        </Trail>\r\n                    </ul>\r\n                    </li>\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-lg-2 col-sm-12 col-md-12  footer-divs footer-divs-Community\">\r\n                    <ul className=\"list-group text-center text-capitalize\">\r\n                        <li className=\"list-group-item bg-transparent border-0 fw-bold \">\r\n                            Community\r\n                        </li>\r\n                        <ul className=\"list-group list-group-horizontal justify-content-center icons p-3\">\r\n                            <a className=\"list-group-item bg-transparent border-0 \" href={'https://t.me/Sigloybot'}\r\n                               id=\"list-link\">\r\n                                <FaTelegramPlane className=\"fab fa-telegram-plane\"/>\r\n                            </a>\r\n                            <a className=\"list-group-item bg-transparent border-0 \" id=\"list-link\">\r\n                                <IoLogoInstagram className=\"fab fa-instagram\"/>\r\n                            </a>\r\n                            <a className=\"list-group-item bg-transparent border-0 \" id=\"list-link\">\r\n                                <IoLogoTwitter className=\"fab fa-twitter\"/>\r\n                            </a>\r\n                            <a className=\"list-group-item bg-transparent border-0 \" id=\"list-link\">\r\n                                <MdEmail className=\"fab fa-twitter\"/>\r\n                            </a>\r\n                        </ul>\r\n                        <p>© 2021 SigloyEx.com. All rights reserved.</p>\r\n                    </ul>\r\n                    <br/>\r\n                    {/*                <p class=\"email-for-info\"> Stay up to date </p>*/}\r\n                    {/*                <label class=\"text-start\"> Enter your email address below</label>*/}\r\n                    {/*                <div class=\"input-group mb-3 email-for-info-input mt-4\">*/}\r\n                    {/*                    <input type=\"text\" class=\"form-control \" placeholder=\"*****@gmail.com\"*/}\r\n                    {/*                           aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">*/}\r\n                    {/*                    <button class=\"btn \" type=\"button\" id=\"button-addon2\">submit</button>*/}\r\n                    {/*                </div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import {createGlobalStyle} from \"styled-components\"\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({theme}) => theme.body};\r\n    color: ${({theme}) => theme.text};\r\n  }\r\n\r\n  .card-header {\r\n    background-color: ${({theme}) => theme.cardHeader};\r\n    color: ${({theme}) => theme.textSec};\r\n    border-bottom-color: #dee2e6;\r\n  }\r\n\r\n  .card-header-tabs{\r\n    border-bottom-color: #dee2e6;\r\n  }\r\n\r\n  .MuiInput-underline:before {\r\n    border: none;\r\n  }\r\n\r\n  .ACC-nav-btns:hover{\r\n    filter: brightness(1.3);\r\n    background-color: ${({theme}) => theme.hoverBtn};\r\n    color: #7b7b7b;\r\n    transition: 0.2s;\r\n  }\r\n\r\n  .shadow {\r\n    box-shadow: 0 0.5rem 1rem ${({theme}) => theme.shadowColor} !important;\r\n  }\r\n\r\n  .shadow-sm {\r\n    box-shadow: 0 0.125rem 0.25rem ${({theme}) => theme.shadowColor} !important;\r\n  }\r\n\r\n  .shadow-lg {\r\n    box-shadow: 0 1rem 3rem ${({theme}) => theme.shadowColor} !important;\r\n  }\r\n\r\n  .switch-button {\r\n    border: 1px solid ${({theme}) => theme.border};\r\n  }\r\n\r\n  .arrow-tabs > ul > li:hover:before, .arrow-tabs > ul > li:focus:before {\r\n    box-shadow: 0 2px 3px ${({theme}) => theme.border};\r\n  }\r\n\r\n  .arrow-tabs > ul > li:hover:after, .arrow-tabs > ul > li:focus:after {\r\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px ${({theme}) => theme.border}\r\n  }\r\n\r\n  .bn632-hover.bn25 , .bnt-hover.bnt {\r\n    box-shadow: 0 4px 15px 0 ${({theme}) => theme.shadowColor};\r\n  }\r\n  \r\n\r\n  .css-p5v6ve-MuiAutocomplete-root .MuiInput-root .MuiInput-input, .MuiInputLabel-shrink {\r\n    text-align: center;\r\n  }\r\n\r\n  .MuiAutocomplete-hasPopupIcon.MuiAutocomplete-hasClearIcon.css-p5v6ve-MuiAutocomplete-root .MuiAutocomplete-inputRoot {\r\n    padding: 0;\r\n  }\r\n\r\n  .menu-dropdown {\r\n    background-color: ${({theme}) => theme.dropDown};\r\n  }\r\n\r\n  .card-body {\r\n    color: ${({theme}) => theme.text};\r\n\r\n  }\r\n\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus,\r\n  input:-webkit-autofill:active {\r\n    -webkit-box-shadow: 0 0 0 30px ${({theme}) => theme.body} inset !important;\r\n    -webkit-text-fill-color: ${({theme}) => theme.text};\r\n    -webkit-background-clip: ${({theme}) => theme.text};\r\n  }\r\n\r\n  .sidenav {\r\n    background: ${({theme}) => theme.sideNav};\r\n  }\r\n\r\n  .arrow-tabs > ul > li:after, .arrow-tabs > ul > li.ui-state-active:hover:after, .arrow-tabs > ul > li.ui-state-active:focus:after {\r\n    background-color: ${({theme}) => theme.bodySec};\r\n  }\r\n\r\n  .footer {\r\n    background-color: ${({theme}) => theme.footer};\r\n  }\r\n\r\n  .card {\r\n    border: solid 1px ${({theme}) => theme.border};\r\n    background-color: ${({theme}) => theme.body};\r\n    color: ${({theme}) => theme.text};\r\n    border-radius: 0;\r\n  }\r\n\r\n  .exchange-history, .Orders .card, .exchange-form {\r\n    border: none;\r\n  }\r\n\r\n  .financial-asset .card-body {\r\n    border-top: ${({theme}) => theme.cardBodyBorder};\r\n  }\r\n\r\n  .Est-total .title, .Est-total .crypto-type, .Est-percent .title {\r\n    color: ${({theme}) => theme.EstTotal};\r\n  }\r\n\r\n  .Est-total, .Est-percent {\r\n    color: ${({theme}) => theme.textSec};\r\n  }\r\n\r\n  .form-control:focus, .form-control {\r\n    color: ${({theme}) => theme.text};\r\n  }\r\n\r\n  .accountLevel-container .card-header {\r\n    background-color: ${({theme}) => theme.body};\r\n  }\r\n\r\n  .emptyCircle {\r\n    background-color: ${({theme}) => theme.body};\r\n  }\r\n\r\n  .verification-explanation .list-group-item {\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n\r\n  .circular-vip-level-container .vip-level {\r\n    background-image: ${({theme}) => theme.vipLvOne};\r\n  }\r\n\r\n\r\n  .crypto-title h1, .crypto-tags .badge {\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n\r\n  .market-cap h6, .fully-diluted h6, .volume-24h h6 {\r\n    color: ${({theme}) => theme.colorInfo}\r\n  }\r\n\r\n  .Deposit-title-container .explain {\r\n    color: ${({theme}) => theme.colorInfo}\r\n  }\r\n\r\n  #SCAT a{\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n\r\n  #secondTable-content\r\n  {\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n  \r\n  .exchange-form .switch-button{\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n  \r\n  .crypto-all {\r\n    background-color: ${({theme}) => theme.bodySec};\r\n  }\r\n\r\n  .arrow-tabs > ul > li {\r\n    background-color: ${({theme}) => theme.bodySec};\r\n  }\r\n\r\n  .arrow-tabs > ul > li a {\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n\r\n  .list-group-item.disabled, .list-group-item:disabled {\r\n    background-color: ${({theme}) => theme.body};\r\n    color: ${({theme}) => theme.background};\r\n  }\r\n\r\n  .glow {\r\n    color: ${({theme}) => theme.textSec};\r\n    border-top: ${({theme}) => theme.cardBorder};\r\n  }\r\n\r\n  .homepage-crypto-property.glow {\r\n    border-top: none;\r\n  }\r\n  \r\n  .glow:hover {\r\n    box-shadow: ${({theme}) => theme.glowShadow};\r\n  }\r\n\r\n  .row {\r\n    --bs-gutter-x: 0;\r\n  }\r\n\r\n  .marquee {\r\n    background-color: ${({theme}) => theme.marquee};\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n\r\n  .Deposit, .withdraw, .Transfer {\r\n    background-color: ${({theme}) => theme.toggleBorder};\r\n  }\r\n\r\n  #button-addon2 {\r\n    color: ${({theme}) => theme.background};\r\n  }\r\n\r\n  .messagesBox .card-body {\r\n    border-top: ${({theme}) => theme.cardBorder};\r\n  }\r\n\r\n  .go-trade-usdt {\r\n    color: ${({theme}) => theme.marquee};\r\n  }\r\n\r\n  .table-passage {\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n\r\n  .stared, .slide-dropdown, .info {\r\n    color: ${({theme}) => theme.textSec}\r\n  }\r\n`\r\n","export const lightTheme = {\r\n    body: '#fff',\r\n    text: '#363537',\r\n    textSec: '#111111',\r\n    toggleBorder: '#82969f',\r\n    background: '#363537',\r\n    border: 'rgba(0, 0, 0, 0.125)',\r\n    footer: `#fff`,\r\n    EstTotal: `#535353`,\r\n    bodySec: '#f2f2f2',\r\n    hoverBtn: '#999999',\r\n    cardHeader:`#fff`,\r\n    shadowColor:`rgba(0, 0, 0, 0.175)`,\r\n    dropDown:`#cccccc`,\r\n    cardBorder:`#535353 1px solid`,\r\n    autoComplete: '0 0 0 30px',\r\n    colorInfo: `#374449`,\r\n    marquee:'#e1e1e3',\r\n    sideNav:'#f0f0f0',\r\n    glowShadow:'3px 3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\r\n    vipLvOne:`linear-gradient(\r\n            to right,\r\n            #1f1f1f,\r\n            #636363,\r\n            #9c9c9c,\r\n            #e2e2e2\r\n    )`\r\n}\r\n\r\n\r\nexport const darkTheme = {\r\n    sideNav:'#012241',\r\n    autoComplete: '0 30px 20px 5px',\r\n    body: '#1f3044',\r\n    textSec: '#fff',\r\n    shadowColor:`rgba(169, 169, 169, 0.75)`,\r\n    bodySec: '#13182c',\r\n    hoverBtn: '#13182c',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#637e86',\r\n    background: '#999',\r\n    border: '#727272',\r\n    footer: `#000d1a`,\r\n    cardHeader:`#1f3044`,\r\n    EstTotal: `#cbcbcb`,\r\n    dropDown:`#6d6d6d`,\r\n    cardBorder:`#d8d8d8 1px solid`,\r\n    cardBodyBorder:`#d8d8d8 1px solid`,\r\n    colorInfo: `#637e86`,\r\n    marquee:'#262626',\r\n    glowShadow:'3px 3px 3px 3px rgba(168, 166, 166, 0.2), 1px 1px 1px 1px rgba(114, 113, 113, 0.3)',\r\n    vipLvOne:`linear-gradient(\r\n            to right,\r\n            #e2e2e2,\r\n            #1f1f1f,\r\n            #636363,\r\n            #9c9c9c\r\n\r\n    )`\r\n}\r\n","import React, {useState} from 'react';\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {GlobalStyles} from \"./GlobalStyles\";\r\nimport {lightTheme, darkTheme} from \"./Theme\"\r\n\r\nexport const Theme = React.createContext();\r\n\r\nconst local = localStorage.getItem(\"themeMode\") || 'light'\r\n\r\nconst ThemeContext = (props) => {\r\n\r\n    const [themName, setThemName] = useState(localStorage.getItem(\"themeMode\") ? localStorage.getItem(\"themeMode\") : 'Light');\r\n    const [theme, setTheme] = useState(local);\r\n\r\n    const themeChanger = () => {\r\n        theme === 'light' ? setTheme('dark') : setTheme('light');\r\n        if (theme === 'light') {\r\n            localStorage.setItem(\"themeMode\", \"dark\");\r\n            setThemName('Dark');\r\n        } else {\r\n            localStorage.setItem(\"themeMode\", \"light\");\r\n            setThemName('Light');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Theme.Provider value={{theme, themeChanger, themName}}>\r\n            <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n                <>\r\n                    <GlobalStyles/>\r\n                    {props.children}\r\n                </>\r\n            </ThemeProvider>\r\n        </Theme.Provider>\r\n    );\r\n};\r\n\r\nexport default ThemeContext;\r\n","export default __webpack_public_path__ + \"static/media/photo_2021-06-30_11-38-49.6b29352d.jpg\";","import React, {useContext, useState} from \"react\";\r\nimport \"../css/bootstrap.css\";\r\nimport \"../css/NavBar.scss\";\r\nimport {CgDarkMode} from \"@react-icons/all-files/cg/CgDarkMode\";\r\nimport {RiAccountPinBoxLine} from \"@react-icons/all-files/ri/RiAccountPinBoxLine\";\r\nimport {IoMdSettings} from \"@react-icons/all-files/io/IoMdSettings\";\r\nimport TranslateOutlinedIcon from '@mui/icons-material/TranslateOutlined';\r\nimport {FaCheck} from \"@react-icons/all-files/fa/FaCheck\";\r\nimport {BsBellFill} from \"@react-icons/all-files/bs/BsBellFill\";\r\nimport {FaBars} from \"@react-icons/all-files/fa/FaBars\";\r\nimport {FaWallet} from \"@react-icons/all-files/fa/FaWallet\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport {Theme} from \"../ThemeContext\";\r\nimport {Avatar, Badge, Divider, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\r\nimport {RiLogoutBoxRLine} from \"@react-icons/all-files/ri/RiLogoutBoxRLine\";\r\nimport pic from \"../css/photo_2021-06-30_11-38-49.jpg\";\r\nimport List from \"@material-ui/core/List\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';\r\nimport axios from \"axios\";\r\n\r\nconst NavBar = (props) => {\r\n    const [toggle, setToggle] = useState(false);\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    const history = useHistory();\r\n    const context = useContext(Context);\r\n    const theme = useContext(Theme);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [languageOpen, setLanguageOpen] = useState(false);\r\n\r\n    const logOut = async () => {\r\n        setIsLoading(true)\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get('auth/logout' , {\r\n                headers:{\r\n                    'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            localStorage.removeItem(\"token\");\r\n\r\n            refreshPage();\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const refreshPage = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <nav\r\n            className={`navbar navbar-expand-lg fixed-top ${context.locale == \"fa\" && \"font-face-farsi\"} ${props.isOpen && 'd-none'} `}\r\n            id=\"navMenu\">\r\n            <div className=\"container-fluid ps-3\" id=\"navbar-C\">\r\n                <a\r\n                    onClick={() => {\r\n                        history.push(\"/\");\r\n                        refreshPage()\r\n                    }}\r\n                    className=\"navbar-brand dark-them\" href=\"#\">\r\n                    <FormattedMessage\r\n                        id=\"NavBar.Title\"\r\n                        defaultMessage=\"Sigloy\"\r\n                    />\r\n                </a>\r\n                {\r\n                    !isLoggedIn &&\r\n                    <button type=\"button\" onClick={() => history.push(\"login\")} className={`btn`} id=\"hidden-started\">\r\n                        <FormattedMessage\r\n                            id=\"NavBar.GetStart\"\r\n                            defaultMessage=\"Get Start\"\r\n                        />\r\n                    </button>\r\n                }\r\n\r\n\r\n                <div className=\"d-flex\">\r\n                    <li className={`nav-item Nav-menu secLan`}>\r\n                        <button className=\"Nav-menu-title languageIco-hidden  btn\" aria-controls=\"simple-menu\"\r\n                                aria-haspopup=\"true\">\r\n                            <TranslateOutlinedIcon className=\"fas fa-id-badge\"/>{\" \"}\r\n                        </button>\r\n\r\n                        <ul className=\"Nav-menu-dropdown language-dropdown\">\r\n                            <ListItem\r\n                                onClick={() => context.selectLanguage('en')}><ListItemText> English {context.locale === 'en' &&\r\n                            <span className='checked'><FaCheck/></span>}</ListItemText></ListItem>\r\n                            <ListItem\r\n                                onClick={() => context.selectLanguage('fa')}><ListItemText> فارسی {context.locale === 'fa' &&\r\n                            <span className='checked'><FaCheck/></span>}</ListItemText></ListItem>\r\n\r\n                        </ul>\r\n                    </li>\r\n                    <span className=\"DarkMode-hidden\" onClick={theme.themeChanger}>\r\n                        <a className=\"nav-link DarkMode dark-them\">\r\n                            <LightModeOutlinedIcon className=\"fas fa-adjust\"/>\r\n                        </a>\r\n                    </span>\r\n                    <button\r\n                        className=\"navbar-toggler \"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            setToggle(!toggle);\r\n                        }}\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarToggleExternalContent\"\r\n                        aria-controls=\"navbarToggleExternalContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n          <span className=\"btn dark-them btn-outline-light\">\r\n            <FaBars className=\"fas fa-bars\"/>\r\n          </span>\r\n                    </button>\r\n                </div>\r\n                <div className={`collapse navbar-collapse ${toggle && \"d-block\"}`}>\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 start-items\">\r\n                        {/*<li className=\"nav-item \">*/}\r\n                        {/*    <a*/}\r\n\r\n                        {/*        className=\"nav-link dark-them\" href=\"#\">*/}\r\n                        {/*        <FormattedMessage*/}\r\n                        {/*            id=\"NavBar.BuyCrypto\"*/}\r\n                        {/*            defaultMessage=\"Buy Crypto\"*/}\r\n                        {/*        />*/}\r\n                        {/*    </a>*/}\r\n                        {/*</li>*/}\r\n\r\n                        <li className={`nav-item `}>\r\n                            <a onClick={() => history.push(\"markets\")}\r\n                               className=\"nav-link dark-them\" href=\"#\">\r\n                                <FormattedMessage\r\n                                    id=\"NavBar.Market\"\r\n                                    defaultMessage=\"Market\"\r\n                                />\r\n                            </a>\r\n                        </li>\r\n\r\n\r\n                        <li className={`nav-item `}>\r\n                            <a onClick={() => history.push(\"Trade?pair=btcusdt\")}\r\n                               className=\"nav-link dark-them\" href=\"#\">\r\n                                <FormattedMessage\r\n                                    id=\"NavBar.Trade\"\r\n                                    defaultMessage=\"Trade\"\r\n                                />\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className={`nav-item ${!isLoggedIn && \"d-none\"}`}>\r\n                            <a onClick={() => history.push(\"Convert\")}\r\n                               className=\"nav-link dark-them\" href=\"#\">\r\n                                {/*<FormattedMessage*/}\r\n                                {/*    id=\"NavBar.Trade\"*/}\r\n                                {/*    defaultMessage=\"Trade\"*/}\r\n                                {/*/>*/}\r\n                                Convert\r\n                            </a>\r\n                        </li>\r\n\r\n\r\n                        {/*<li className=\"nav-item  \">*/}\r\n                        {/*    <a className=\"nav-link dark-them\" href=\"#\">*/}\r\n                        {/*        <FormattedMessage*/}\r\n                        {/*            id=\"NavBar.Finance\"*/}\r\n                        {/*            defaultMessage=\"Finance\"*/}\r\n                        {/*        />*/}\r\n                        {/*    </a>*/}\r\n                        {/*</li>*/}\r\n                        {/*<li className=\"nav-item  \">*/}\r\n                        {/*    <a className=\"nav-link dark-them\" href=\"#\">*/}\r\n                        {/*        NFT*/}\r\n                        {/*    </a>*/}\r\n                        {/*</li>*/}\r\n                    </ul>\r\n                    <span className=\" navbar-text \">\r\n            <div className>\r\n              <ul className=\"navbar-nav end-items mt-1\" id=\"first-nav\">\r\n                <li className={`nav-item Nav-menu ${!isLoggedIn && \"d-none\"}`}>\r\n                         <button className=\"Nav-menu-title walletIco btn\" aria-controls=\"simple-menu\"\r\n                                 aria-haspopup=\"true\">\r\n                    <FaWallet className=\"fas fa-id-badge\"/>{\" \"}\r\n                         </button>\r\n\r\n                      <ul className=\"Nav-menu-dropdown walletDropdown\">\r\n                                <ListItem\r\n                                    onClick={() => history.push(\"wallet_overview\")}><ListItemText>Wallet OverView</ListItemText></ListItem>\r\n                                <ListItem onClick={() => history.push(\"withdraw\")}><ListItemText>Withdraw</ListItemText></ListItem>\r\n                                <ListItem\r\n                                    onClick={() => history.push(\"deposit\")}><ListItemText>Deposit</ListItemText></ListItem>\r\n                      </ul>\r\n\r\n                </li>\r\n\r\n                      <li className={`nav-item Nav-menu ${!isLoggedIn && \"d-none\"}`}>\r\n                            <button className=\"Nav-menu-title btn\" aria-controls=\"simple-menu\"\r\n                                    aria-haspopup=\"true\">\r\n                                <RiAccountPinBoxLine className=\"fas fa-id-badge\"/>\r\n                            </button>\r\n                          {/*<a onClick={() => history.push(\"withdraw\")}*/}\r\n                          {/*   className=\"nav-link bell dark-them m-0\" href=\"#\">*/}\r\n                          {/*    <FormattedMessage*/}\r\n                          {/*        id=\"NavBar.Withdraw\"*/}\r\n                          {/*        defaultMessage=\"Finance\"*/}\r\n                          {/*    />{\" \"}*/}\r\n                          {/*</a>*/}\r\n\r\n                          <ul className=\"Nav-menu-dropdown\">\r\n\r\n                                 <ListItem alignItems=\"flex-start\">\r\n\r\n        <ListItemAvatar>\r\n          <Avatar style={{width: 60, height: 60}} alt=\"AmirAslani\" src={pic}/>\r\n        </ListItemAvatar>\r\n\r\n                     <IconButton style={{textAlign: \"left\"}} disabled={true}>\r\n                                     <Badge badgeContent={'VIP3'} color=\"secondary\">\r\n        <ListItemText\r\n            secondary={\r\n                <React.Fragment>\r\n                    <Typography\r\n                        component=\"div\"\r\n                        variant=\"body2\"\r\n                        color=\"text.primary\"\r\n                    >\r\n                        Amir Aslani\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"div\"\r\n                        variant=\"body2\"\r\n                        color=\"text.primary\"\r\n                    >\r\n                        a.aslani99j@gmail.com\r\n                    </Typography>\r\n\r\n                </React.Fragment>\r\n            }\r\n        />\r\n                                     </Badge>\r\n                     </IconButton>\r\n      </ListItem>\r\n\r\n      <Divider variant=\"inset\" component=\"li\"/>\r\n                              <li style={{textAlign: \"left\"}} onClick={logOut}><ListItemText>Logout <RiLogoutBoxRLine/> </ListItemText></li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                           <li className={`nav-item Nav-menu ${!isLoggedIn && \"d-none\"}`}>\r\n          <button className=\"Nav-menu-title walletIco btn\" aria-controls=\"simple-menu\"\r\n                  aria-haspopup=\"true\">\r\n                    <IoMdSettings className=\"fas fa-id-badge\"/>{\" \"}\r\n          </button>\r\n\r\n                                    <ul className=\"Nav-menu-dropdown account-dropdown\">\r\n                                <ListItem onClick={() => history.push(\"settings\")}><ListItemText>Settings</ListItemText></ListItem>\r\n                                <ListItem\r\n                                    onClick={() => history.push(\"account\")}><ListItemText>Account</ListItemText></ListItem>\r\n                                <ListItem\r\n                                    onClick={() => history.push(\"accountLevel\")}><ListItemText>Account Level</ListItemText></ListItem>\r\n\r\n                      </ul>\r\n                </li>\r\n\r\n\r\n\r\n                <li className={`nav-item ${!isLoggedIn && \"d-none\"}`}>\r\n                  <a onClick={() => history.push(\"messages\")}\r\n                     className=\"nav-link bell dark-them m-0\" href=\"#\">\r\n                         <Badge badgeContent={4} color=\"secondary\">\r\n      <BsBellFill className=\"fas fa-bell\"/>\r\n    </Badge>{\" \"}\r\n                  </a>\r\n                </li>\r\n                <li className={`nav-item ${isLoggedIn && \"d-none\"} `}>\r\n                  <button\r\n                      onClick={() => history.push(\"login\")}\r\n                      type=\"button\" className=\"btn\" id=\"started\">\r\n                         <FormattedMessage\r\n                             id=\"NavBar.GetStart\"\r\n                             defaultMessage=\"Get Start\"\r\n                         />\r\n                  </button>\r\n                </li>\r\n\r\n                                       <li className={`nav-item Nav-menu languageChanger`}>\r\n          <button className=\"Nav-menu-title languageIco btn\" aria-controls=\"simple-menu\"\r\n                  aria-haspopup=\"true\">\r\n                    <TranslateOutlinedIcon className=\"fas fa-id-badge\"/>{\" \"}\r\n          </button>\r\n\r\n                                    <ul className=\"Nav-menu-dropdown language-dropdown\">\r\n                                <ListItem\r\n                                    onClick={() => context.selectLanguage('en')}><ListItemText> English {context.locale === 'en' &&\r\n                                <span className='checked'><FaCheck/></span>}</ListItemText></ListItem>\r\n                                <ListItem\r\n                                    onClick={() => context.selectLanguage('fa')}><ListItemText> فارسی {context.locale === 'fa' &&\r\n                                <span className='checked'><FaCheck/></span>}</ListItemText></ListItem>\r\n\r\n                      </ul>\r\n                </li>\r\n\r\n                  <li className=\"nav-item pe-3 ps-3 darkThemAll\" onClick={theme.themeChanger}>\r\n                  <a\r\n                      className=\"nav-link DarkMode dark-them\">\r\n                    <LightModeOutlinedIcon className=\"fas fa-adjust\"/>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </span>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import $ from 'jquery'\r\n//*************************************************************************************************************************\r\n\r\n//sliding tables Jquary\r\n$(document).ready(function () {\r\n\r\n    $(document).ready(jqUpdateSize);    // When the page first loads\r\n    $(window).resize(jqUpdateSize);     // When the browser changes size\r\n\r\n    function jqUpdateSize() {\r\n\r\n\r\n\r\n\r\n        if ($(window).width() > 1365) {\r\n\r\n\r\n\r\n            $(\"#top-losers\").click(function () {\r\n                var selectTab = $('#top-losers').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#second-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#first-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#third-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#forth-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#second-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list1.parent().addClass(\"border-hover\");\r\n                list4.parent().addClass(\"border-hover\");\r\n                list3.parent().addClass(\"border-hover\");\r\n                list2.parent().removeClass(\"border-hover\");\r\n                list1.addClass('disabled');\r\n                list3.addClass('disabled');\r\n                list4.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#second-table .crypto-property').removeClass('glow');\r\n\r\n            });\r\n\r\n            $(\".crypto-list1\").click(function () {\r\n\r\n                var selectTab = $('#top-gainer').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#first-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#second-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#third-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#forth-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#first-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list2.parent().addClass(\"border-hover\");\r\n                list4.parent().addClass(\"border-hover\");\r\n                list3.parent().addClass(\"border-hover\");\r\n                list1.parent().removeClass(\"border-hover\");\r\n                list2.addClass('disabled');\r\n                list3.addClass('disabled');\r\n                list4.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#first-table .crypto-property').removeClass('glow');\r\n            });\r\n\r\n            $(\"#top-gainer\").click(function () {\r\n\r\n                var selectTab = $('#top-gainer').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#first-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#second-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#third-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#forth-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#first-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list2.parent().addClass(\"border-hover\");\r\n                list4.parent().addClass(\"border-hover\");\r\n                list3.parent().addClass(\"border-hover\");\r\n                list1.parent().removeClass(\"border-hover\");\r\n                list2.addClass('disabled');\r\n                list3.addClass('disabled');\r\n                list4.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#first-table .crypto-property').removeClass('glow');\r\n\r\n                //****************************************************************************************************************\r\n\r\n            });\r\n\r\n            $(\".crypto-list2\").click(function () {\r\n                var selectTab = $('#top-losers').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#second-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#first-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#third-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#forth-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#second-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list1.parent().addClass(\"border-hover\");\r\n                list4.parent().addClass(\"border-hover\");\r\n                list3.parent().addClass(\"border-hover\");\r\n                list2.parent().removeClass(\"border-hover\");\r\n                list1.addClass('disabled');\r\n                list3.addClass('disabled');\r\n                list4.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#second-table .crypto-property').removeClass('glow');\r\n\r\n                //****************************************************************************************************************\r\n            });\r\n\r\n            $(\"#Value-Leaders\").click(function () {\r\n\r\n                var selectTab = $('#Value-Leaders').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#third-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#second-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#first-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#forth-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#third-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list1.parent().addClass(\"border-hover\");\r\n                list4.parent().addClass(\"border-hover\");\r\n                list2.parent().addClass(\"border-hover\");\r\n                list3.parent().removeClass(\"border-hover\");\r\n                list1.addClass('disabled');\r\n                list2.addClass('disabled');\r\n                list4.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#third-table .crypto-property').removeClass('glow');\r\n\r\n                //****************************************************************************************************************\r\n            });\r\n\r\n            $(\".crypto-list3\").click(function () {\r\n\r\n                var selectTab = $('#Value-Leaders').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#third-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#second-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#first-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#forth-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#third-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'show'\r\n                }, 1000   )\r\n                $('.crypto-list2').animate({\r\n                    width: 'show'\r\n                }, 1000  )\r\n                $('.crypto-list3').animate({\r\n                    width: 'hide'\r\n                }, 1000 )\r\n                $('.crypto-list4').animate({\r\n                    width: 'show'\r\n                }, 1000)\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list1.parent().addClass(\"border-hover\");\r\n                list4.parent().addClass(\"border-hover\");\r\n                list2.parent().addClass(\"border-hover\");\r\n                list3.parent().removeClass(\"border-hover\");\r\n                list1.addClass('disabled');\r\n                list2.addClass('disabled');\r\n                list4.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#third-table .crypto-property').removeClass('glow');\r\n\r\n                //****************************************************************************************************************\r\n            });\r\n\r\n            $(\"#Newest-Coins\").click(function () {\r\n\r\n                var selectTab = $('#Newest-Coins').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#forth-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#third-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#second-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#first-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#forth-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list1.parent().addClass(\"border-hover\");\r\n                list3.parent().addClass(\"border-hover\");\r\n                list2.parent().addClass(\"border-hover\");\r\n                list4.parent().removeClass(\"border-hover\");\r\n                list1.addClass('disabled');\r\n                list2.addClass('disabled');\r\n                list3.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#forth-table .crypto-property').removeClass('glow');\r\n\r\n            });\r\n\r\n            $(\".crypto-list4\").click(function () {\r\n                var selectTab = $('#Newest-Coins').parent();\r\n                var selectedTab = $('.ui-corner-all .ui-tabs-active');\r\n                selectedTab.removeClass(\"ui-tabs-active ui-state-active ui-state-hover\").attr(\"aria-selected\", false);\r\n                selectTab.addClass(\"ui-tabs-active ui-state-active\").attr(\"aria-selected\", true);\r\n\r\n                $(\"#forth-table\").animate({\r\n                    width: 'show'\r\n                }, \"slow\");\r\n                $(\"#third-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#second-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n                $(\"#first-table\").animate({\r\n                    width: 'hide'\r\n                }, \"slow\");\r\n\r\n\r\n                var list2 = $('.crypto-list2 .list-group-item');\r\n                var list1 = $('.crypto-list1 .list-group-item');\r\n                var list3 = $('.crypto-list3 .list-group-item');\r\n                var list4 = $('.crypto-list4 .list-group-item');\r\n                var table2_rows = $('#forth-table tr');\r\n\r\n                $('.crypto-list1').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list2').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list3').animate({\r\n                    width: 'show'\r\n                }, 1000);\r\n                $('.crypto-list4').animate({\r\n                    width: 'hide'\r\n                }, 1000);\r\n\r\n                // $('.crypto-list2 .list-group-item .arrow-right').css(\"display\", \"block\");\r\n                // $('.crypto-list1 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list3 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                // $('.crypto-list4 .list-group-item .arrow-right').css(\"display\", \"none\");\r\n                list1.parent().addClass(\"border-hover\");\r\n                list3.parent().addClass(\"border-hover\");\r\n                list2.parent().addClass(\"border-hover\");\r\n                list4.parent().removeClass(\"border-hover\");\r\n                list1.addClass('disabled');\r\n                list2.addClass('disabled');\r\n                list3.addClass('disabled');\r\n                table2_rows.addClass('glow');\r\n                $('#forth-table .crypto-property').removeClass('glow');\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n});\r\n\r\n\r\n//*************************************************************************************************************************\r\n//***************************************************************************************************************************\r\n","import $ from 'jquery';\r\n\r\n$(document).ready(function () {\r\n    $('.hoverAll').first().hover(function () {\r\n        $('.first-row').css({\r\n            \"color\": \"#444\",\r\n            \" box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.first-row td').css({\"transform\": \"scale(1.1)\"});\r\n\r\n    }, function () {\r\n        $('.first-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.first-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().hover(function () {\r\n        $('.second-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.second-row td').css({\"transform\": \"scale(1.1)\"});\r\n    }, function () {\r\n        $('.second-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.second-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().next().hover(function () {\r\n        $('.third-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.third-row td').css({\"transform\": \"scale(1.1)\"});\r\n    }, function () {\r\n        $('.third-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.third-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().next().next().hover(function () {\r\n        $('.forth-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.forth-row td').css({\"transform\": \"scale(1.1)\"});\r\n    }, function () {\r\n        $('.forth-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.forth-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().next().next().next().hover(function () {\r\n        $('.fifth-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.fifth-row td').css({\"transform\": \"scale(1.1)\"});\r\n    }, function () {\r\n        $('.fifth-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.fifth-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().next().next().next().next().hover(function () {\r\n        $('.sixth-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"13px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.sixth-row td').css({\"transform\": \"scale(1.1)\"});\r\n\r\n    }, function () {\r\n        $('.sixth-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.sixth-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().next().next().next().next().next().hover(function () {\r\n        $('.seventh-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.seventh-row td').css({\"transform\": \"scale(1.1)\"});\r\n    }, function () {\r\n        $('.seventh-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.seventh-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n    $(\".hoverAll\").first().next().next().next().next().next().next().next().hover(function () {\r\n        $('.eighth-row').css({\r\n            \"color\": \"#444\",\r\n            \"box-shadow\": \"3px 3px 3px rgba(0, 0, 0, 0.2), 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n            \"transition\": \"0.5s\"\r\n        });\r\n        $('.eighth-row td').css({\"transform\": \"scale(1.1)\"});\r\n    }, function () {\r\n        $('.eighth-row').css({\"color\": \"#212529\", \"box-shadow\": \"resize\"});\r\n        $('.eighth-row td').css({\"transform\": \"(0.0)\"});\r\n    });\r\n});\r\n\r\n//**********************************************************************************************************************\r\n\r\nfunction firstPriceCard() {\r\n\r\n    var adjs1 = [\"<ul class=\\\"list-group list-group-horizontal\\\">\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class= \\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n    \"                            </p>\\n\" +\r\n    \"                            </li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                        BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n    \"                        <p class=\\\"card-text \\\">\\n\" +\r\n    \"                            <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n    \"                            <br>\\n\" +\r\n    \"                            <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n    \"                        </p></li>\\n\" +\r\n    \"                    </ul> , \" +\r\n    \"   <ul class=\\\"list-group list-group-horizontal\\\">\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            CLV/USDT <span class=\\\"percent text-danger text-success\\\"> +132.55%</span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 1.0483</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$1.014</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class= \\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n    \"                            </p></li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n    \"                            <p class=\\\"card-text \\\">\\n\" +\r\n    \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n    \"                                <br>\\n\" +\r\n    \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n    \"                            </p>\\n\" +\r\n    \"                            </li>\\n\" +\r\n    \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n    \"                        BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n    \"                        <p class=\\\"card-text \\\">\\n\" +\r\n    \"                            <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n    \"                            <br>\\n\" +\r\n    \"                            <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n    \"                        </p></li>\\n\" +\r\n    \"                    </ul>\"\r\n        ,\r\n        \"<ul class=\\\"list-group list-group-horizontal\\\">\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class= \\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n        \"                            </p>\\n\" +\r\n        \"                            </li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                        BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n        \"                        <p class=\\\"card-text \\\">\\n\" +\r\n        \"                            <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n        \"                            <br>\\n\" +\r\n        \"                            <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n        \"                        </p></li>\\n\" +\r\n        \"                    </ul> , \" +\r\n        \"   <ul class=\\\"list-group list-group-horizontal\\\">\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            CLV/USDT <span class=\\\"percent text-danger text-success\\\"> +132.55%</span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 1.0483</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$1.014</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class= \\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n        \"                            </p></li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                            BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n        \"                            <p class=\\\"card-text \\\">\\n\" +\r\n        \"                                <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n        \"                                <br>\\n\" +\r\n        \"                                <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n        \"                            </p>\\n\" +\r\n        \"                            </li>\\n\" +\r\n        \"                        <li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">\\n\" +\r\n        \"                        BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n        \"                        <p class=\\\"card-text \\\">\\n\" +\r\n        \"                            <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n        \"                            <br>\\n\" +\r\n        \"                            <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n        \"                        </p></li>\\n\" +\r\n        \"                    </ul>\"\r\n    ];\r\n\r\n\r\n    var sentence = $('#sentence1');\r\n    var textSlider = $('#textSlider1');\r\n    var stop = false;\r\n    var i;\r\n\r\n    // version of our adjective list\r\n    function getList() {\r\n        return $('.adj');\r\n    }\r\n\r\n    // function to build the adjective list\r\n    // args: adjective array\r\n    function build(arr1) {\r\n        for (i = 0; i < arr1.length; i++) {\r\n            var item1 = \"<div class=\\\"all-elements adj\\\">\";\r\n            $(textSlider).append(item1 + arr1[i] + \"</div>\");\r\n        }\r\n    }\r\n\r\n    // function to resize adjective list\r\n    // args: adjective list item\r\n    function resize(el) {\r\n        $(textSlider).animate({\r\n            width: $(el).width(),\r\n        }, 200);\r\n    }\r\n\r\n    // function to add slide-in transition\r\n    // args: element that needs to slide\r\n    function slideIn(el) {\r\n        // duration slide is on screen\r\n        var hold = 6000;\r\n        // resize area to sliding element\r\n        resize($(el));\r\n        // add slide-in class\r\n        $(el).addClass('slide-in');\r\n        // after 'hold' duration slide-out current item\r\n        // then slide in next item\r\n        setTimeout(function () {\r\n            // check to see if loop should continue\r\n            if (stop === true) {\r\n                stop = false;\r\n                return;\r\n            }\r\n            // slide current element out\r\n            slideOut(el);\r\n            // slide in next element in queue\r\n            slideIn($(el).next());\r\n        }, hold);\r\n    }\r\n\r\n    // function to add slide-out transition\r\n    // args: element that needs to slide\r\n    function slideOut(el) {\r\n        // remove current class and add slide-out transition\r\n        $(el).removeClass('slide-in').addClass('slide-out');\r\n        // wait for slide tramsition to finish then\r\n        // call 'change' function\r\n        setTimeout(function () {\r\n            change();\r\n        }, 200);\r\n    }\r\n\r\n    // function to re-arrange adjective list\r\n    function change() {\r\n        // store last item index\r\n        var i = adjs1.length - 1;\r\n        // detach element that has slide-out class\r\n        // put to the bottom of the list after\r\n        // the last item\r\n        $('.adj:eq(' + i + ')').after($('.slide-out').detach());\r\n        // remove class to send element back to original position\r\n        $('.adj').removeClass('slide-out');\r\n    }\r\n\r\n    // build slider\r\n    build(adjs1);\r\n    // init loop\r\n    slideIn(getList()[0]);\r\n}\r\n\r\n// function secondPriceCard() {\r\n//     var adjs1 = [\"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                        BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                          XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                              AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                                  BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n//     \"                    </p>\"];\r\n//\r\n//\r\n//     sentence = $('#sentence2'),\r\n//         textSlider = $('#textSlider2'),\r\n//         stop = false;\r\n//\r\n//     // version of our adjective list\r\n//     function getList() {\r\n//         return $('.adj2');\r\n//     }\r\n//\r\n//     // function to build the adjective list\r\n//     // args: adjective array\r\n//     function build(arr1) {\r\n//         for (i = 0; i < arr1.length; i++) {\r\n//             var item1 = \"<div class=\\\"all-elements adj2\\\">\";\r\n//             $(textSlider).append(item1 + arr1[i] + \"</div>\");\r\n//         }\r\n//     }\r\n//\r\n//     // function to resize adjective list\r\n//     // args: adjective list item\r\n//     function resize(el) {\r\n//         $(textSlider).animate({\r\n//             width: $(el).width(),\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to add slide-in transition\r\n//     // args: element that needs to slide\r\n//     function slideIn(el) {\r\n//         // duration slide is on screen\r\n//         var hold = 2000;\r\n//         // resize area to sliding element\r\n//         resize($(el));\r\n//         // add slide-in class\r\n//         $(el).addClass('slide-in2');\r\n//         // after 'hold' duration slide-out current item\r\n//         // then slide in next item\r\n//         setTimeout(function () {\r\n//             // check to see if loop should continue\r\n//             if (stop === true) {\r\n//                 stop = false;\r\n//                 return;\r\n//             }\r\n//             // slide current element out\r\n//             slideOut(el);\r\n//             // slide in next element in queue\r\n//             slideIn($(el).next());\r\n//         }, hold);\r\n//         var t1 = performance.now()\r\n//     }\r\n//\r\n//     // function to add slide-out transition\r\n//     // args: element that needs to slide\r\n//     function slideOut(el) {\r\n//         // remove current class and add slide-out transition\r\n//         $(el).removeClass('slide-in2').addClass('slide-out2');\r\n//         // wait for slide tramsition to finish then\r\n//         // call 'change' function\r\n//         setTimeout(function () {\r\n//             change();\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to re-arrange adjective list\r\n//     function change() {\r\n//         // store last item index\r\n//         var i = adjs1.length - 1;\r\n//         // detach element that has slide-out class\r\n//         // put to the bottom of the list after\r\n//         // the last item\r\n//         $('.adj2:eq(' + i + ')').after($('.slide-out2').detach());\r\n//         // remove class to send element back to original position\r\n//         $('.adj2').removeClass('slide-out2');\r\n//     }\r\n//\r\n//     // build slider\r\n//     build(adjs1);\r\n//     // init loop\r\n//     slideIn(getList()[0]);\r\n//\r\n// }\r\n//\r\n// function thirdPriceCard() {\r\n//\r\n//     var adjs1 = [\"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                        BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                          XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                              AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                                  BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n//     \"                    </p>\"];\r\n//\r\n//\r\n//     sentence = $('#sentence3'),\r\n//         textSlider = $('#textSlider3'),\r\n//         stop = false;\r\n//\r\n//     // version of our adjective list\r\n//     function getList() {\r\n//         return $('.adj3');\r\n//     }\r\n//\r\n//     // function to build the adjective list\r\n//     // args: adjective array\r\n//     function build(arr1) {\r\n//         for (i = 0; i < arr1.length; i++) {\r\n//             var item1 = \"<div class=\\\"all-elements adj3\\\">\";\r\n//             $(textSlider).append(item1 + arr1[i] + \"</div>\");\r\n//         }\r\n//     }\r\n//\r\n//     // function to resize adjective list\r\n//     // args: adjective list item\r\n//     function resize(el) {\r\n//         $(textSlider).animate({\r\n//             width: $(el).width(),\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to add slide-in transition\r\n//     // args: element that needs to slide\r\n//     function slideIn(el) {\r\n//         // duration slide is on screen\r\n//         var hold = 2000;\r\n//         // resize area to sliding element\r\n//         resize($(el));\r\n//         // add slide-in class\r\n//         $(el).addClass('slide-in3');\r\n//         // after 'hold' duration slide-out current item\r\n//         // then slide in next item\r\n//         setTimeout(function () {\r\n//             // check to see if loop should continue\r\n//             if (stop === true) {\r\n//                 stop = false;\r\n//                 return;\r\n//             }\r\n//             // slide current element out\r\n//             slideOut(el);\r\n//             // slide in next element in queue\r\n//             slideIn($(el).next());\r\n//         }, hold);\r\n//     }\r\n//\r\n//     // function to add slide-out transition\r\n//     // args: element that needs to slide\r\n//     function slideOut(el) {\r\n//         // remove current class and add slide-out transition\r\n//         $(el).removeClass('slide-in3').addClass('slide-out3');\r\n//         // wait for slide tramsition to finish then\r\n//         // call 'change' function\r\n//         setTimeout(function () {\r\n//             change();\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to re-arrange adjective list\r\n//     function change() {\r\n//         // store last item index\r\n//         var i = adjs1.length - 1;\r\n//         // detach element that has slide-out class\r\n//         // put to the bottom of the list after\r\n//         // the last item\r\n//         $('.adj3:eq(' + i + ')').after($('.slide-out3').detach());\r\n//         // remove class to send element back to original position\r\n//         $('.adj3').removeClass('slide-out3');\r\n//     }\r\n//\r\n//     // build slider\r\n//     build(adjs1);\r\n//     // init loop\r\n//     slideIn(getList()[0]);\r\n// }\r\n//\r\n// function forthPriceCard() {\r\n//\r\n//     var adjs1 = [\"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                        BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                          XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                              AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                                  BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n//     \"                    </p>\"];\r\n//\r\n//\r\n//     sentence = $('#sentence4'),\r\n//         textSlider = $('#textSlider4'),\r\n//         stop = false;\r\n//\r\n//     // version of our adjective list\r\n//     function getList() {\r\n//         return $('.adj4');\r\n//     }\r\n//\r\n//     // function to build the adjective list\r\n//     // args: adjective array\r\n//     function build(arr1) {\r\n//         for (i = 0; i < arr1.length; i++) {\r\n//             var item1 = \"<div class=\\\"all-elements adj4\\\">\";\r\n//             $(textSlider).append(item1 + arr1[i] + \"</div>\");\r\n//         }\r\n//     }\r\n//\r\n//     // function to resize adjective list\r\n//     // args: adjective list item\r\n//     function resize(el) {\r\n//         $(textSlider).animate({\r\n//             width: $(el).width(),\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to add slide-in transition\r\n//     // args: element that needs to slide\r\n//     function slideIn(el) {\r\n//         // duration slide is on screen\r\n//         var hold = 2000;\r\n//         // resize area to sliding element\r\n//         resize($(el));\r\n//         // add slide-in class\r\n//         $(el).addClass('slide-in4');\r\n//         // after 'hold' duration slide-out current item\r\n//         // then slide in next item\r\n//         setTimeout(function () {\r\n//             // check to see if loop should continue\r\n//             if (stop === true) {\r\n//                 stop = false;\r\n//                 return;\r\n//             }\r\n//             // slide current element out\r\n//             slideOut(el);\r\n//             // slide in next element in queue\r\n//             slideIn($(el).next());\r\n//         }, hold);\r\n//     }\r\n//\r\n//     // function to add slide-out transition\r\n//     // args: element that needs to slide\r\n//     function slideOut(el) {\r\n//         // remove current class and add slide-out transition\r\n//         $(el).removeClass('slide-in4').addClass('slide-out4');\r\n//         // wait for slide tramsition to finish then\r\n//         // call 'change' function\r\n//         setTimeout(function () {\r\n//             change();\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to re-arrange adjective list\r\n//     function change() {\r\n//         // store last item index\r\n//         var i = adjs1.length - 1;\r\n//         // detach element that has slide-out class\r\n//         // put to the bottom of the list after\r\n//         // the last item\r\n//         $('.adj4:eq(' + i + ')').after($('.slide-out4').detach());\r\n//         // remove class to send element back to original position\r\n//         $('.adj4').removeClass('slide-out4');\r\n//     }\r\n//\r\n//     // build slider\r\n//     build(adjs1);\r\n//     // init loop\r\n//     slideIn(getList()[0]);\r\n// }\r\n//\r\n// function fifthPriceCard() {\r\n//\r\n//     var adjs1 = [\"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                        BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                          XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                              AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                                  BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n//     \"                    </p>\"];\r\n//\r\n//\r\n//     sentence = $('#sentence5'),\r\n//         textSlider = $('#textSlider5'),\r\n//         stop = false;\r\n//\r\n//     // version of our adjective list\r\n//     function getList() {\r\n//         return $('.adj5');\r\n//     }\r\n//\r\n//     // function to build the adjective list\r\n//     // args: adjective array\r\n//     function build(arr1) {\r\n//         for (i = 0; i < arr1.length; i++) {\r\n//             var item1 = \"<div class=\\\"all-elements adj5\\\">\";\r\n//             $(textSlider).append(item1 + arr1[i] + \"</div>\");\r\n//         }\r\n//     }\r\n//\r\n//     // function to resize adjective list\r\n//     // args: adjective list item\r\n//     function resize(el) {\r\n//         $(textSlider).animate({\r\n//             width: $(el).width(),\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to add slide-in transition\r\n//     // args: element that needs to slide\r\n//     function slideIn(el) {\r\n//         // duration slide is on screen\r\n//         var hold = 2000;\r\n//         // resize area to sliding element\r\n//         resize($(el));\r\n//         // add slide-in class\r\n//         $(el).addClass('slide-in5');\r\n//         // after 'hold' duration slide-out current item\r\n//         // then slide in next item\r\n//         setTimeout(function () {\r\n//             // check to see if loop should continue\r\n//             if (stop === true) {\r\n//                 stop = false;\r\n//                 return;\r\n//             }\r\n//             // slide current element out\r\n//             slideOut(el);\r\n//             // slide in next element in queue\r\n//             slideIn($(el).next());\r\n//         }, hold);\r\n//     }\r\n//\r\n//     // function to add slide-out transition\r\n//     // args: element that needs to slide\r\n//     function slideOut(el) {\r\n//         // remove current class and add slide-out transition\r\n//         $(el).removeClass('slide-in5').addClass('slide-out5');\r\n//         // wait for slide tramsition to finish then\r\n//         // call 'change' function\r\n//         setTimeout(function () {\r\n//             change();\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to re-arrange adjective list\r\n//     function change() {\r\n//         // store last item index\r\n//         var i = adjs1.length - 1;\r\n//         // detach element that has slide-out class\r\n//         // put to the bottom of the list after\r\n//         // the last item\r\n//         $('.adj5:eq(' + i + ')').after($('.slide-out5').detach());\r\n//         // remove class to send element back to original position\r\n//         $('.adj5').removeClass('slide-out5');\r\n//     }\r\n//\r\n//     // build slider\r\n//     build(adjs1);\r\n//     // init loop\r\n//     slideIn(getList()[0]);\r\n// }\r\n//\r\n// function sixthPriceCard() {\r\n//     var adjs1 = [\"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                        BNB/BUSD <span class=\\\"percent text-danger \\\"> -4.38% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 14.531</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$14.53</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                          XLM/BUSD <span class=\\\"percent text-danger \\\"> -5.14% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.18923</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.189061</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                              AXS/BUSD <span class=\\\"percent text-danger \\\"> -8.69% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 0.00000682</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$0.000007</span>\\n\" +\r\n//     \"                    </p>\", \"<h5 class=\\\"card-title\\\">\\n\" +\r\n//     \"                                  BTC/BUSD <span class=\\\"percent text-danger \\\"> -7.08% </span></h5>\\n\" +\r\n//     \"                    <p class=\\\"card-text \\\">\\n\" +\r\n//     \"                        <span class=\\\"fw-bolder exact-price\\\"> 31,827.25</span>\\n\" +\r\n//     \"                        <br>\\n\" +\r\n//     \"                        <span class=\\\"price\\\">$31,795.75</span>\\n\" +\r\n//     \"                    </p>\"];\r\n//\r\n//\r\n//     sentence = $('#sentence6'),\r\n//         textSlider = $('#textSlider6'),\r\n//         stop = false;\r\n//\r\n//     // version of our adjective list\r\n//     function getList() {\r\n//         return $('.adj6');\r\n//     }\r\n//\r\n//     // function to build the adjective list\r\n//     // args: adjective array\r\n//     function build(arr1) {\r\n//         for (i = 0; i < arr1.length; i++) {\r\n//             var item1 = \"<div class=\\\"all-elements adj6\\\">\";\r\n//             $(textSlider).append(item1 + arr1[i] + \"</div>\");\r\n//         }\r\n//     }\r\n//\r\n//     // function to resize adjective list\r\n//     // args: adjective list item\r\n//     function resize(el) {\r\n//         $(textSlider).animate({\r\n//             width: $(el).width(),\r\n//         }, 200);\r\n//     }\r\n//\r\n//     // function to add slide-in transition\r\n//     // args: element that needs to slide\r\n//     function slideIn(el) {\r\n//         // duration slide is on screen\r\n//         var hold = 2000;\r\n//         // resize area to sliding element\r\n//         resize($(el));\r\n//         // add slide-in class\r\n//         $(el).addClass('slide-in6');\r\n//         // after 'hold' duration slide-out current item\r\n//         // then slide in next item\r\n//         setTimeout(function () {\r\n//             // check to see if loop should continue\r\n//             if (stop === true) {\r\n//                 stop = false;\r\n//                 return;\r\n//             }\r\n//             // slide current element out\r\n//             slideOut(el);\r\n//             // slide in next element in queue\r\n//             slideIn($(el).next());\r\n//         }, hold);\r\n//     }\r\n//\r\n//     // function to add slide-out transition\r\n//     // args: element that needs to slide\r\n//     function slideOut(el) {\r\n//         // remove current class and add slide-out transition\r\n//         $(el).removeClass('slide-in6').addClass('slide-out6');\r\n//         // wait for slide tramsition to finish then\r\n//         // call 'change' function\r\n//         setTimeout(function () {\r\n//             change();\r\n//         }, 2000);\r\n//     }\r\n//\r\n//     // function to re-arrange adjective list\r\n//     function change() {\r\n//         // store last item index\r\n//         var i = adjs1.length - 1;\r\n//         // detach element that has slide-out class\r\n//         // put to the bottom of the list after\r\n//         // the last item\r\n//         $('.adj6:eq(' + i + ')').after($('.slide-out6').detach());\r\n//         // remove class to send element back to original position\r\n//         $('.adj6').removeClass('slide-out6');\r\n//\r\n//     }\r\n//\r\n//     // build slider\r\n//     build(adjs1);\r\n//     // init loop\r\n//     slideIn(getList()[0]);\r\n//\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport autoBind from \"auto-bind\"\r\nimport '../css/slider.scss';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Grid,\r\n    Button,\r\n} from '@material-ui/core';\r\n\r\nfunction Banner(props) {\r\n    if (props.newProp) console.log(props.newProp)\r\n    const contentPosition = props.contentPosition ? props.contentPosition : \"left\"\r\n    const totalItems = props.length ? props.length : 3;\r\n    const mediaLength = totalItems - 1;\r\n\r\n    let items = [];\r\n    const content = (\r\n        <Grid item xs={12 / totalItems} key=\"content\">\r\n            <CardContent className=\"Content\">\r\n                <Typography className=\"Title\">\r\n                    {props.item.Name}\r\n                </Typography>\r\n\r\n                <Typography className=\"Caption\">\r\n                    {props.item.Caption}\r\n                </Typography>\r\n\r\n                <Button variant=\"outlined\" className=\"ViewButton\">\r\n                    View Now\r\n                </Button>\r\n            </CardContent>\r\n        </Grid>\r\n    )\r\n\r\n\r\n    for (let i = 0; i < mediaLength; i++) {\r\n        const item = props.item.Items[i];\r\n\r\n        const media = (\r\n            <Grid item xs={12 / totalItems} key={item.Name}>\r\n                <CardMedia\r\n                    className=\"Media\"\r\n                    image={item.Image}\r\n                    title={item.Name}\r\n                >\r\n                    <Typography className=\"MediaCaption\">\r\n                        {item.Name}\r\n                    </Typography>\r\n                </CardMedia>\r\n\r\n            </Grid>\r\n        )\r\n\r\n        items.push(media);\r\n    }\r\n\r\n    if (contentPosition === \"left\") {\r\n        items.unshift(content);\r\n    } else if (contentPosition === \"right\") {\r\n        items.push(content);\r\n    } else if (contentPosition === \"middle\") {\r\n        items.splice(items.length / 2, 0, content);\r\n    }\r\n\r\n    return (\r\n        <Card raised className=\"Banner\">\r\n            <Grid container spacing={0} className=\"BannerGrid\">\r\n                {items}\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst items = [\r\n    {\r\n        Name: \"Electronics\",\r\n        Caption: \"Electrify your friends!\",\r\n        contentPosition: \"left\",\r\n        Items: [\r\n            {\r\n                Name: \"Macbook Pro\",\r\n                Image: \"\"\r\n            },\r\n            {\r\n                Name: \"iPhone\",\r\n                Image: \"\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        Name: \"Home Appliances\",\r\n        Caption: \"Say no to manual home labour!\",\r\n        contentPosition: \"middle\",\r\n        Items: [\r\n            {\r\n                Name: \"Washing Machine WX9102\",\r\n                Image: \"\"\r\n            },\r\n            {\r\n                Name: \"Learus Vacuum Cleaner\",\r\n                Image: \"\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        Name: \"Decoratives\",\r\n        Caption: \"Give style and color to your living room!\",\r\n        contentPosition: \"right\",\r\n        Items: [\r\n            {\r\n                Name: \"Living Room Lamp\",\r\n                Image: \"\"\r\n            },\r\n            {\r\n                Name: \"Floral Vase\",\r\n                Image: \"\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nclass BannerExample extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autoPlay: true,\r\n            animation: \"fade\",\r\n            indicators: true,\r\n            timeout: 500,\r\n            navButtonsAlwaysVisible: false,\r\n            navButtonsAlwaysInvisible: false,\r\n            cycleNavigation: true\r\n        }\r\n\r\n        autoBind(this);\r\n    }\r\n\r\n    toggleAutoPlay() {\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    toggleIndicators() {\r\n        this.setState({\r\n            indicators: !this.state.indicators\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysVisible() {\r\n        this.setState({\r\n            navButtonsAlwaysVisible: !this.state.navButtonsAlwaysVisible\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysInvisible() {\r\n        this.setState({\r\n            navButtonsAlwaysInvisible: !this.state.navButtonsAlwaysInvisible\r\n        })\r\n    }\r\n\r\n    toggleCycleNavigation() {\r\n        this.setState({\r\n            cycleNavigation: !this.state.cycleNavigation\r\n        })\r\n    }\r\n\r\n    changeAnimation(event) {\r\n        this.setState({\r\n            animation: event.target.value\r\n        })\r\n    }\r\n\r\n    changeTimeout(event, value) {\r\n        this.setState({\r\n            timeout: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{color: \"#494949\"  }}>\r\n                <Carousel\r\n                    className=\"Example\"\r\n                    autoPlay={this.state.autoPlay}\r\n                    animation={this.state.animation}\r\n                    indicators={false}\r\n                    timeout={this.state.timeout}\r\n                    cycleNavigation={this.state.cycleNavigation}\r\n                    navButtonsAlwaysVisible={this.state.navButtonsAlwaysVisible}\r\n                    navButtonsAlwaysInvisible={this.state.navButtonsAlwaysInvisible}\r\n                    // fullHeightHover={false}\r\n                    // navButtonsProps={{style: {backgroundColor: 'cornflowerblue', borderRadius: 0}}}\r\n                    // navButtonsWrapperProps={{style: {bottom: '0', top: 'unset', }}}\r\n                    // indicatorContainerProps={{style: {margin: \"20px\"}}}\r\n                    // NextIcon='next'\r\n                >\r\n                    {\r\n                        items.map((item, index) => {\r\n                            return <Banner item={item} key={index} contentPosition={item.contentPosition} />\r\n                        })\r\n                    }\r\n                </Carousel>\r\n\r\n\r\n            {/*    <FormLabel component=\"legend\">Options</FormLabel>*/}\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <Checkbox onChange={this.toggleAutoPlay} checked={this.state.autoPlay} value=\"autoplay\"*/}\r\n            {/*                      color=\"primary\" />*/}\r\n            {/*        }*/}\r\n            {/*        label=\"Auto-play\"*/}\r\n            {/*    />*/}\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <Checkbox onChange={this.toggleIndicators} checked={this.state.indicators} value=\"indicators\"*/}\r\n            {/*                      color=\"primary\" />*/}\r\n            {/*        }*/}\r\n            {/*        label=\"Indicators\"*/}\r\n            {/*    />*/}\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <Checkbox onChange={this.toggleNavButtonsAlwaysVisible} checked={this.state.navButtonsAlwaysVisible} value=\"NavButtonsAlwaysVisible\" color=\"primary\" />*/}\r\n            {/*        }*/}\r\n            {/*        label=\"NavButtonsAlwaysVisible\"*/}\r\n            {/*    />*/}\r\n\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <Checkbox onChange={this.toggleNavButtonsAlwaysInvisible} checked={this.state.navButtonsAlwaysInvisible} value=\"NavButtonsAlwaysInvisible\" color=\"primary\" />*/}\r\n            {/*        }*/}\r\n            {/*        label=\"NavButtonsAlwaysInvisible\"*/}\r\n            {/*    />*/}\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <Checkbox onChange={this.toggleCycleNavigation} checked={this.state.cycleNavigation} value=\"CycleNavigation\" color=\"primary\" />*/}\r\n            {/*        }*/}\r\n            {/*        label=\"CycleNavigation\"*/}\r\n            {/*    />*/}\r\n\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <RadioGroup name=\"animation\" value={this.state.animation} onChange={this.changeAnimation} row*/}\r\n            {/*                        style={{ marginLeft: \"10px\" }}>*/}\r\n            {/*                <FormControlLabel value=\"fade\" control={<Radio color=\"primary\" />} label=\"Fade\" />*/}\r\n            {/*                <FormControlLabel value=\"slide\" control={<Radio color=\"primary\" />} label=\"Slide\" />*/}\r\n            {/*            </RadioGroup>*/}\r\n            {/*        }*/}\r\n            {/*    />*/}\r\n\r\n            {/*    <FormControlLabel*/}\r\n            {/*        control={*/}\r\n            {/*            <div style={{ width: 300 }}>*/}\r\n            {/*                <Typography id=\"discrete-slider\" gutterBottom>*/}\r\n            {/*                    Animation Duration (Timeout) in ms*/}\r\n            {/*                </Typography>*/}\r\n            {/*                <Slider*/}\r\n            {/*                    defaultValue={500}*/}\r\n            {/*                    getAriaValueText={() => `${this.state.timeout}ms`}*/}\r\n            {/*                    aria-labelledby=\"discrete-slider\"*/}\r\n            {/*                    valueLabelDisplay=\"auto\"*/}\r\n            {/*                    step={100}*/}\r\n            {/*                    marks*/}\r\n            {/*                    min={100}*/}\r\n            {/*                    max={2000}*/}\r\n            {/*                    onChange={this.changeTimeout}*/}\r\n            {/*                />*/}\r\n            {/*            </div>*/}\r\n            {/*        }*/}\r\n            {/*    />*/}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BannerExample;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport Slider from 'react-animated-slider';\r\nimport verticalCss from '../../component/css/vertical.scss';\r\nimport axios from \"axios\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst VerticalSlider = () => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [tickers, setTickers] = useState([]);\r\n\r\n    const fetchCoinHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            const listResponse = await axios.get('currencies/list');\r\n\r\n            if (listResponse.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n            const marketL = (listResponse.data);\r\n\r\n            const loadedList = [];\r\n\r\n\r\n            for (var keys in marketL) {\r\n                loadedList.push({\r\n                    name: marketL[keys].markets,\r\n                    rank: marketL[keys].rank\r\n                });\r\n            }\r\n\r\n\r\n            const response = await axios.get('core/marketTickerAll');\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n\r\n            const data = await (response.data.data.ticker);\r\n\r\n            const loadedData = [];\r\n            const loadedTL = [];\r\n            const loadedVL = [];\r\n\r\n            for (var i = 0; i <= loadedList.length; i++) {\r\n                for (var key in data) {\r\n                    if (loadedList[i] != undefined && loadedList[i].name != undefined && key.toLowerCase() == loadedList[i].name[0].toLowerCase()) {\r\n                        loadedData.push({\r\n                            id: loadedList[i].rank,\r\n                            name: key,\r\n                            lastPrice: data[key].last,\r\n                            dayOpen: data[key].open,\r\n                            volume: parseFloat(data[key].vol).toFixed(2),\r\n                            value: (data[key].vol * data[key].last).toFixed(2),\r\n                            DayChange: (((data[key].last - data[key].open)/data[key].open)*100).toFixed(2)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            loadedData.sort(function (a,b){return b.value - a.value});\r\n            setTickers(loadedData);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCoinHandler();\r\n    }, [fetchCoinHandler]);\r\n\r\n    let content;\r\n\r\n    if (tickers.length === 0) {\r\n        content = <p>Found no Coin.</p>;\r\n    }\r\n\r\n    if (error) {\r\n        content = <p>{error}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        content = <p><CircularProgress /></p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n                <Slider classNames={verticalCss} direction=\"vertical\" autoplay=\"3000\" >\r\n\r\n                        <div>\r\n                            <div className=\"center\">\r\n                                <ul className=\"list-group list-group-horizontal justify-content-center\">\r\n                                    {tickers.slice(0 , 6).map((item) => (\r\n                                        <div className=\"list-group-item priceList \">\r\n                                            <h5 className='sliderPercent d-inline'>{item.name.split(\"USDT\")[0]}<section className=\"d-inline\">/USDT</section> <span className={`${item.DayChange > 0 ? 'inGrow' : 'inLose'}`}>{item.DayChange > 0 && '+'}{item.DayChange}%</span></h5>\r\n                                            <p className=\"exact-price\">{item.lastPrice} $</p>\r\n                                            {/*<span className=\"price\">{item.value}$</span>*/}\r\n                                        </div>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    <div>\r\n                        <div className=\"center\">\r\n                            <ul className=\"list-group list-group-horizontal justify-content-center\">\r\n                                {tickers.slice(6 , 12).map((item) => (\r\n                                    <div className=\"list-group-item priceList\">\r\n                                        <h5 className='sliderPercent d-inline'>{item.name.split(\"USDT\")[0]}<section className=\"d-inline\">/USDT</section> <span className={`${item.DayChange > 0 ? 'inGrow' : 'inLose'}`}>{item.DayChange > 0 && '+'}{item.DayChange}%</span></h5>\r\n                                        <p className=\"exact-price\">{item.lastPrice} $</p>\r\n                                        {/*<span className=\"price\">{item.value}$</span>*/}\r\n                                    </div>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"center\">\r\n                            <ul className=\"list-group list-group-horizontal justify-content-center\">\r\n                                {tickers.slice(0 , 6).map((item) => (\r\n                                    <div className=\"list-group-item priceList\">\r\n                                        <h5 className='sliderPercent d-inline'>{item.name.split(\"USDT\")[0]}<section className=\"d-inline\">/USDT</section> <span className={`${item.DayChange > 0 ? 'inGrow' : 'inLose'}`}>{item.DayChange > 0 && '+'}{item.DayChange}%</span></h5>\r\n                                        <p className=\"exact-price\">{item.lastPrice} $</p>\r\n                                        {/*<span className=\"price\">{item.value}$</span>*/}\r\n                                    </div>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"center\">\r\n                            <ul className=\"list-group list-group-horizontal justify-content-center\">\r\n                                {tickers.slice(6 , 12).map((item) => (\r\n                                    <div className=\"list-group-item priceList\">\r\n                                        <h5 className='sliderPercent d-inline'>{item.name.split(\"USDT\")[0]}<section className=\"d-inline\">/USDT</section> <span className={`${item.DayChange > 0 ? 'inGrow' : 'inLose'}`}>{item.DayChange > 0 && '+'}{item.DayChange}%</span></h5>\r\n                                        <p className=\"exact-price\">{item.lastPrice} $</p>\r\n                                        {/*<span className=\"price\">{item.value}$</span>*/}\r\n                                    </div>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Slider>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VerticalSlider;\r\n","import React, {useEffect, useRef, useState, useContext, useCallback} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ToastContainer, toast, Slide} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport Footer from \"./component/widgets/Footer\";\r\nimport NavBar from \"./component/widgets/NavBar\";\r\nimport './component/css/homePage.css';\r\nimport './component/css/bootstrap.css';\r\nimport './component/js/homePage';\r\nimport './component/js/Sliding_window';\r\nimport Carousel from \"./component/widgets/Carousel\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport {LoginContext} from \"./Root\";\r\nimport VerticalSlider from \"./component/widgets/VerticalSlider\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {RiCoinsFill} from \"@react-icons/all-files/ri/RiCoinsFill\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\n\r\nexport const redColor = \"#ef5350\";\r\nexport const greenColor = \"#26a69a\";\r\n\r\nexport const notifyCopied = () => toast.success(\"copied\", {autoClose: 2000});\r\nexport const notifySuccessful = () =>\r\n    toast.success(\"Successfully Done\", {autoClose: 3500});\r\nexport const notifySuccessfulMessage = (message) =>\r\n    toast.success(message, {autoClose: 3500});\r\nexport const notifyError = () =>\r\n    toast.error(\"Network Problem, Please Try Again\", {autoClose: 3500});\r\nexport const notifyErrorMessage = (message) =>\r\n    toast.error(message, {autoClose: 3500});\r\nexport const notifyWarnMessage = (message) =>\r\n    toast.warn(message, {autoClose: 4000});\r\n\r\n// axios.defaults.baseURL = \"http://sigloyex.com:8080/\";\r\n//  axios.defaults.baseURL = \"http://192.168.1.200:8080/\";\r\n axios.defaults.baseURL = \"http://31.192.237.52:8080/\";\r\n// axios.defaults.baseURL = 'https://electrum.tools/api/'\r\n\r\naxios.interceptors.response.use(\r\n    function (response) {\r\n        return response;\r\n    },\r\n    function (error) {\r\n        if ((error?.response?.status ?? 0) === 401) {\r\n            localStorage.removeItem(\"token\");\r\n            window.location = \"/login\";\r\n        }\r\n        notifyErrorMessage(error.response?.data?.errors[0]?.msg ?? \"Unknown Error\");\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: {max: 3000, min: 1024},\r\n        items: 3,\r\n        slidesToSlide: 3 // optional, default to 1.\r\n    },\r\n    tablet: {\r\n        breakpoint: {max: 1024, min: 464},\r\n        items: 2,\r\n        slidesToSlide: 2 // optional, default to 1.\r\n    },\r\n    mobile: {\r\n        breakpoint: {max: 464, min: 0},\r\n        items: 1,\r\n        slidesToSlide: 1 // optional, default to 1.\r\n    }\r\n};\r\n\r\nfunction App() {\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setWidth(window.innerWidth)\r\n        }, 100)\r\n    }, []);\r\n\r\n    const [width, setWidth] = useState();\r\n\r\n    //**************************************************************************************************************************************\r\n\r\n    const [tickers, setTickers] = useState([\r\n        {\r\n            \"id\": 41,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n    ]);//topGainers\r\n    const [topLosers, setTopLosers] = useState([\r\n        {\r\n            \"id\": 41,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        }\r\n    ]);\r\n    const [vLeaders, setVLeaders] = useState([\r\n        {\r\n            \"id\": 41,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"*******USDT\",\r\n            \"lastPrice\": \"*******\",\r\n            \"dayOpen\": \"*******\",\r\n            \"volume\": \"*******\",\r\n            \"value\": \"*******\",\r\n            \"DayChange\": \"*******\"\r\n        }\r\n    ]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [tableSwitcher, setTableSwitcher] = useState(1);\r\n\r\n    const fetchCoinHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            const listResponse = await axios.get('currencies/list');\r\n\r\n            if (listResponse.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n            const marketL = (listResponse.data);\r\n\r\n            console.log(marketL);\r\n\r\n            const loadedList = [];\r\n\r\n\r\n            for (var keys in marketL) {\r\n                loadedList.push({\r\n                    name: marketL[keys].markets,\r\n                    rank: marketL[keys].rank\r\n                });\r\n            }\r\n\r\n\r\n            const response = await axios.get('core/marketTickerAll');\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n\r\n            const data = await (response.data.data.ticker);\r\n\r\n            const loadedData = [];\r\n            const loadedTL = [];\r\n            const loadedVL = [];\r\n\r\n            for (var i = 0; i <= loadedList.length; i++) {\r\n                for (var key in data) {\r\n                    if (loadedList[i] != undefined && loadedList[i].name != undefined && key.toLowerCase() == loadedList[i].name[0].toLowerCase()) {\r\n                        loadedData.push({\r\n                            id: loadedList[i].rank,\r\n                            name: key,\r\n                            lastPrice: data[key].last,\r\n                            dayOpen: data[key].open,\r\n                            volume: parseFloat(data[key].vol).toFixed(2),\r\n                            value: (data[key].vol * data[key].last).toFixed(2),\r\n                            DayChange: (((data[key].last - data[key].open)/data[key].open)*100).toFixed(2)\r\n                        });\r\n                        loadedTL.push({\r\n                            id: loadedList[i].rank,\r\n                            name: key,\r\n                            lastPrice: data[key].last,\r\n                            dayOpen: data[key].open,\r\n                            volume: parseFloat(data[key].vol).toFixed(2),\r\n                            value: (data[key].vol * data[key].last).toFixed(2),\r\n                            DayChange: (((data[key].last - data[key].open)/data[key].open)*100).toFixed(2)\r\n                        });\r\n                        loadedVL.push({\r\n                            id: loadedList[i].rank,\r\n                            name: key,\r\n                            lastPrice: data[key].last,\r\n                            dayOpen: data[key].open,\r\n                            volume: parseFloat(data[key].vol).toFixed(2),\r\n                            value: (data[key].vol * data[key].last).toFixed(2),\r\n                            DayChange: (((data[key].last - data[key].open)/data[key].open)*100).toFixed(2)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            loadedData.sort(function (a,b){return b.DayChange - a.DayChange});\r\n            setTickers(loadedData);\r\n            loadedTL.sort(function (a,b){return a.DayChange - b.DayChange});\r\n            setTopLosers(loadedTL);\r\n            loadedVL.sort(function (a,b){return b.value - a.value});\r\n            setVLeaders(loadedVL);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCoinHandler();\r\n    }, [fetchCoinHandler]);\r\n\r\n    let content;\r\n    let ERR;\r\n\r\n    if (tickers.length === 0) {\r\n        ERR = <p>Found no Coin.</p>;\r\n    }\r\n\r\n    if (error) {\r\n        ERR = <p>{error}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        content = <p><CircularProgress /></p>;\r\n    }\r\n\r\n    const numberFormatter = (num) => {\r\n        if (num >= 1000000000) {\r\n            return (num / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'B';\r\n        }\r\n        if (num >= 1000000) {\r\n            return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\r\n        }\r\n        if (num >= 1000) {\r\n            return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\r\n        }\r\n        return num;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/*{\" \"}*/}\r\n            {/*<ToastContainer*/}\r\n            {/*    ltr*/}\r\n            {/*    closeOnClick*/}\r\n            {/*    pauseOnHover*/}\r\n            {/*    position=\"top-center\"*/}\r\n            {/*    transition={Slide}*/}\r\n            {/*/>*/}\r\n\r\n            <NavBar/>\r\n\r\n\r\n            <div className=\" header col-xs-12 col-md-12 col-sm-12 mt-5\" id=\"header\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header-title \">\r\n                        <h2 className=\"card-title\">\r\n                            <FormattedMessage\r\n                                id=\"Homepage.welcome\"\r\n                                defaultMessage=\"welcome\"\r\n                            />\r\n                        </h2>\r\n                        <p>\r\n\r\n                        </p>\r\n                        <button\r\n                            onClick={() => history.push(\"login\")}\r\n                            className={`btn-lg ${isLoggedIn && \"d-none\"}`} id=\"join\" href=\"#\">\r\n                            <FormattedMessage\r\n                                id=\"Homepage.join\"\r\n                                defaultMessage=\"Join\"\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\" prices\">\r\n                        <VerticalSlider/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid col-xs-12 col-md-12 col-sm-12 \">\r\n\r\n                {width < 800 && <Marquee className={`marqueeD ${width < 800 ? 'd-block' : 'd-none'}`} id=\"marquee\"\r\n                                         gradientColor={'transparent'} pauseOnHover={true} loop={0} speed={60}>\r\n                    {tickers.slice(0 , 4).map((item) => (\r\n                    <div className=\"d-inline price-change ms-2 me-2\">\r\n                        {/*<img*/}\r\n                        {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                        {/*    className=\"crypto-ico\"*/}\r\n                        {/*    alt=\"...\"*/}\r\n                        {/*/>*/}\r\n                        <RiCoinsFill />\r\n                        <span>{item.name} {numberFormatter(item.lastPrice)}$</span>\r\n                        <span className=\"d-inline\"><span className={`${item.DayChange > 0 ? 'inGrow' : 'inLose'}`}>{item.DayChange > 0 && '+'}{item.DayChange}%</span></span>\r\n                    </div>\r\n                    ))}\r\n\r\n                </Marquee>}\r\n\r\n\r\n                <div className={`col-12 crypto-all ${isLoading && 'blurForLoading'}`} id=\"FCAT\">\r\n                    <div className=\"arrow-tabs ui-tabs ui-widget ui-widget-content ui-corner-all \">\r\n                        <ul\r\n                            className=\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\"\r\n                            role=\"tablist\"\r\n                        >\r\n                            <li\r\n                                className=\"ui-state-default btn ui-corner-top ui-tabs-active ui-state-active \"\r\n                                role=\"tab\"\r\n                            >\r\n                                <a\r\n                                    type=\"button\"\r\n                                    id=\"top-gainer\"\r\n                                    className=\"ui-tabs-anchor\"\r\n                                    role=\"button\"\r\n                                >\r\n                                    <span>\r\n                                         <FormattedMessage\r\n                                             id=\"Homepage.TopGainer\"\r\n                                             defaultMessage=\"TopGainer\"\r\n                                         />\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"ui-state-default btn ui-corner-top\" role=\"tab\">\r\n                                <a\r\n                                    type=\"button\"\r\n                                    id=\"top-losers\"\r\n                                    className=\"ui-tabs-anchor\"\r\n                                    role=\"button\"\r\n                                >\r\n                                    <span>\r\n                                            <FormattedMessage\r\n                                                id=\"Homepage.TopLoser\"\r\n                                                defaultMessage=\"TopLoser\"\r\n                                            />\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"ui-state-default btn ui-corner-top\" role=\"tab\">\r\n                                <a\r\n                                    type=\"button\"\r\n                                    id=\"Value-Leaders\"\r\n                                    className=\"ui-tabs-anchor col2\"\r\n                                    role=\"button\"\r\n                                >\r\n                                    <span>\r\n                                          <FormattedMessage\r\n                                              id=\"Homepage.ValueLeader\"\r\n                                              defaultMessage=\"ValueLeader\"\r\n                                          />\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card border-0\" id=\"top-gainer-content\">\r\n                        <div className=\"card-body border-0\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <ol className=\"list-group list-group-numbered crypto-list1 \">\r\n                                    {tickers.slice(0 , 5).map((ticker) => (\r\n                                    <li className=\"list-group-item hoverAll d-flex justify-content-around disabled \">\r\n              <span className=\"\">\r\n                {/*<img*/}\r\n                {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                {/*    className=\"crypto-ico\"*/}\r\n                {/*    alt=\"...\"*/}\r\n                {/*/>*/}\r\n                  <RiCoinsFill />\r\n              </span>\r\n                                        <p className=\"\">{ticker.name.split(\"USDT\")[0]}</p>\r\n                                        <p className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'}`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</p>\r\n                                    </li>\r\n                                        ))}\r\n                                </ol>\r\n                                <div\r\n                                    className=\"tab-pane fade show  crypto-table-homepage\"\r\n                                    id=\"first-table\"\r\n                                    role=\"tabpanel\"\r\n                                    aria-labelledby=\"pills-home-tab\"\r\n                                >\r\n                                    <table className=\"table bg-transparent text-center \">\r\n                                        <thead>\r\n                                        <tr className=\"homepage-crypto-property\">\r\n                                            <th scope=\"col\"></th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Latest Price</th>\r\n                                            <th scope=\"col\">24H Change</th>\r\n                                            <th scope=\"col\">24H Volume</th>\r\n                                            <th scope=\"col\">24H Value<span className=\"crypto-property-postFix\">(USDT)</span></th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {tickers.slice(0 , 5).map((ticker) => (\r\n                                            <tr className=\"first-row glow\">\r\n                                                <td>\r\n                                                    {/*<img*/}\r\n                                                    {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                                                    {/*    className=\"crypto-ico\"*/}\r\n                                                    {/*    alt=\"...\"*/}\r\n                                                    {/*/>*/}\r\n                                                    <RiCoinsFill/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {ticker.name}\r\n                                                </td>\r\n                                                <td >{(ticker.lastPrice)}</td>\r\n                                                <td className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'} fw-bold`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</td>\r\n                                                <td>{numberFormatter(ticker.volume)}</td>\r\n                                                <td>{numberFormatter(ticker.value)}</td>\r\n                                            </tr>\r\n                                        ))}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <ol className=\"list-group list-group-numbered border-hover crypto-list2\">\r\n                                    {topLosers.slice(0 , 5).map((ticker)=>(\r\n                                        <li className=\"list-group-item hoverAll d-flex justify-content-around disabled\">\r\n              <span>\r\n                {/*<img*/}\r\n                {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                {/*    className=\"crypto-ico\"*/}\r\n                {/*    alt=\"...\"*/}\r\n                {/*/>*/}\r\n                  <RiCoinsFill/>\r\n              </span>\r\n                                            <p className=\"\">{ticker.name.split(\"USDT\")[0]}</p>\r\n                                            <p className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'}`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</p>\r\n                                        </li>\r\n                                    ))}\r\n                                </ol>\r\n                                <div\r\n                                    className=\"tab-pane fade show  crypto-table-homepage\"\r\n                                    id=\"second-table\"\r\n                                    role=\"tabpanel\"\r\n                                    aria-labelledby=\"pills-home-tab\"\r\n                                >\r\n                                    <table className=\"table bg-transparent text-center \">\r\n                                        <thead>\r\n                                        <tr className=\"homepage-crypto-property\">\r\n                                            <th></th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Latest Price</th>\r\n                                            <th scope=\"col\">24H Change</th>\r\n                                            <th scope=\"col\">24H Volume</th>\r\n                                            <th scope=\"col\">24H Value<span className=\"crypto-property-postFix\">(USDT)</span></th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {topLosers.slice(0 , 5).map((ticker)=>(\r\n                                            <tr className=\"first-row glow\">\r\n                                                <td>\r\n                                                    {/*<img*/}\r\n                                                    {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                                                    {/*    className=\"crypto-ico\"*/}\r\n                                                    {/*    alt=\"...\"*/}\r\n                                                    {/*/>*/}\r\n                                                    <RiCoinsFill/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {ticker.name}\r\n                                                </td>\r\n                                                <td >{(ticker.lastPrice)}</td>\r\n                                                <td className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'} fw-bold`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</td>\r\n                                                <td>{numberFormatter(ticker.volume)}</td>\r\n                                                <td>{numberFormatter(ticker.value)}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <ol className=\"list-group list-group-numbered border-hover crypto-list3\">\r\n                                    {vLeaders.slice(0 , 5).map((ticker)=>(\r\n                                        <li className=\"list-group-item hoverAll justify-content-around d-flex disabled\">\r\n              <span>\r\n                {/*<img*/}\r\n                  {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                  {/*    className=\"crypto-ico\"*/}\r\n                  {/*    alt=\"...\"*/}\r\n                  {/*/>*/}\r\n                  <RiCoinsFill/>\r\n              </span>\r\n                                            <p className=\"\">{ticker.name.split(\"USDT\")[0]}</p>\r\n                                            <p className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'}`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</p>\r\n                                        </li>\r\n                                    ))}\r\n                                </ol>\r\n                                <div\r\n                                    className=\"tab-pane fade show  crypto-table-homepage\"\r\n                                    id=\"third-table\"\r\n                                    role=\"tabpanel\"\r\n                                    aria-labelledby=\"pills-home-tab\"\r\n                                >\r\n                                    <table className=\"table bg-transparent text-center \">\r\n                                        <thead>\r\n                                        <tr className=\"homepage-crypto-property\">\r\n                                            <th></th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Latest Price</th>\r\n                                            <th scope=\"col\">24H Change</th>\r\n                                            <th scope=\"col\">24H Volume</th>\r\n                                            <th scope=\"col\">24H Value<span className=\"crypto-property-postFix\">(USDT)</span></th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {vLeaders.slice(0 , 5).map((ticker)=>(\r\n                                            <tr className=\"first-row glow\">\r\n                                                <td>\r\n                                                    {/*<img*/}\r\n                                                    {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                                                    {/*    className=\"crypto-ico\"*/}\r\n                                                    {/*    alt=\"...\"*/}\r\n                                                    {/*/>*/}\r\n                                                    <RiCoinsFill/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {ticker.name}\r\n                                                </td>\r\n                                                <td >{(ticker.lastPrice)}</td>\r\n                                                <td className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'} fw-bold`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</td>\r\n                                                <td>{numberFormatter(ticker.volume)}</td>\r\n                                                <td>{numberFormatter(ticker.value)}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={`col-12 crypto-all ${isLoading && 'blurForLoading'}`} id=\"SCAT\">\r\n                    <div className=\"arrow-tabs ui-tabs ui-widget ui-widget-content ui-corner-all \">\r\n                        <ul\r\n                            className=\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\"\r\n                            role=\"tablist\"\r\n                        >\r\n                            <a className={`${tableSwitcher == 1 && 'active'}`} onClick={() => setTableSwitcher(1)}>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                                Top Gainer\r\n                            </a>\r\n                            <a className={`${tableSwitcher == 2 && 'active'}`} onClick={() => setTableSwitcher(2)}>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                               top Losers\r\n                            </a>\r\n                            <a className={`${tableSwitcher == 3 && 'active'}`} onClick={() => setTableSwitcher(3)}>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                                Value Leaders\r\n                            </a>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card border-0\">\r\n                        <div className=\"card-body border-0\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div\r\n                                    className=\"tab-pane fade show  crypto-table-homepage\"\r\n                                    id=\"first-table\"\r\n                                    role=\"tabpanel\"\r\n                                    aria-labelledby=\"pills-home-tab\"\r\n                                >\r\n                                    <table className=\"table bg-transparent text-center \">\r\n                                        <thead>\r\n                                        <tr className=\"homepage-crypto-property mt-3\">\r\n                                            <th scope=\"col\"></th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Latest Price</th>\r\n                                            <th scope=\"col\">24H Change</th>\r\n                                            <th scope=\"col\">24H Volume</th>\r\n                                            <th scope=\"col\">24H Value<span className=\"crypto-property-postFix\">(USDT)</span></th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {(tableSwitcher === 1 ? tickers : tableSwitcher === 2 ? topLosers : vLeaders).slice(0 , 5).map((ticker) => (\r\n                                            <tr className=\"first-row \" id=\"secondTable-content\">\r\n                                                <td>\r\n                                                    {/*<img*/}\r\n                                                    {/*    src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                                                    {/*    className=\"crypto-ico\"*/}\r\n                                                    {/*    alt=\"...\"*/}\r\n                                                    {/*/>*/}\r\n                                                    <RiCoinsFill/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {ticker.name}\r\n                                                </td>\r\n                                                <td className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'} fw-bold`}>{numberFormatter(ticker.lastPrice)}</td>\r\n                                                <td className={`${ticker.DayChange > 0 ? 'grow' : 'Lose'} fw-bold`}>{ticker.DayChange > 0 && '+'}{ticker.DayChange}%</td>\r\n                                                <td>{numberFormatter(ticker.volume)}</td>\r\n                                                <td>{numberFormatter(ticker.value)}</td>\r\n                                            </tr>\r\n                                        ))}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className='mainTableFeedback'>{content}</section>\r\n\r\n                <div className=\"card HPSlider\">\r\n                    <Carousel/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Footer/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport default SocketContext","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Popover, Dialog, Backdrop, CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction LoadingDialog(props) {\r\n  const ss = () => {};\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={ss}\r\n      maxWidth=\"sm\"\r\n      aria-labelledby=\"loadingDialog\"\r\n    >\r\n      <div>\r\n        <Backdrop style={{ zIndex: 5, color: \"#fff\" }} open={true}>\r\n          <CircularProgress color=\"white\" />\r\n        </Backdrop>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LoadingDialog;\r\n","import {useState} from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n\r\n    const inputBlurHandler = (event) => {\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n\r\n}\r\n\r\nexport default useInput;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","import \"./notAllowed.css\";\r\nimport disableScroll from 'disable-scroll';\r\n\r\n\r\nconst NotAllowed = (props) => {\r\n    disableScroll.on(); // prevent scrolling\r\n        return (\r\n            <div className=\"container-fluid body\">\r\n                <a href=\"#\">\r\n                    <header className=\"top-header\"></header>\r\n                    {/*dust particel*/}\r\n                    <div>\r\n                        <div className=\"starsec\"/>\r\n                        <div className=\"starthird\"/>\r\n                        <div className=\"starfourth\"/>\r\n                        <div className=\"starfifth\"/>\r\n                    </div>\r\n                    {/*Dust particle end-*/}\r\n                    <div className=\"lamp__wrap\">\r\n                        <div className=\"lamp\">\r\n                            <div className=\"cable\"/>\r\n                            <div className=\"cover\"/>\r\n                            <div className=\"in-cover\">\r\n                                <div className=\"bulb\"/>\r\n                            </div>\r\n                            <div className=\"light\"/>\r\n                        </div>\r\n                    </div>\r\n                    {/* END Lamp */}\r\n                </a>\r\n                <section className=\"error\">\r\n                    <a href=\"#\">\r\n                        {/* Content */}\r\n                    </a>\r\n                    <div className=\"error__content\">\r\n                        <a href=\"#\">\r\n                            <div className=\"error__message message\">\r\n                                <h1 className=\"message__title\">404</h1>\r\n                                <h3 className=\"message__Subtitle\">Page Not Found</h3>\r\n                                <p className=\"message__text\">\r\n                                    We're sorry, the page you were looking for isn't found here.\r\n                                </p>\r\n                            </div>\r\n                        </a>\r\n                        <div className=\"error__nav e-nav\">\r\n                            <a href=\"#\"></a>\r\n                            <a href=\"#\" className=\"e-nav__link\" onClick={() => props.history.push(\"/\")}>HomePage</a>\r\n                        </div>\r\n                    </div>\r\n                    {/* END Content */}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n;\r\n\r\nexport default NotAllowed;\r\n","import React, {useEffect, useRef, useState, useContext} from \"react\";\r\nimport \"../css/bootstrap.css\";\r\nimport \"../css/LogIn-SignIn.css\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport Axios from \"axios\";\r\nimport LoadingDialog from \"../widgets/LoadingDialog\";\r\nimport {MdPlayArrow} from \"@react-icons/all-files/md/MdPlayArrow\";\r\nimport {LoginContext, VerificationContext} from \"../../Root\";\r\nimport {ToastContainer, toast, Slide} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport register from \"../../serviceWorker\";\r\nimport NotAllowed from \"../widgets/NotAllowed\";\r\nimport {FaEye} from \"@react-icons/all-files/fa/FaEye\";\r\nimport {FaEyeSlash} from \"@react-icons/all-files/fa/FaEyeSlash\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginAndSignup = (props) => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [remember, setRemember] = useState(false);\r\n    const [referral, setReferral] = useState(\"false\");\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const [showLogin, setShowLogin] = useState(!props.isSignup);\r\n\r\n    const emailRef = useRef(\"\");\r\n    const passRef = useRef(\"\");\r\n    const referralRef = useRef(\"false\");\r\n\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    const {isVerified, setIsVerified} = useContext(VerificationContext);\r\n\r\n\r\n    const {addToast} = useToasts();\r\n\r\n    const {\r\n        value: enteredEmail,\r\n        isValid: enteredEmailIsValid,\r\n        hasError: emailInputHasError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        inputBlurHandler: emailBlurHandler,\r\n        reset: resetEmailInput,\r\n    } = useInput((value) => value.includes('@'));\r\n\r\n    const {\r\n        value: enteredPass,\r\n        isValid: enteredPassIsValid,\r\n        hasError: passInputHasError,\r\n        valueChangeHandler: passChangedHandler,\r\n        inputBlurHandler: passBlurHandler,\r\n        reset: resetPassInput,\r\n    } = useInput((value) => value.trim() !== '');\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredEmailIsValid && enteredPassIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const formSubmissionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!enteredEmailIsValid) {\r\n            return;\r\n        }\r\n\r\n        // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\r\n        resetEmailInput();\r\n        resetPassInput();\r\n    };\r\n\r\n    const emailInputClasses = emailInputHasError\r\n        ? 'form-control invalid'\r\n        : 'form-control';\r\n\r\n    const passInputClasses = passInputHasError\r\n        ? 'form-control invalid'\r\n        : 'form-control';\r\n\r\n\r\n    const loginOrSignup = async (isLogin) => {\r\n        setLoading(true);\r\n        try {\r\n            await Axios.post(\r\n                isLogin ? \"auth/login\" : \"auth/register\",\r\n                isLogin\r\n                    ? new URLSearchParams({\r\n                        username: emailRef.current.value,\r\n                        password: passRef.current.value,\r\n                    })\r\n                    : {\r\n                        username: emailRef.current.value,\r\n                        password: passRef.current.value,\r\n                    },\r\n                {\r\n                    headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n                }\r\n            ).then((res) => {\r\n                if (res.data.status == \"fail\") {\r\n                    setIsLoggedIn(false);\r\n                    addToast(res.data.errors.msg, {\r\n                        appearance: \"error\",\r\n                        autoDismiss: true\r\n                    })\r\n\r\n                    setLoading(false);\r\n                }\r\n\r\n                if (res.data.status == \"ok\") {\r\n                    setIsLoggedIn(true);\r\n                    setIsVerified(res.data.access_token != null);\r\n                    console.log(res.data);\r\n                    if (res.data.access_token != undefined) {\r\n                        localStorage.setItem(\r\n                            \"token\",\r\n                            res.data.access_token ?? res.data.tmp_token)\r\n                    }\r\n                    setEmail(\"\");\r\n                    emailRef.current = \"\";\r\n                    setPass(\"\");\r\n                    passRef.current = \"\";\r\n                    if (!isLogin && (res.data.data?.msg ?? \"\").includes(\"User created\")) {\r\n                        setIsEmailVerifingNeeded(true);\r\n                        addToast('verify your account to complete the registration', {\r\n                            appearance: \"warning\",\r\n                            autoDismiss: true\r\n                        })\r\n                    } else {\r\n                        try {\r\n                            const isAuth =  axios.get(\"http://sigloyex.com:8080/auth/me\" ,{\r\n                                headers:{\r\n                                    'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n                                }\r\n                            });\r\n                            console.log(isAuth);\r\n                        } catch (error) {\r\n\r\n                        }\r\n                        // window.location = \"/\";\r\n                         history.goBack();\r\n                    }\r\n                }\r\n\r\n            });\r\n        } catch (error) {\r\n            console.log(error.toString());\r\n            if (error.toString() == 'Error: Request failed with status code 429') {\r\n                addToast(\"Too Many Requests\", {appearance: \"error\", autoDismiss: true});\r\n            } else {\r\n                addToast(error.toString(), {appearance: \"error\", autoDismiss: true});\r\n            }\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const show = () => {\r\n        setShowLogin(!showLogin);\r\n    };\r\n\r\n    const [isEmailVerifingNeeded, setIsEmailVerifingNeeded] = useState(false);\r\n    const [showPass, setShowPass] = useState(false);\r\n    const [showPassSignup, setShowPassSignup] = useState(false);\r\n\r\n    const context = useContext(Context);\r\n\r\n\r\n    return (\r\n\r\n        <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <NavBar/>\r\n            {isLoading && <LoadingDialog/>}\r\n            <div className=\"container-fluid\">\r\n                <div className=\"col-12  \">\r\n                    <div className=\"sidenav\">\r\n                        <div className=\"login-main-text\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                            <h2 className=\"Application fw-bold\">\r\n                                <FormattedMessage\r\n                                    id=\"CompanyName\"\r\n                                    defaultMessage=\"Sigloy\"\r\n                                />\r\n                                <br/>\r\n                                <FormattedMessage\r\n                                    id=\"Login.Text.Title\"\r\n                                    defaultMessage=\"Login & Signup\"\r\n                                />\r\n                            </h2>\r\n                            <span>\r\n              <FormattedMessage\r\n                  id=\"Login.Text.SubTitle\"\r\n                  defaultMessage=\"Login From Here\"\r\n              />\r\n                </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main d-flex justify-content-center\">\r\n                        <div className=\"col-lg-7 col-md-10 col-sm-12\">\r\n                            <div className=\"card p-5 shadow-lg\">\r\n                                {showLogin ? (\r\n                                    <h4 className=\"card-title text-center font-weight-bolder\"\r\n                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <FormattedMessage\r\n                                            id=\"Login.LoginBtn\"\r\n                                            defaultMessage=\"Login\"\r\n                                        />\r\n                                    </h4>\r\n                                ) : (\r\n                                    <h4 className=\"card-title text-center font-weight-bolder\"\r\n                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <FormattedMessage\r\n                                            id=\"Login.signinBtn\"\r\n                                            defaultMessage=\"SigninBtn\"\r\n                                        />\r\n                                    </h4>\r\n                                )}\r\n                                {isEmailVerifingNeeded && (\r\n                                    <p className=\"email_verification_needed\">\r\n                                        User created, please verify entered email\r\n                                    </p>\r\n                                )}\r\n                                <br/>\r\n                                <div className=\"text-center small mb-3\">\r\n                                    <p className=\"mb-3 small\">\r\n                                        <FormattedMessage\r\n                                            id=\"Login.Security.context\"\r\n                                            defaultMessage=\"Attention\"\r\n                                        />\r\n                                    </p>\r\n                                    <p className=\"lock pt-1 pb-1 pe-2 ps-2 rounded\"\r\n                                       dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <i className=\"fas fa-lock me-2\"/>\r\n                                        https://www.SigloyEx.com\r\n                                    </p>\r\n                                </div>\r\n                                <br/>\r\n\r\n                                {showLogin ? (\r\n                                    <form onSubmit={formSubmissionHandler} className=\"form-group\">\r\n                                        <div\r\n                                            className={`form-floating login-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3 ${emailInputClasses}`}\r\n                                            dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className={`form-control`}\r\n                                                id=\"floatingInput\"\r\n                                                placeholder=\"name@example.com\"\r\n                                                value={enteredEmail}\r\n                                                onBlur={emailBlurHandler}\r\n                                                onChange={emailChangeHandler}\r\n                                                ref={emailRef}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"floatingInput\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Login.Email\"\r\n                                                    defaultMessage=\"Email\"/>\r\n                                            </label>\r\n\r\n                                        </div>\r\n                                        {emailInputHasError && (\r\n                                            <p className='error-text'>Please Enter A Valid Email.</p>\r\n                                        )}\r\n                                        <div\r\n                                            className={`form-floating login-input d-flex rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3 ${passInputClasses}`}\r\n                                            dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <input\r\n                                                type={`${showPass ? \"text\" :\"password\"}`}\r\n                                                className=\"form-control d-flex\"\r\n                                                id=\"floatingPassword\"\r\n                                                placeholder=\"Password\"\r\n                                                value={enteredPass}\r\n                                                onChange={passChangedHandler}\r\n                                                onBlur={passBlurHandler}\r\n                                                ref={passRef}\r\n                                                required\r\n                                            />\r\n                                            <span role=\"button\" onClick={()=>setShowPass(!showPass)} className=\" showPass \">\r\n                                               {showPass ? <FaEye/> : <FaEyeSlash/>}\r\n                                            </span>\r\n                                            <label htmlFor=\"floatingPassword\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Login.Password\"\r\n                                                    defaultMessage=\"Password\"\r\n                                                />\r\n                                            </label>\r\n                                        </div>\r\n                                        {passInputHasError && (\r\n                                            <p className='error-text'>Please Enter A Valid Password.</p>\r\n                                        )}\r\n                                        <div className=\"form-group mt-3\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <a href=\"#\" onClick={() => history.push(\"/forgetPassword\")} className=\"text-capitalize small \">\r\n                                                <FormattedMessage\r\n                                                    id=\"Login.ForgotPassword\"\r\n                                                    defaultMessage=\"ForgotPassword\"\r\n                                                />{\" \"}\r\n                                            </a>\r\n                                        </div>\r\n\r\n                                        <button\r\n                                            id=\"submit\"\r\n                                            disabled={!formIsValid}\r\n                                            onClick={(event) => {\r\n                                                loginOrSignup(true);\r\n                                            }}\r\n                                            className=\"btn rounded-pill text-light mt-3\"\r\n                                        >\r\n                                            <FormattedMessage\r\n                                                id=\"Login.LoginBtn\"\r\n                                                defaultMessage=\"Login\"\r\n                                            />\r\n                                        </button>\r\n                                    </form>\r\n                                ) : (\r\n                                    <div className=\"form-group\">\r\n                                        <div\r\n                                            className={`form-floating login-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3 ${emailInputClasses}`}>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control \"\r\n                                                id=\"floatingInput\"\r\n                                                placeholder=\"name@example.com\"\r\n                                                value={enteredEmail}\r\n                                                onBlur={emailBlurHandler}\r\n                                                onChange={emailChangeHandler}\r\n                                                ref={emailRef}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"floatingInput\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Login.Email\"\r\n                                                    defaultMessage=\"Email\"\r\n                                                /></label>\r\n                                        </div>\r\n                                        {emailInputHasError && (\r\n                                            <p className='error-text'>Please Enter A Valid Email.</p>)}\r\n                                        <div\r\n                                            className={`form-floating d-flex login-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3 ${passInputClasses}`}>\r\n                                            <input\r\n                                                type={`${showPassSignup ? \"text\" :\"password\"}`}\r\n                                                className=\"form-control \"\r\n                                                id=\"floatingPassword\"\r\n                                                placeholder=\"Password\"\r\n                                                value={enteredPass}\r\n                                                onBlur={passBlurHandler}\r\n                                                onChange={passChangedHandler}\r\n                                                ref={passRef}\r\n                                                required\r\n                                            />\r\n                                            <span role=\"button\" onClick={()=> setShowPassSignup(!showPassSignup)} className=\"showPass \">\r\n                                               {showPassSignup ? <FaEye/> : <FaEyeSlash/>}\r\n                                            </span>\r\n                                            <label htmlFor=\"floatingPassword\"> <FormattedMessage\r\n                                                id=\"Login.Password\"\r\n                                                defaultMessage=\"Password\"\r\n                                            /></label>\r\n                                        </div>\r\n                                        {passInputHasError && (\r\n                                            <p className='error-text'>Please Enter A Valid Password.</p>)}\r\n                                        <button\r\n                                            id=\"submit\"\r\n                                            disabled={!formIsValid}\r\n                                            onClick={() => loginOrSignup(false)}\r\n                                            className=\"btn rounded-pill text-light mt-3\"\r\n                                        >\r\n                                            <FormattedMessage\r\n                                                id=\"Login.signinBtn\"\r\n                                                defaultMessage=\"Signin\"\r\n                                            />\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {showLogin ? (\r\n                                    <p className={`text-end changer`}>\r\n                                        <span onClick={show}>\r\n                                        <FormattedMessage\r\n                                            id=\"Login.signinBtn\"\r\n                                            defaultMessage=\"Signin\"\r\n                                        />\r\n                                        <MdPlayArrow/>\r\n                                            </span>\r\n                                    </p>\r\n                                ) : (\r\n                                    <p className={`text-end changer`}>\r\n                                        <span onClick={show}>\r\n                                        <FormattedMessage\r\n                                            id=\"Login.LoginBtn\"\r\n                                            defaultMessage=\"Login\"\r\n                                        />\r\n                                        <MdPlayArrow/>\r\n                                            </span>\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default LoginAndSignup;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {CgListTree} from \"@react-icons/all-files/cg/CgListTree\";\r\nimport {MdStreetview} from \"@react-icons/all-files/md/MdStreetview\";\r\nimport {HiInboxIn} from \"@react-icons/all-files/hi/HiInboxIn\";\r\nimport {VscReferences} from \"@react-icons/all-files/vsc/VscReferences\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Theme} from \"../ThemeContext\";\r\n\r\nconst AccountsNavigator = () => {\r\n\r\n    const history = useHistory();\r\n    const theme = useContext(Theme);\r\n\r\n    const styling = theme.theme == 'dark' ? { color:\"#fff\"} : {color:\"#333\"};\r\n\r\n    return (\r\n        <div>\r\n            <BottomNavigation\r\n                style={{backgroundColor: 'transparent', margin: '15px 0 0 0'}}\r\n                className=\"mb-3 \"\r\n\r\n                showLabels\r\n            >\r\n                <BottomNavigationAction style={styling} onClick={() => history.push(\"account\")}\r\n                                        className=\"ACC-nav-btns\"\r\n                                        label={<FormattedMessage id=\"Account.Info.AccountSettings\"\r\n                                                                 defaultMessage=\"AccountSettings\"/>}\r\n                                        icon={<CgListTree/>}/>\r\n                <BottomNavigationAction style={styling} onClick={() => history.push(\"accountLevel\")} className=\"ACC-nav-btns\"\r\n                                        label={<FormattedMessage id=\"Account.Info.AccountLevel\"\r\n                                                                 defaultMessage=\"AccountLevel\"/>}\r\n                                        icon={<MdStreetview/>}/>\r\n                <BottomNavigationAction style={styling} onClick={() => history.push(\"messages\")} className=\"ACC-nav-btns\"\r\n                                        label={<FormattedMessage id=\"Account.Info.MessageCenter\"\r\n                                                                 defaultMessage=\"MessageCenter\"/>} icon={<HiInboxIn/>}/>\r\n                <BottomNavigationAction style={styling} onClick={() => history.push(\"settings\")} className=\"ACC-nav-btns\"\r\n                                        label={<FormattedMessage id=\"Account.Info.Settings\" defaultMessage=\"Setting\"/>}\r\n                                        icon={<VscReferences/>}/>\r\n            </BottomNavigation>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccountsNavigator;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport Footer from \"../widgets/Footer\";\r\nimport '../css/bootstrap.css';\r\nimport '../css/accountLevel.css';\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport {IoMdArrowDropdown} from \"@react-icons/all-files/io/IoMdArrowDropdown\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport {CgListTree} from \"@react-icons/all-files/cg/CgListTree\";\r\nimport {MdStreetview} from \"@react-icons/all-files/md/MdStreetview\";\r\nimport {HiInboxIn} from \"@react-icons/all-files/hi/HiInboxIn\";\r\nimport {VscReferences} from \"@react-icons/all-files/vsc/VscReferences\";\r\nimport AccountsNavigator from \"../widgets/AccountsNavigator\";\r\nimport {LoginContext} from \"../../Root\";\r\n\r\nconst percentage = 50;\r\n\r\n\r\nconst AccountLevel = (props) => {\r\n\r\n        let history = useHistory();\r\n\r\n        function handleIdVerificationClick() {\r\n            history.push(\"/id_verification\");\r\n        }\r\n\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    useEffect(() => {\r\n        if(!isLoggedIn)\r\n            history.push('login');\r\n    }, []);\r\n\r\n    const context = useContext(Context);\r\n\r\n    return (\r\n        <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-12 col-lg-12 col-xl-10  col-sm-12 col-xs-12\">\r\n                        <div className=\"card shadow accountLevel-container\">\r\n\r\n                      <AccountsNavigator />\r\n                                <hr/>\r\n\r\n                            <div className=\"card-header mt-3\">\r\n\r\n\r\n                                <div className=\"btn accts-level \">\r\n                                    Accts\r\n                                    <br/>\r\n                                    <span>LV0</span>\r\n                                </div>\r\n                                <div className=\"emptyCircle rounded-circle\"></div>\r\n                                <div className=\"card-subtitle withdrawalLimit-container mb-3\">\r\n                                    <div className=\"withdrawalLimit\">\r\n                                        <h5 className=\"card-title text-center\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <div className=\"btn accts-level-hidden \">\r\n                                                <FormattedMessage\r\n                                                    id=\"hiddenBtn\"\r\n                                                    defaultMessage=\"Account Level\"\r\n                                                />\r\n                                            </div>\r\n                                            <FormattedMessage\r\n                                                id=\"AccountLevel.FirstCard.Withdrawal\"\r\n                                                defaultMessage=\"Withdrawal\"\r\n                                            />\r\n\r\n                                            <div className=\"amount\">10,000.00 USD</div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <hr/>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"verification-steps mt-4 \">\r\n                                    <ul className=\"ACC-tilesWrap \">\r\n                                        <li className={`Acc-first-card`} >\r\n                                            <h2>1</h2>\r\n                                            <h3>\r\n                                                <div className=\"basicInfo-container mt-1\">\r\n                                                    <div className=\"basicInfo-text \">\r\n                      <span className=\"card-text\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                             <FormattedMessage\r\n                                 id=\"AccountLevel.StepsCards.CompleteMobile\"\r\n                                 defaultMessage=\"CompleteMobile\"\r\n                             />\r\n                          <br/>\r\n                         <FormattedMessage\r\n                             id=\"AccountLevel.StepsCards.CompleteMobile.sec\"\r\n                             defaultMessage=\"TOTP binding\"\r\n                         />\r\n                      </span>\r\n                                                        <div className=\"center2\">\r\n                                                            <p>\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    name=\"A\"\r\n                                                                    className=\"Checkbox box\"\r\n                                                                    defaultChecked\r\n                                                                    disabled\r\n                                                                />\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </h3>\r\n                                        </li>\r\n                                        <li className={` ${!props.isVerified ? \"not-verifiedLI\" : \"Acc-second-card\"}`} onClick={handleIdVerificationClick}>\r\n                                            <h2 className={`${!props.isVerified ? \"not-verified\" : \"\"}`}>2</h2>\r\n                                            <h3 className={`${!props.isVerified ? \"not-verified\" : \"\"}`}>\r\n                                                <div className=\"basicInfo-container mt-1\">\r\n                    <span className=\"basicInfo-text\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                            <FormattedMessage\r\n                                id=\"AccountLevel.StepsCards.ID\"\r\n                                defaultMessage=\"ID\"\r\n                            />\r\n                        <br/>\r\n                               <FormattedMessage\r\n                                   id=\"AccountLevel.StepsCards.ID.sec\"\r\n                                   defaultMessage=\"Verification\"\r\n                               />{\" \"}\r\n                    </span>{\" \"}\r\n                                                </div>\r\n                                                <div className=\"center2\">\r\n                                                    <p>\r\n                                                        <input type=\"checkbox\" name=\"A\" className=\"Checkbox box\"\r\n                                                               disabled/>\r\n                                                    </p>\r\n                                                </div>\r\n                                            </h3>\r\n                                        </li>\r\n                                        <li className={` ${!props.isVerified ? \"not-verifiedLI\" : \"Acc-third-card\"}`}>\r\n                                            <h2>3</h2>\r\n                                            <h3 className={`${!props.isVerified ? \"not-verified\" : \"\"}`}>\r\n                                                <div className=\"basicInfo-container mt-1\">\r\n                    <span className=\"basicInfo-text\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                       <FormattedMessage\r\n                           id=\"AccountLevel.StepsCards.Contact\"\r\n                           defaultMessage=\"Contact\"\r\n                       />\r\n                        <br/>\r\n                     <FormattedMessage\r\n                         id=\"AccountLevel.StepsCards.Contact.sec\"\r\n                         defaultMessage=\"Support\"\r\n                     />\r\n                    </span>\r\n                                                </div>\r\n                                                <div className=\"center2\">\r\n                                                    <p>\r\n                                                        <input type=\"checkbox\" name=\"A\" className=\"Checkbox box\"\r\n                                                               disabled/>\r\n                                                    </p>\r\n                                                </div>\r\n                                            </h3>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                                <hr/>\r\n\r\n                            <div className=\"card-header\">\r\n\r\n                                    <div className=\"btn vip-level\">\r\n                                        VIP\r\n                                        <br/>\r\n                                        LV0\r\n                                    </div>\r\n                                    <div className=\"emptyCircle rounded-circle\"></div>\r\n                                    <div className=\"card-subtitle VipLevel-container \">\r\n                                        <div className=\" VipLevel\">\r\n                                            <h5 className=\"card-title text-center\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <div className=\"btn vip-level-hidden\">\r\n                                                    VIP\r\n                                                    <span>Level</span>\r\n                                                </div>\r\n                                                <FormattedMessage\r\n                                                    id=\"AccountLevel.Second\"\r\n                                                    defaultMessage=\"AccountLevel.Second\"\r\n                                                /> <br/>\r\n                                                <FormattedMessage\r\n                                                    id=\"AccountLevel.ProgressBar.CurrentCETHolding.sec\"\r\n                                                    defaultMessage=\"\"\r\n                                                />\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"card-body\">\r\n\r\n\r\n                                    <div className=\"row\">\r\n                                        <div\r\n                                            className=\"withdrawTable-container col-lg-6 col-md-12 col-sm-12 col-xs-12 mt-4\"\r\n                                            style={{overflowX: \"auto\"}}>\r\n\r\n                                            <div className=\"pie-progress-container \">\r\n\r\n                                                <div className={`pie_progress `}>\r\n                                                    <CircularProgressbar styles={buildStyles({\r\n\r\n\r\n                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                        strokeLinecap: 'butt',\r\n\r\n                                                        // Text size\r\n                                                        textSize: '18px',\r\n\r\n\r\n                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                        pathTransitionDuration: 0.5,\r\n\r\n                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                        // pathTransition: 'none',\r\n\r\n                                                        // Colors\r\n                                                        pathColor: `#4d88ff`,\r\n                                                        trailColor: '#d6d6d6',\r\n                                                        textColor: '#5f5f5f',\r\n                                                        backgroundColor: '#4d88ff',\r\n                                                    })}\r\n                                                                         value={percentage} text={`${percentage}%`}/>\r\n                                                </div>\r\n\r\n                                                <div className=\"pie_progress-title text-capitalize\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    <FormattedMessage\r\n                                                        id=\"AccountLevel.ProgressBar.CurrentCETHolding\"\r\n                                                        defaultMessage=\"CurrentCETHolding\"\r\n                                                    />\r\n                                                    <div className=\"amount\" dir={\"ltr\"}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.ProgressBar.Amount\"\r\n                                                            defaultMessage=\"Amount\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"VIP_level\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <h2 className=\"card-title p-3\">VIP Level</h2>\r\n                                            </div>\r\n                                            <table>\r\n                                                <tbody>\r\n                                                <tr className=\"title-container\">\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.table.VIPLevel\"\r\n                                                            defaultMessage=\"VIPLevel\"\r\n                                                        />\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.table.CETHolding\"\r\n                                                            defaultMessage=\"CETHolding\"\r\n                                                        />\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.table.SpotFees\"\r\n                                                            defaultMessage=\"SpotFees\"\r\n                                                        />\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.table.MarginDaily\"\r\n                                                            defaultMessage=\"MarginDaily\"\r\n                                                        />\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.table.PerpetualFees\"\r\n                                                            defaultMessage=\"PerpetualFees\"\r\n                                                        />\r\n                                                    </th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Jill</td>\r\n                                                    <td>Smith</td>\r\n                                                    <td>50</td>\r\n                                                    <td>50</td>\r\n                                                    <td>50</td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"spot-container col-lg-6 col-md-12 col-sm-12 col-xs-12 mt-4\"\r\n                                            style={{overflowX: \"auto\"}}\r\n                                        >\r\n                                            <div className=\"pie-progress-container \">\r\n                                                <div className={`pie_progress `}>\r\n                                                    <CircularProgressbar styles={buildStyles({\r\n\r\n\r\n                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                        strokeLinecap: 'butt',\r\n\r\n                                                        // Text size\r\n                                                        textSize: '18px',\r\n\r\n\r\n                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                        pathTransitionDuration: 0.5,\r\n\r\n                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                        // pathTransition: 'none',\r\n\r\n                                                        // Colors\r\n                                                        pathColor: `#4d88ff`,\r\n                                                        textColor: '#5f5f5f',\r\n                                                        trailColor: '#d6d6d6',\r\n                                                        backgroundColor: '#4d88ff',\r\n                                                    })}\r\n                                                                         value={percentage} text={`${percentage}%`}/>\r\n                                                </div>\r\n\r\n                                                <div className=\"pie_progress-title text-capitalize\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    <FormattedMessage\r\n                                                        id=\"AccountLevel.SecProgressBar.SpotTrading\"\r\n                                                        defaultMessage=\"Spot Trading \"\r\n                                                    />\r\n                                                    <div className=\"amount\" dir={\"ltr\"}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.SecProgressBar.Amount\"\r\n                                                            defaultMessage=\"Spot Trading \"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"spotMaking\">\r\n                                                <h2 className=\"card-title p-3\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    <FormattedMessage\r\n                                                        id=\"AccountLevel.ProgressBar.sec.SpotMarket\"\r\n                                                        defaultMessage=\"Spot Market Making\"\r\n                                                    />\r\n                                                </h2>\r\n                                            </div>\r\n                                            <table>\r\n                                                <tbody>\r\n                                                <tr className=\"title-container\" >\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.Table.sec.MarketMaking\"\r\n                                                            defaultMessage=\"MarketMaking\"\r\n                                                        />\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.Table.sec.SpotTrading\"\r\n                                                            defaultMessage=\"Spot Trading Volume (Last month)\"\r\n                                                        />\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        <FormattedMessage\r\n                                                            id=\"AccountLevel.Table.sec.SpotFees\"\r\n                                                            defaultMessage=\"SpotFees\"\r\n                                                        />\r\n                                                    </th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Jill</td>\r\n                                                    <td>Smith</td>\r\n                                                    <td>50</td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-5 mb-4\">\r\n                                        <a className=\"btn spot-showMore\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <FormattedMessage\r\n                                                id=\"AccountLevel.ShowMore\"\r\n                                                defaultMessage=\"Show more\"\r\n                                            />\r\n                                            <IoMdArrowDropdown className=\"ms-2 fas fa-sort-down\"/>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\nexport default AccountLevel","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, {createFilterOptions} from '@mui/material/Autocomplete';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Theme} from \"../ThemeContext\";\r\n\r\n\r\n\r\nconst MarketSearchSec = (props) => {\r\n\r\n\r\n    const [marketList, setMarketList] = useState([]);\r\n    const [networks, setNetworks] = useState([]);\r\n    const [fullNameMarket, setFullNameMarket] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isMarket, setIsMarket] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchCoinHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            const listResponse = await axios.get('currencies/list');\r\n\r\n            if (listResponse.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n\r\n            const marketL = (listResponse.data);\r\n\r\n\r\n            const loadedCoinList = [];\r\n            const loadedSecCoinList = [];\r\n            const loadedNetwork = [];\r\n\r\n            for (var keys in marketL) {\r\n                if (marketL[keys].short_name != null) {\r\n                    loadedCoinList.push(\r\n                        marketL[keys].short_name\r\n                    );\r\n                    loadedNetwork.push({\r\n                            id: keys,\r\n                            name: marketL[keys].short_name,\r\n                            networks: marketL[keys].networks\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            setMarketList(loadedCoinList);\r\n            setNetworks(loadedNetwork);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const [val, setVal] = useState();\r\n    const theme = useContext(Theme);\r\n    const styling = theme.theme == 'dark' ? { paddingTop:5 , backgroundColor:\"#cecece\" , borderRadius:4 } : { borderRadius:4 , paddingTop:5 };\r\n\r\n    useEffect(() => {\r\n        fetchCoinHandler();\r\n        if (props.onFetchCoinData) {\r\n            props.onFetchCoinData(val, networks, props.configData);\r\n        }\r\n        if (props.onSocket && val != undefined && props.onGetMarketDetail) {\r\n            props.onSocket(val + \"USDT\");\r\n            props.onGetMarketDetail(val);\r\n            props.setFirst(val);\r\n        }\r\n        if (props.market == true && val != undefined) {\r\n            setIsMarket(true);\r\n            props.setSecond(val);\r\n        }\r\n    }, [fetchCoinHandler, val]);\r\n\r\n\r\n    const filterOptions = createFilterOptions({\r\n        matchFrom: 'start'\r\n    });\r\n\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"highlights-demo\"\r\n            sx={{width: props.size , padding:0}}\r\n            options={marketList}\r\n            filterSelectedOptions={true}\r\n            onChange={\r\n                (event, value) => {\r\n                    setVal(value);\r\n                }\r\n            }\r\n            value={val}\r\n            filterOptions={filterOptions}\r\n            autoHighlight={true}\r\n            clearIcon={false}\r\n            renderInput={(params) => (\r\n                <TextField autoFocus={true} {...params}\r\n                            variant=\"outlined\" style={styling} margin=\"normal\"/>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MarketSearchSec;\r\n","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport \"../css/withdraw.css\";\r\nimport \"../css/bootstrap.css\";\r\nimport {FaSearchDollar} from \"@react-icons/all-files/fa/FaSearchDollar\";\r\nimport {buildStyles, CircularProgressbar} from \"react-circular-progressbar\";\r\nimport Axios from \"axios\";\r\nimport LoadingDialog from \"../widgets/LoadingDialog\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport MarketSearchSec from \"../widgets/MarketSearchSec\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst Withdraw = () => {\r\n\r\n    const percentage = 50;\r\n\r\n    const [Address, setAddress] = useState();\r\n    const [Arrived, setArrived] = useState(\"\");\r\n    const [arrivedType, setArrivedType] = useState(\"\");\r\n    const [selectedNetworks, setNetworks] = useState();\r\n    const [selectedFee, setFee] = useState();\r\n\r\n    const [all, setAll] = useState();\r\n\r\n\r\n    const [selectedOne, setSelectedOne] = useState();\r\n    const [configs, setConfigs] = useState();\r\n    const [chains, setChain] = useState([]);\r\n    const [coinBalanceInfo, setCoinBalanceInfo] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [IsLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const AddressRef = useRef(\"\");\r\n    const ArrivedRef = useRef(\"\");\r\n\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n\r\n    const fetchGeneralList = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('/v1/common/asset/config');\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n\r\n            const generalLi = await response.json();\r\n            // const data = await (response.data.data.ticker);\r\n\r\n\r\n            const loadedData = [];\r\n\r\n\r\n            for (var key in generalLi.data) {\r\n                loadedData.push({\r\n                    name: generalLi.data[key].asset,\r\n                    withdraw_least_amount: generalLi.data[key].withdraw_least_amount,\r\n                    withdraw_tx_fee: generalLi.data[key].withdraw_tx_fee,\r\n                    chain: generalLi.data[key].chain,\r\n                    can_withdraw: generalLi.data[key].can_withdraw\r\n                });\r\n            }\r\n\r\n            setConfigs(loadedData);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            history.push('login');\r\n        }\r\n        else {\r\n            fetchGeneralList();\r\n        }\r\n    }, [fetchGeneralList]);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        await Axios.post(\"\", {\r\n            Address: AddressRef.current,\r\n            Arrived: ArrivedRef.current,\r\n        })\r\n            .then((res) => {\r\n                if (res.data.status == \"ok\") {\r\n\r\n                    console.log(res.data.data.tmp_token);\r\n\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const fetchCoinData = useCallback(async (val, networks, config) => {\r\n        setIsLoading(true);\r\n        setArrived(\"\");\r\n        setSelectedOne(null);\r\n        setArrivedType(val);\r\n        const loadedConfigs = [];\r\n        for (var key in networks) {\r\n            if (networks[key].name === val) {\r\n                setNetworks(networks[key]);\r\n            }\r\n            for (var i in config) {\r\n                for (var j in networks[key].networks) {\r\n                    if (networks[key].name === val && config[i].name === val && networks[key].networks[j] == config[i].chain) {\r\n                        loadedConfigs.push({\r\n                            name: val,\r\n                            network: networks[key].networks[j],\r\n                            chain: config[i].chain,\r\n                            withdraw_tx_fee: config[i].withdraw_tx_fee\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setChain(loadedConfigs);\r\n\r\n        const Response = await axios.get('core/balanceInfo' , {\r\n            headers:{\r\n                'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n\r\n        if (Response.status !== 200) {\r\n            throw new Error('Something went wrong with CoinList!');\r\n        }\r\n\r\n        const balanceInfo = (Response.data.data);\r\n\r\n        const loadedBalanceInfo = [];\r\n\r\n        for (var balance in balanceInfo) {\r\n            if (balance == val) {\r\n                loadedBalanceInfo.push({\r\n                    name: val,\r\n                    available: balanceInfo[balance].available,\r\n                    frozen: balanceInfo[balance].frozen,\r\n                })\r\n            }\r\n        }\r\n\r\n        setCoinBalanceInfo(loadedBalanceInfo);\r\n\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n\r\n    const context = useContext(Context);\r\n\r\n    let content;\r\n\r\n    if (chains.length === 0 && selectedNetworks != undefined) {\r\n        content = <li className=\"list-group-item border-0\">Found no Chain.</li>;\r\n    }\r\n\r\n    if (error) {\r\n        content = <li className=\"list-group-item border-0\">{error}</li>;\r\n    }\r\n\r\n    if (IsLoading) {\r\n        content = <li className=\"list-group-item border-0\"><CircularProgress/></li>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            {isLoading && <LoadingDialog/>}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10 col-lg-10 col-xl-8 col-xxl-8 col-sm-12 col-xs-12\">\r\n                        <div className=\"card shadow\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"Deposit-title-container ms-1\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                    <p className=\"title m-0\">\r\n                                        <FormattedMessage\r\n                                            id=\"Withdraw.Title\"\r\n                                            defaultMessage=\"Withdraw\"\r\n                                        />\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8 col-xl-8 col-sm-12 col-xs-12\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header border-0\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <label className=\"fw-bold\">Coin</label>\r\n                                                <MarketSearchSec\r\n                                                    configData={configs}\r\n                                                    onFetchCoinData={fetchCoinData}\r\n                                                    lable={<FormattedMessage\r\n                                                        id=\"Withdraw.Coin\"\r\n                                                        defaultMessage=\"Coin\"\r\n                                                    />}/>\r\n\r\n                                                <div className=\"Assets-container-responsive mt-4\"\r\n                                                     dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    {coinBalanceInfo.map((Balance) => (\r\n                                                        <div className=\"row justify-content-around\">\r\n                                                            <p className=\"assets\">\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.Assets\"\r\n                                                                    defaultMessage=\"Assets\"\r\n                                                                />\r\n                                                                <br/>\r\n                                                                <span\r\n                                                                    className=\"Amount\">{Math.floor((parseFloat(Balance.available) + parseFloat(Balance.frozen)) * 1000000) / 1000000} {Balance.name}</span>\r\n                                                            </p>\r\n                                                            <p className=\"frozen-assets\">\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.FrozenAsset\"\r\n                                                                    defaultMessage=\"FrozenAsset\"\r\n                                                                />\r\n                                                                <br/>\r\n                                                                <span\r\n                                                                    className=\"Amount\">{Math.floor(Balance.frozen * 1000000) / 1000000} {Balance.name}</span>\r\n                                                            </p>\r\n                                                            <p className=\"available\">\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.Available\"\r\n                                                                    defaultMessage=\"Available\"\r\n                                                                />\r\n                                                                <br/>\r\n                                                                <span\r\n                                                                    className=\"Amount\">{Math.floor(Balance.available * 1000000) / 1000000} {Balance.name}</span>\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"withdrawProtocols\">\r\n                                                    <h5 className=\"Protocol-Type mt-3 mb-4\"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.ProtocolType\"\r\n                                                            defaultMessage=\"ProtocolType\"\r\n                                                        />\r\n                                                    </h5>\r\n\r\n                                                    <ul className=\"list-group list-group-horizontal-md withdrawProtocol-list \">\r\n                                                        {chains.map((chains, index) => (\r\n                                                            <li className=\"list-group-item col-3\">\r\n                                                                <a className=\"col-12\" href=\"#\">\r\n                                                                    <button onClick={() => {setSelectedOne(index);setFee(chains.withdraw_tx_fee)}}\r\n                                                                            className={`${selectedOne == index ? 'protocolBtn-selected' : 'protocolBtn'}`}>\r\n                                                                        {chains.network}\r\n                                                                        <br/>\r\n                                                                        <span className=\"fee-container\">\r\n                                                          <div\r\n                                                              className=\"fee-amount\">Fee : {chains.withdraw_tx_fee}</div>\r\n                                                                            {\" \"}\r\n                                                                            {chains.name}\r\n                                                        </span>\r\n                                                                    </button>\r\n                                                                </a>\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                    <section\r\n                                                        className='card-text  text-center protocol-feedback'>{content}</section>\r\n                                                </div>\r\n                                                <div className=\"Completion\">\r\n                                                    <form>\r\n                                                        <div className=\"row justify-content-center m-3\">\r\n                                                            <div className=\"withdraw-address-input-container mt-4 mb-2\">\r\n                                                                <h5 className=\"form-label Withdrawal-Address mt-3\"\r\n                                                                    dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                                    <FormattedMessage\r\n                                                                        id=\"Withdraw.WithdrawalAddress\"\r\n                                                                        defaultMessage=\"WithdrawalAddress\"\r\n                                                                    />\r\n                                                                </h5>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control\"\r\n                                                                        placeholder=\"Recipient's username\"\r\n                                                                        aria-label=\"Recipient's username\"\r\n                                                                        aria-describedby=\"button-addon2\"\r\n                                                                        ref={AddressRef}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                {/*                                                    <span class=\"t-text d-flex\">*/}\r\n                                                                {/*                                                    <p class=\"Withdrawable-Amount-container pe-2\">*/}\r\n                                                                {/*                                                         Withdrawable Amount:<p class=\"Withdrawable-Amount pe-2\">0<span*/}\r\n                                                                {/*                                                            class=\"crypto-type ps-2\">BTC</span></p>*/}\r\n                                                                {/*                                                        </p>*/}\r\n                                                                {/*                                                   </span>*/}\r\n                                                                <h5 className=\"form-label Actual-Arrived mt-5\"\r\n                                                                    dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                                    <FormattedMessage\r\n                                                                        id=\"Withdraw.ActualArrived\"\r\n                                                                        defaultMessage=\"ActualArrived\"\r\n                                                                    />\r\n                                                                </h5>\r\n                                                                <div className=\"input-group Actual-Arrived mb-3\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control border-end-0\"\r\n                                                                        placeholder=\"Recipient's username\"\r\n                                                                        aria-label=\"Recipient's username\"\r\n                                                                        aria-describedby=\"button-addon2\"\r\n                                                                        ref={ArrivedRef}\r\n                                                                        value={Arrived}\r\n                                                                        onChange={(e) =>{setArrived(e.target.value)}}\r\n                                                                    />\r\n                                                                    <span className=\"e-button-container\">\r\n                              {arrivedType}\r\n                                                                        <button\r\n                                                                            className=\"e-button btn btn-outline-secondary\"\r\n                                                                            disabled={selectedOne != null ? false : true}\r\n                                                                            type=\"button\" onClick={() => {setArrived(coinBalanceInfo[0].available)\r\n                                                                        }}>All</button>\r\n                            </span>\r\n                                                                </div>\r\n                                                                <h5 className=\"withdraw-amount-title mt-4 mb-4\">\r\n                                                                    <FormattedMessage\r\n                                                                        id=\"Withdraw.Limit\"\r\n                                                                        defaultMessage=\"WithdrawLimit\"\r\n                                                                    />\r\n                                                                    <span className=\"withdraw-amount-sec\">250/500</span>\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <a href=\"/\">\r\n                                                            <button\r\n                                                                className={`bn632-hover bn25 ${context.locale == \"fa\" ? \"float-start\" : \"float-end\"}  col-md-4 col-xs-8 col-sm-6 col-xl-3 `}>\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.Submit\"\r\n                                                                    defaultMessage=\"Submit\"\r\n                                                                />\r\n                                                            </button>\r\n                                                        </a>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-xl-4 col-sm-12  ps-0 side-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header border-bottom-0 \">\r\n                                                <div className=\"pie-progress-container mt-2\">\r\n                                                    <div className={`pie_progress `}>\r\n                                                        <CircularProgressbar styles={buildStyles({\r\n\r\n\r\n                                                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                            strokeLinecap: 'butt',\r\n\r\n                                                            // Text size\r\n                                                            textSize: '18px',\r\n\r\n\r\n                                                            // How long animation takes to go from one percentage to another, in seconds\r\n                                                            pathTransitionDuration: 0.5,\r\n\r\n                                                            // Can specify path transition in more detail, or remove it entirely\r\n                                                            // pathTransition: 'none',\r\n\r\n                                                            // Colors\r\n                                                            pathColor: `#4d88ff`,\r\n                                                            textColor: '#5f5f5f',\r\n                                                            trailColor: '#d6d6d6',\r\n                                                            backgroundColor: '#4d88ff',\r\n                                                        })}\r\n                                                                             value={percentage}\r\n                                                                             text={`${percentage}%`}/>\r\n                                                    </div>\r\n                                                    <div className=\"pie_progress-title text-capitalize\"\r\n                                                         dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Withdraw.Limit\"\r\n                                                            defaultMessage=\"WithdrawLimit\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <p className=\"withdraw-amount text-capitalize\">250/500</p>\r\n                                                </div>\r\n                                                <div className=\"Assets-container mt-4\"\r\n                                                     dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    {coinBalanceInfo.map((Balance) => (\r\n                                                        <div className=\"row justify-content-around\">\r\n                                                            <p className=\"assets\">\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.Assets\"\r\n                                                                    defaultMessage=\"Assets\"\r\n                                                                />\r\n                                                                <br/>\r\n                                                                <span\r\n                                                                    className=\"Amount\">{Math.floor((parseFloat(Balance.available) + parseFloat(Balance.frozen)) * 1000000) / 1000000} {Balance.name}</span>\r\n                                                            </p>\r\n                                                            <p className=\"frozen-assets\">\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.FrozenAsset\"\r\n                                                                    defaultMessage=\"FrozenAsset\"\r\n                                                                />\r\n                                                                <br/>\r\n                                                                <span\r\n                                                                    className=\"Amount\">{Math.floor(Balance.frozen * 1000000) / 1000000} {Balance.name} </span>\r\n                                                            </p>\r\n                                                            <p className=\"available\">\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Withdraw.Available\"\r\n                                                                    defaultMessage=\"Available\"\r\n                                                                />\r\n                                                                <br/>\r\n                                                                <span\r\n                                                                    className=\"Amount\">{Math.floor(Balance.available * 1000000) / 1000000} {Balance.name}</span>\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body list-container \"\r\n                                                 dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <hr/>\r\n                                                <div className=\"instruction-box \">\r\n                                                    <p className=\"explantation m-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Withdraw.Attention\"\r\n                                                            defaultMessage=\"FrozenAsset\"\r\n                                                        />\r\n                                                    </p>\r\n                                                </div>\r\n                                                <ol className=\"list-group list-group-numbered \">\r\n                                                    <li className=\"list-group-item border-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Withdraw.Attention.first\"\r\n                                                            defaultMessage=\"Attention.first\"\r\n                                                        />\r\n                                                    </li>\r\n                                                    <li className=\"list-group-item border-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Withdraw.Attention.second\"\r\n                                                            defaultMessage=\"Attention.second\"\r\n                                                        />\r\n                                                    </li>\r\n                                                    <li className=\"list-group-item border-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Withdraw.Attention.third\"\r\n                                                            defaultMessage=\"Attention.third\"\r\n                                                        />\r\n                                                    </li>\r\n                                                </ol>\r\n                                                <hr/>\r\n                                                <button className=\"btn FAQ mt-2\" type=\"button\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Attention.WithdrawFAQ\"\r\n                                                        defaultMessage=\"Attention.WithdrawFAQ\"\r\n                                                    />\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 mt-3 \">\r\n                                    <div className=\"card p-3 withdrawal-records\">\r\n                                        <div className=\"card-header mb-3\">\r\n                                            <h4 className=\"card-title\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <FormattedMessage\r\n                                                    id=\"Withdraw.Table.Title\"\r\n                                                    defaultMessage=\"Last 5 withdrawal \"\r\n                                                />\r\n                                            </h4>\r\n                                        </div>\r\n                                        <table>\r\n                                            <tbody>\r\n                                            <tr className=\"withdrawal-records-title \">\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Table.Time\"\r\n                                                        defaultMessage=\"Time\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Table.Coin\"\r\n                                                        defaultMessage=\"Coin\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Table.ProtocolType\"\r\n                                                        defaultMessage=\"ProtocolType\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Table.WithdrawalAddress\"\r\n                                                        defaultMessage=\"WithdrawalAddress\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Table.Status\"\r\n                                                        defaultMessage=\"Status\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Withdraw.Table.TXID\"\r\n                                                        defaultMessage=\"TXID\"\r\n                                                    />\r\n                                                </th>\r\n                                            </tr>\r\n                                            <tr className=\"withdrawal-records-content\">\r\n                                                <td>Jill</td>\r\n                                                <td>Smith</td>\r\n                                                <td>50</td>\r\n                                                <td>50</td>\r\n                                                <td>50</td>\r\n                                                <td>50</td>\r\n                                            </tr>\r\n                                            <tr className=\"withdrawal-records-content\"></tr>\r\n                                            <tr className=\"withdrawal-records-content\"></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Withdraw;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport PropTypes from \"prop-types\";\r\nimport { isIOS, isAndroid, isSafari } from \"react-device-detect\";\r\nimport moment from \"moment\";\r\n\r\nexport const nowDate = new Date();\r\nexport function parseDate(dateToParse) {\r\n  var date = \"\";\r\n  try {\r\n    if (dateToParse == null) {\r\n      date = \"unknown time\";\r\n    } else {\r\n      var date1 = new Date(dateToParse);\r\n\r\n      const nowDate = new Date();\r\n\r\n      var Difference_In_Time = nowDate.getTime() - date1.getTime();\r\n\r\n      var Difference_In_Days = (\r\n        Difference_In_Time /\r\n        (1000 * 3600 * 24)\r\n      ).toFixed(0);\r\n\r\n      if (Difference_In_Days < 1) {\r\n        const insec = (Difference_In_Time / 1000).toFixed(0);\r\n        if (insec < 60) {\r\n          if (insec == 0) {\r\n            date = \"Now\";\r\n          } else {\r\n            const d = (Difference_In_Time / 1000).toFixed(0);\r\n            date = d + (d > 1 ? \" seconds ago\" : \" second ago\");\r\n          }\r\n        } else if (Difference_In_Time / (1000 * 3600) < 1) {\r\n          const d = (Difference_In_Time / (1000 * 60)).toFixed(0);\r\n          date = d + (d > 1 ? \" minutes ago\" : \" minute ago\");\r\n        } else {\r\n          const d = (Difference_In_Time / (1000 * 3600)).toFixed(0);\r\n          date = d + (d > 1 ? \" hours ago\" : \" hour ago\");\r\n        }\r\n      } else if (Difference_In_Days > 30) {\r\n        //if (Difference_In_Days < 15)\r\n        const d = (Difference_In_Days / 30).toFixed(0);\r\n        date = d + (d > 1 ? \" months ago\" : \" month ago\");\r\n      } else if (Difference_In_Days > 365) {\r\n        const d = (Difference_In_Days / 365).toFixed(0);\r\n        date = d + (d > 1 ? \" years ago\" : \" year ago\");\r\n      } else {\r\n        date =\r\n          Difference_In_Days +\r\n          (Difference_In_Days > 1 ? \" days ago\" : \" day ago\");\r\n      }\r\n      // else {\r\n      //     date = 'خیلی روز پیش'\r\n      // }\r\n    }\r\n    return date;\r\n  } catch (e) {\r\n    return \"زمان نامشخص\";\r\n  }\r\n}\r\n\r\nexport function parseFulDate(dateToParse) {\r\n  var date = \"\";\r\n  try {\r\n    if (dateToParse == null) {\r\n      date = \"Unknown Date\";\r\n    } else {\r\n      if (dateToParse > 0) {\r\n        date = moment.unix(dateToParse).format(\"YYYY-MM-DD HH:mm:ss\");\r\n      } else {\r\n        date = moment(dateToParse, \"YYYY-MM-DDThh:mm:ss.Z\").format(\r\n          \"YYYY-MM-DD HH:mm:ss\"\r\n        );\r\n      }\r\n    }\r\n    return date;\r\n  } catch (e) {\r\n    return \"Unknown Date\";\r\n  }\r\n}\r\n\r\nexport function parseDistance(distance) {\r\n  var dis = \"\";\r\n  if (distance == -1) {\r\n    dis = \"فاصله نامشخص\";\r\n  } else if (distance <= 1000) {\r\n    dis = \"در محدوده\";\r\n  } else {\r\n    dis = (distance / 1000).toFixed(2) + \" کیلومتر\";\r\n  }\r\n  return dis;\r\n}\r\n\r\nexport function parsePrice(p) {\r\n  const price =\r\n    p instanceof Number\r\n      ? p.toFixedSpecial(p.toString().length)\r\n      : Number(p).toFixedSpecial(p.toString().length);\r\n  return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ت\";\r\n}\r\n\r\nexport function groupBy(array, key) {\r\n  return array.reduce((hash, obj) => {\r\n    if (obj[key] === undefined) return hash;\r\n    return Object.assign(hash, {\r\n      [obj[key]]: (hash[obj[key]] || []).concat(obj),\r\n    });\r\n  }, {});\r\n}\r\n\r\nexport function parseUSDPrice(p, fixed, is_transfer) {\r\n  if (p == null && is_transfer) {\r\n    return \"Transfer\";\r\n  } else if (p == null) {\r\n    return \"No Price\";\r\n  }\r\n  var decimalsCount = 0;\r\n  const str = (p ?? \"0\").toString();\r\n  if (str.includes(\".\")) {\r\n    const spl = str.split(\".\");\r\n    decimalsCount = spl.length > 0 ? spl[1].length : 0;\r\n  }\r\n  if (p == 0) {\r\n    return \"\";\r\n  } else {\r\n    const price = Math.trunc(\r\n      p instanceof Number\r\n        ? p.toFixedSpecial(decimalsCount)\r\n        : Number(p).toFixedSpecial(decimalsCount)\r\n    );\r\n\r\n    if (p > 1000000000) {\r\n      return (\r\n        \"B＄\" +\r\n        (price / 1000000000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n      );\r\n    } else if (p > 1000000) {\r\n      return (\r\n        \"M＄\" +\r\n        (price / 1000000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n      );\r\n    } else if (p > 1000) {\r\n      return (\r\n        \"K＄\" + (price / 1000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n      );\r\n    } else {\r\n      return \"＄\" + price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function startTimer(duration, display) {\r\n  var timer = duration,\r\n    minutes,\r\n    seconds;\r\n  setInterval(function () {\r\n    minutes = parseInt(timer / 60, 10);\r\n    seconds = parseInt(timer % 60, 10);\r\n\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n    display.innerHTML = minutes + \":\" + seconds;\r\n\r\n    if (--timer < 0) {\r\n      timer = duration;\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nNumber.prototype.parseNumberLength = function () {\r\n  const s = this.toString();\r\n  if (s.includes(\"e-\")) {\r\n    return Number(s.split(\"e-\")[1]);\r\n  } else if (s.includes(\"e+\")) {\r\n    return Number(s.split(\"e+\")[1]);\r\n  } else {\r\n    return s.length;\r\n  }\r\n};\r\n\r\nNumber.prototype.toFixedSpecial = function (n, fixed) {\r\n  var str = this.toFixed(n);\r\n  if (str.indexOf(\"e+\") === -1 && str.indexOf(\"e-\") === -1) return str;\r\n\r\n  // if number is in scientific notation, pick (b)ase and (p)ower\r\n  var spl = \"\";\r\n  if (str.includes(\"e+\")) {\r\n    spl = \"e+\";\r\n  } else if (str.includes(\"e-\")) {\r\n    spl = \"e-\";\r\n  }\r\n  str = str\r\n    .replace(\".\", \"\")\r\n    .split(spl)\r\n    .reduce(function (p, b) {\r\n      return p + Array(b - p.length + 2).join(0);\r\n    });\r\n\r\n  if (n > 0) str += \".\" + Array(n + 1).join(0);\r\n\r\n  return str;\r\n};\r\n\r\nexport function parseNumber(num) {\r\n  if (num < 1) {\r\n    return num;\r\n  }\r\n  return (num ?? \"0\").toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function parseLikeOrDislikes(number) {\r\n  var final = \"\";\r\n  if (number < 1000) {\r\n    final = number;\r\n  } else {\r\n    final = number / 1000 + \"K\";\r\n  }\r\n  return final;\r\n}\r\n\r\nArray.prototype.insert = function (index, item) {\r\n  this.splice(index, 0, item);\r\n};\r\n\r\nexport const usePosition = () => {\r\n  const [position, setPosition] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  const onChange = ({ coords }) => {\r\n    setPosition({\r\n      latitude: coords.latitude,\r\n      longitude: coords.longitude,\r\n    });\r\n  };\r\n  const onError = (error) => {\r\n    setError(error.message);\r\n  };\r\n  useEffect(() => {\r\n    const geo = navigator.geolocation;\r\n    if (!geo) {\r\n      setError(\"Geolocation is not supported\");\r\n      return;\r\n    }\r\n    const watcher = geo.watchPosition(onChange, onError);\r\n    return () => geo.clearWatch(watcher);\r\n  }, []);\r\n  return { ...position, error };\r\n};\r\n\r\nconst persianNumbers = [\r\n  /۰/g,\r\n  /۱/g,\r\n  /۲/g,\r\n  /۳/g,\r\n  /۴/g,\r\n  /۵/g,\r\n  /۶/g,\r\n  /۷/g,\r\n  /۸/g,\r\n  /۹/g,\r\n];\r\nconst arabicNumbers = [\r\n  /٠/g,\r\n  /١/g,\r\n  /٢/g,\r\n  /٣/g,\r\n  /٤/g,\r\n  /٥/g,\r\n  /٦/g,\r\n  /٧/g,\r\n  /٨/g,\r\n  /٩/g,\r\n];\r\nexport const fixNumbers = (str) => {\r\n  if (typeof str === \"string\") {\r\n    for (var i = 0; i < 10; i++) {\r\n      str = str.replace(persianNumbers[i], i).replace(arabicNumbers[i], i);\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\nexport function TextMaskCustom(props) {\r\n  const { inputRef, ...other } = props;\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask={[\r\n        \"(\",\r\n        /[1-9]/,\r\n        /\\d/,\r\n        /\\d/,\r\n        \")\",\r\n        \" \",\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        \"-\",\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n      ]}\r\n      placeholderChar={\"\\u2000\"}\r\n      showMask\r\n    />\r\n  );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function PriceFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: () => fixNumbers(values.value),\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      suffix=\" تومان\"\r\n    />\r\n  );\r\n}\r\n\r\nPriceFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n// export function NumberFormatCustom(props) {\r\n//     const { inputRef, onChange, ...other } = props\r\n\r\n//     return (\r\n//         <NumberFormat\r\n//             {...other}\r\n//             getInputRef={inputRef}\r\n//             onValueChange={(values) => {\r\n//                 onChange({\r\n//                     target: {\r\n//                         name: props.name,\r\n//                         value: values.value,\r\n//                     },\r\n//                 })\r\n//             }}\r\n//             thousandSeparator\r\n//             isNumericString\r\n//         />\r\n//     )\r\n// }\r\n\r\nexport function DollarFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"＄\"\r\n    />\r\n  );\r\n}\r\n\r\nexport function NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nDollarFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function getColsNumberByWidth(width) {\r\n  return width > 1600\r\n    ? 6\r\n    : width > 1200\r\n    ? 5\r\n    : width > 900\r\n    ? 4\r\n    : width > 700\r\n    ? 3\r\n    : 2;\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n  const hasWindow = typeof window !== \"undefined\";\r\n  function getWindowDimensions() {\r\n    const width = hasWindow ? window.innerWidth : null;\r\n    const height = hasWindow ? window.innerHeight : null;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n  useEffect(() => {\r\n    if (!isIOS && !isAndroid && !isSafari && hasWindow) {\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }\r\n  }, [hasWindow]);\r\n  return windowDimensions;\r\n}\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useTheme, styled} from '@mui/material/styles';\r\nimport Popper from '@mui/material/Popper';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport Autocomplete, {autocompleteClasses, createFilterOptions} from '@mui/material/Autocomplete';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Box from '@mui/material/Box';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport {RiCoinsFill} from \"@react-icons/all-files/ri/RiCoinsFill\";\r\nimport axios from \"axios\";\r\n\r\nconst StyledAutocompletePopper = styled('div')(({theme}) => ({\r\n    [`& .${autocompleteClasses.paper}`]: {\r\n        boxShadow: 'none',\r\n        margin: 0,\r\n        color: 'inherit',\r\n        fontSize: 13,\r\n    },\r\n    [`& .${autocompleteClasses.listbox}`]: {\r\n        backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128',\r\n        padding: 0,\r\n        [`& .${autocompleteClasses.option}`]: {\r\n            minHeight: 'auto',\r\n            alignItems: 'flex-start',\r\n            padding: 8,\r\n            borderBottom: `1px solid  ${\r\n                theme.palette.mode === 'light' ? ' #eaecef' : '#30363d'\r\n            }`,\r\n            '&[aria-selected=\"true\"]': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n            '&[data-focus=\"true\"], &[data-focus=\"true\"][aria-selected=\"true\"]': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    },\r\n    [`&.${autocompleteClasses.popperDisablePortal}`]: {\r\n        position: 'relative',\r\n    },\r\n}));\r\n\r\nfunction PopperComponent(props) {\r\n    const {disablePortal, anchorEl, open, ...other} = props;\r\n    return <StyledAutocompletePopper {...other} />;\r\n}\r\n\r\nPopperComponent.propTypes = {\r\n    anchorEl: PropTypes.any,\r\n    disablePortal: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst StyledPopper = styled(Popper)(({theme}) => ({\r\n    border: `1px solid ${theme.palette.mode === 'light' ? '#e1e4e8' : '#30363d'}`,\r\n    boxShadow: `0 8px 24px ${\r\n        theme.palette.mode === 'light' ? 'rgba(149, 157, 165, 0.2)' : 'rgb(1, 4, 9)'\r\n    }`,\r\n    borderRadius: 6,\r\n    width: 300,\r\n    zIndex: theme.zIndex.modal,\r\n    fontSize: 13,\r\n    color: theme.palette.mode === 'light' ? '#24292e' : '#c9d1d9',\r\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128',\r\n}));\r\n\r\nconst StyledInput = styled(InputBase)(({theme}) => ({\r\n    padding: 10,\r\n    width: '100%',\r\n    borderBottom: `1px solid ${\r\n        theme.palette.mode === 'light' ? '#eaecef' : '#30363d'\r\n    }`,\r\n    '& input': {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#0d1117',\r\n        padding: 8,\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        border: `1px solid ${theme.palette.mode === 'light' ? '#eaecef' : '#30363d'}`,\r\n        fontSize: 14,\r\n        '&:focus': {\r\n            boxShadow: `0px 0px 0px 3px ${\r\n                theme.palette.mode === 'light'\r\n                    ? 'rgba(6,27,69,0.3)'\r\n                    : 'rgb(12, 45, 107)'\r\n            }`,\r\n            borderColor: theme.palette.mode === 'light' ? '#30363d' : '#388bfd',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Button = styled(ButtonBase)(({theme}) => ({\r\n    fontSize: 13,\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    paddingBottom: 8,\r\n    color: theme.palette.mode === 'light' ? '#90a1b4' : '#8b949e',\r\n    fontWeight: 600,\r\n    '&:hover,&:focus': {\r\n        color: theme.palette.mode === 'light' ? '#adc1d7' : '#58a6ff',\r\n    },\r\n    '& span': {\r\n        width: '100%',\r\n    },\r\n    '& svg': {\r\n        width: 16,\r\n        height: 16,\r\n    },\r\n}));\r\n\r\nexport default function GitHubLabel(props) {\r\n\r\n    const history = useHistory();\r\n    const [marketList, setMarketList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const fetchCoinHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            const listResponse = await axios.get('currencies/list');\r\n\r\n            if (listResponse.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n\r\n            const marketL = (listResponse.data);\r\n\r\n\r\n            const loadedList = [];\r\n\r\n\r\n            for (var keys in marketL) {\r\n                if (keys != 'insert' && marketL[keys].markets != undefined && marketL[keys].markets.length > 0) {\r\n                    loadedList.push({\r\n                            name: marketL[keys].short_name,\r\n                            market: marketL[keys].markets\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n\r\n            setMarketList(loadedList);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCoinHandler();\r\n    }, [fetchCoinHandler]);\r\n\r\n\r\n    const filterOptions = createFilterOptions({\r\n        matchFrom: 'start'\r\n    });\r\n\r\n    //***************************************************************************************************************\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [value, setValue] = React.useState([]);\r\n    const [pendingValue, setPendingValue] = React.useState();\r\n    const theme = localStorage.getItem('themeMode');\r\n\r\n    const handleClick = (event) => {\r\n        setPendingValue(value);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setValue(pendingValue);\r\n        if (anchorEl) {\r\n            anchorEl.focus();\r\n        }\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const choseCoin = (Value) => {\r\n\r\n        history.replace(\"/Trade?pair=\" + Value);\r\n        history.go();\r\n\r\n    }\r\n\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'github-label' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box sx={{width: 150, fontSize: 36}}>\r\n                <Button sx={{fontSize: 18}} disableRipple aria-describedby={id} onClick={handleClick}>\r\n                    {props.Name}\r\n                </Button>\r\n            </Box>\r\n            <StyledPopper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <div className={`${theme == 'light' ? 'searchBarMarket-light' : 'searchBarMarket-dark'}`}>\r\n                        {/*<Box*/}\r\n                        {/*    sx={{*/}\r\n                        {/*        borderBottom: `1px solid ${*/}\r\n                        {/*            theme.palette.mode === 'light' ? '#eaecef' : '#30363d'*/}\r\n                        {/*        }`,*/}\r\n                        {/*        padding: '8px 10px',*/}\r\n                        {/*        fontWeight: 600,*/}\r\n                        {/*    }}*/}\r\n                        {/*>*/}\r\n                        {/*    Apply labels to this pull request*/}\r\n                        {/*</Box>*/}\r\n                        <Autocomplete\r\n                            open\r\n                            multiple\r\n                            value={pendingValue}\r\n                            onChange={(event, newValue, reason) => {\r\n                                choseCoin(newValue[0].market[0]);\r\n                                setPendingValue(newValue);\r\n                            }}\r\n                            disableCloseOnSelect\r\n                            PopperComponent={PopperComponent}\r\n                            renderTags={() => null}\r\n                            noOptionsText=\"No labels\"\r\n                            renderOption={(props, option, {selected}) => (\r\n                                <li {...props}>\r\n                                    <Box\r\n                                        sx={{width: 17, height: 17, mr: '5px', ml: '-2px'}}\r\n                                        style={{\r\n                                            visibility: selected ? 'visible' : 'hidden',\r\n                                        }}\r\n                                    />\r\n                                    <Box\r\n                                        component=\"span\"\r\n                                        sx={{\r\n                                            width: 16,\r\n                                            height: 16,\r\n                                            flexShrink: 0,\r\n                                            borderRadius: '3px',\r\n                                            mr: 1,\r\n                                            mb: '2px',\r\n                                        }}\r\n                                    >\r\n                                        {/*<img className=\"img-fluid\" src=\"img/BTC_Ico.png\" />*/}\r\n                                        <RiCoinsFill/>\r\n                                    </Box>\r\n                                    <Box\r\n                                        sx={{\r\n                                            fontSize: 16,\r\n                                            flexGrow: 1,\r\n                                            fontWeight:550,\r\n                                            '& span': {\r\n                                                color:\r\n                                                    theme == 'light' ? '#181818' : '#4a4949',\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        {option.name} <span  className={`${theme == 'light' ? 'MarketSearch-coin-light' : 'MarketSearch-coin-dark'}`}>/ {option.market[0].split(option.name)}</span>\r\n                                        <br/>\r\n                                    </Box>\r\n                                    <Box\r\n                                        sx={{opacity: 0.6, width: 18, height: 18}}\r\n                                        style={{\r\n                                            visibility: selected ? 'visible' : 'hidden',\r\n                                        }}\r\n                                    />\r\n                                </li>\r\n                            )}\r\n                            options={marketList}\r\n                            getOptionLabel={(option) => option.market[0]}\r\n                            renderInput={(params) => (\r\n                                <StyledInput\r\n                                    ref={params.InputProps.ref}\r\n                                    inputProps={params.inputProps}\r\n                                    autoFocus\r\n                                    placeholder=\"Filter labels\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </ClickAwayListener>\r\n            </StyledPopper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n// From https://github.com/abdonrd/github-labels\r\nconst labels = [\r\n    {\r\n        name: 'good first issue',\r\n        color: '#7057ff',\r\n        description: 'Good for newcomers',\r\n    },\r\n    {\r\n        name: 'help wanted',\r\n        color: '#008672',\r\n        description: 'Extra attention is needed',\r\n    },\r\n    {\r\n        name: 'priority: critical',\r\n        color: '#b60205',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'priority: high',\r\n        color: '#d93f0b',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'priority: low',\r\n        color: '#0e8a16',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'priority: medium',\r\n        color: '#fbca04',\r\n        description: '',\r\n    },\r\n    {\r\n        name: \"status: can't reproduce\",\r\n        color: '#fec1c1',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'status: confirmed',\r\n        color: '#215cea',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'status: duplicate',\r\n        color: '#cfd3d7',\r\n        description: 'This issue or pull request already exists',\r\n    },\r\n    {\r\n        name: 'status: needs information',\r\n        color: '#fef2c0',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'status: wont do/fix',\r\n        color: '#eeeeee',\r\n        description: 'This will not be worked on',\r\n    },\r\n    {\r\n        name: 'type: bug',\r\n        color: '#d73a4a',\r\n        description: \"Something isn't working\",\r\n    },\r\n    {\r\n        name: 'type: discussion',\r\n        color: '#d4c5f9',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'type: documentation',\r\n        color: '#006b75',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'type: enhancement',\r\n        color: '#84b6eb',\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'type: epic',\r\n        color: '#3e4b9e',\r\n        description: 'A theme of work that contain sub-tasks',\r\n    },\r\n    {\r\n        name: 'type: feature request',\r\n        color: '#fbca04',\r\n        description: 'New feature or request',\r\n    },\r\n    {\r\n        name: 'type: question',\r\n        color: '#d876e3',\r\n        description: 'Further information is requested',\r\n    },\r\n];\r\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport \"../css/bootstrap.css\";\r\nimport \"../css/Trade.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport {RiStarLine} from \"@react-icons/all-files/ri/RiStarLine\";\r\nimport {BsInfo} from \"@react-icons/all-files/bs/BsInfo\";\r\nimport TradingViewWidget, {Themes} from \"react-tradingview-widget\";\r\nimport {Popover, CircularProgress, Box, RadioGroup, FormControlLabel, Radio} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport axios from \"axios\";\r\nimport {parseFulDate, parseNumber, parseUSDPrice} from \"../../Extentions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport MuiTableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport $ from \"jquery\";\r\nimport {Scrollbars} from \"react-custom-scrollbars-2\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport LoadingDialog from \"../widgets/LoadingDialog\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Theme} from \"../ThemeContext\";\r\nimport MarketSearchBar from \"../widgets/MarketSearchBar\";\r\nimport MarketBar from \"../widgets/MarketBar\";\r\nimport {BottomModal, ModalCloseTarget} from \"react-spring-modal\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport {useToasts} from 'react-toast-notifications';\r\nimport ErrorPage from \"../widgets/ErrorPage\";\r\nimport NotAllowed from \"../widgets/NotAllowed\";\r\n\r\n\r\nexport const PrettoSlider = withStyles({\r\n    root: {\r\n        color: \"#3399ff\",\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 20,\r\n        width: 20,\r\n        backgroundColor: \"var(--blue-color)\",\r\n        border: \"2px solid currentColor\",\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: \"calc(-50% + 4px)\",\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    mark: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n        width: 8,\r\n    },\r\n})(Slider);\r\n\r\nexport const marks = [\r\n    {\r\n        value: 0,\r\n        label: \"0%\",\r\n    },\r\n    {\r\n        value: 25,\r\n        label: \"25%\",\r\n    },\r\n    {\r\n        value: 50,\r\n        label: \"50%\",\r\n    },\r\n    {\r\n        value: 75,\r\n        label: \"75%\",\r\n    },\r\n    {\r\n        value: 100,\r\n        label: \"100%\",\r\n    },\r\n];\r\n\r\nfunction SliderValueLabelComponent(props) {\r\n    const {children, open, value} = props;\r\n    return (\r\n        <Tooltip\r\n            open={open}\r\n            enterTouchDelay={0}\r\n            placement=\"top\"\r\n            title={value + \"%\"}\r\n        >\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nSliderValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function Trade(props, {content}) {\r\n\r\n    const TableCell = withStyles({\r\n        root: {\r\n            borderBottom: \"none\"\r\n        }\r\n    })(MuiTableCell);\r\n\r\n    const {addToast} = useToasts();\r\n\r\n    const controller = document.querySelector(\"input[type=range]\");\r\n\r\n    let els = document.getElementsByClassName(\"step\");\r\n    let steps = [];\r\n    Array.prototype.forEach.call(els, (e) => {\r\n        steps.push(e);\r\n        e.addEventListener(\"click\", (x) => {\r\n            progress(x.target.id);\r\n        });\r\n    });\r\n\r\n    function progress(stepNum) {\r\n        let p = stepNum * 25;\r\n        $(\"input[type=range]\").val(p);\r\n\r\n        steps.forEach((e) => {\r\n            if (e.id === stepNum) {\r\n                e.classList.remove(\"completed\");\r\n            }\r\n            if (e.id < stepNum) {\r\n                e.classList.add(\"completed\");\r\n            }\r\n            if (e.id > stepNum) {\r\n                e.classList.remove(\"completed\");\r\n            }\r\n        });\r\n    }\r\n\r\n    const history = useHistory();\r\n    const chartRef = useRef();\r\n    const [error, setError] = useState(false);\r\n\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n\r\n    const [width, setWidth] = useState(1600);\r\n    const [chartTop, setChartTop] = useState(0);\r\n    const [chartLeft, setChartLeft] = useState(0);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setIsOpenCoinSelectorPopover(false);\r\n    };\r\n\r\n    const [isOpenCoinSelectorPopover, setIsOpenCoinSelectorPopover] =\r\n        useState(false);\r\n\r\n    const [isOrderBookSelected, setIsOrderBookIsSelected] = useState(true);\r\n    const [marketList, setMarketList] = useState([]);\r\n\r\n    const [maxBuyOrderBookVolume, setMaxBuyOrderBookVolume] = useState(0);\r\n    const [maxSellOrderBookVolume, setMaxSellOrderBookVolume] = useState(0);\r\n\r\n    const [maxTradeHistoryVolume, setMaxTradeHistoryVolume] = useState(0);\r\n\r\n    const [buyOrdersBook, setBuyOrdersBook] = useState([]);\r\n    const [sellOrdersBook, setSellOrdersBook] = useState([]);\r\n\r\n    const [tradeHistory, setTradeHistory] = useState([]);\r\n\r\n    const [availableUSDT, setAvailableUSDT] = useState(0);\r\n    const [availableCoin, setAvailableCoin] = useState(0);\r\n    const [marketPrice, setMarketPrice] = useState(1);\r\n\r\n    const [price, setPrice] = useState();\r\n    const [stop, setStop] = useState();\r\n    const [limit, setLimit] = useState();\r\n    const [amount, setAmount] = useState();\r\n\r\n\r\n    const [isCurrentOrdersSelected, setIsCurrentOrdersSelected] = useState(true);\r\n    const [currentOrders, setCurrentOrders] = useState([]);\r\n\r\n    const [ordersHistory, setOrdersHistory] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [marketDetail, setMarketDetail] = useState();\r\n    const marketDetailRef = useRef()\r\n\r\n    const getMarketDetail = async () => {\r\n        setLoading(true);\r\n        axios.get(\"core/marketDetail?market=\" + pair.current).then((res) => {\r\n            setMarketDetail(res.data.data);\r\n            marketDetailRef.current = res.data.data;\r\n            setupWebSockets(res.data.data);\r\n\r\n        });\r\n\r\n        if (localStorage.getItem(\"token\")) {\r\n            getBalanceInfo();\r\n             getPendingOrders();\r\n             getOrderFinished();\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const [isLoadingBalances, setIsLoadingBalances] = useState(false);\r\n    const [balances, setBalances] = useState();\r\n\r\n    const getBalanceInfo =  useCallback(async () => {\r\n        setIsLoadingBalances(true);\r\n        const Response = await axios.get('core/balanceInfo', {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n\r\n        console.log(Response);\r\n        if (Response.data.status == \"ok\") {\r\n            setBalances(Response.data.data);\r\n            setAvailableUSDT(Response.data.data.USDT?.available ?? 0);\r\n            if (Response.data.data[marketDetailRef.current.name.toUpperCase().split(\"USDT\")[0]]) {\r\n                setAvailableCoin(Response.data.data[marketDetailRef.current.name.split(\"USDT\")[0]].available);\r\n            } else {\r\n                setAvailableCoin(0);\r\n            }\r\n        } else {\r\n            setError(true);\r\n        }\r\n        setIsLoadingBalances(false);\r\n    } , [])\r\n\r\n    const [isBuyMode, setIsBuyMode] = useState(true);\r\n    const [addingOrder, setAddingOrder] = useState(false);\r\n\r\n    async function addLimitOrderHandler(event) {\r\n        setAddingOrder(true);\r\n        event.preventDefault();\r\n        const tokken = \"bearer \" + localStorage.getItem(\"token\");\r\n        const isBuy = isBuyMode ? \"buy\" : \"sell\";\r\n        const limitOrder = {\r\n            \"market\": marketDetail.name,\r\n            \"type\": isBuy,\r\n            \"amount\": amount,\r\n            \"price\": price\r\n        };\r\n\r\n        const response = await fetch('http://31.192.237.52:8080/core/orderLimit', {\r\n            method: 'POST',\r\n            body: JSON.stringify(limitOrder),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': tokken,\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (data.status != \"ok\") {\r\n            addToast(data.errors[0].msg, {appearance: \"error\", autoDismiss: true});\r\n        } else {\r\n            addToast('Your Order Was successful', {appearance: \"success\", autoDismiss: true});\r\n            setPrice(\"\");\r\n            setAmount(\"\");\r\n            await getPendingOrders();\r\n            await getBalanceInfo();\r\n            await getOrderFinished();\r\n        }\r\n        setAddingOrder(false);\r\n    }\r\n\r\n    async function addMarketOrderHandler(event) {\r\n        setAddingOrder(true);\r\n        event.preventDefault();\r\n        const tokken = \"bearer \" + localStorage.getItem(\"token\");\r\n        const isBuy = isBuyMode ? \"buy\" : \"sell\";\r\n        const marketOrder = {\r\n            \"type\": isBuy,\r\n            \"amount\": amount\r\n        };\r\n\r\n        const response = await fetch(`http://31.192.237.52:8080/core/orderMarket?market=${pair.current}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(marketOrder),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': tokken,\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        if (data.status != \"ok\") {\r\n            addToast(data.errors[0].msg, {appearance: \"error\", autoDismiss: true});\r\n        } else {\r\n            addToast('Your Order Was successful', {appearance: \"success\", autoDismiss: true});\r\n            setAmount(\"\");\r\n            await getBalanceInfo();\r\n            await getOrderFinished();\r\n        }\r\n        setAddingOrder(false);\r\n    }\r\n\r\n    async function addStopLimitOrderHandler(event) {\r\n        setAddingOrder(true);\r\n        event.preventDefault();\r\n        const tokken = \"bearer \" + localStorage.getItem(\"token\");\r\n        const isBuy = isBuyMode ? \"buy\" : \"sell\";\r\n        const marketOrder = {\r\n            \"market\": marketDetail.name,\r\n            \"type\": isBuyMode,\r\n            \"amount\": amount,\r\n            \"price\": limit,\r\n            \"stop_price\": stop\r\n        };\r\n        const response = await fetch(`http://31.192.237.52:8080/core/orderStopLimit`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(marketOrder),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': tokken,\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        if (data.status != \"ok\") {\r\n            addToast(data.errors[0].msg, {appearance: \"error\", autoDismiss: true});\r\n        } else {\r\n            addToast('Your Order Was successful', {appearance: \"success\", autoDismiss: true});\r\n            setLimit(\"\");\r\n            setStop(\"\");\r\n            setAmount(\"\");\r\n            await getPendingOrders();\r\n            await getBalanceInfo();\r\n            await getOrderFinished();\r\n        }\r\n        setAddingOrder(false);\r\n    }\r\n\r\n    const [orderModeIndex, setOrderModeIndex] = useState(0);\r\n\r\n\r\n    // {\"method\": \"state.update\", \"params\": [{\"ETHUSDT\": {\"last\": \"3946.14\", \"open\": \"3913.96\", \"close\": \"3946.14\", \"high\": \"3980.89\", \"low\": \"3898.03\", \"volume\": \"2347.14186289\", \"sell_total\": \"63.75037160\", \"buy_total\": \"96.70139570\", \"period\": 86400, \"deal\": \"9245048.7223123002\"}}], \"id\": null}\r\n\r\n    const [lastTsCurrentPrice, setLastTsCurrentPrice] = useState(0);\r\n    const [floorAmount, setFloorAmount] = useState(100);\r\n    const [lastTsIsBuy, setLastTsIsBuy] = useState(0);\r\n\r\n    const [currentPrice, setCurrentPrice] = useState(0);\r\n    const [currentPriceUSD, setCurrentPriceUSD] = useState(0);\r\n    const [twentyFourOpen, setTwentyFourOpen] = useState(0);\r\n    const [twentyFourHigh, setTwentyFourHigh] = useState(0);\r\n    const [twentyFourLowest, setTwentyFourLowest] = useState(0);\r\n    const [twentyFourVolume, setTwentyFourVolume] = useState(0);\r\n\r\n    const pair = useRef(\"\");\r\n    const pairToShow = useRef(\"\");\r\n    const [sliderValue, setSliderValue] = useState(0);\r\n\r\n    const defaultActivity = {\r\n        group: \"\",\r\n        a: 0,\r\n        b: 0\r\n    };\r\n\r\n    const [activity, setActivity] = useState(defaultActivity);\r\n\r\n    const onDataChanged = (name, value) => {\r\n        setActivity({\r\n            ...activity,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n\r\n        //sellMode\r\n        if (!isBuyMode) {\r\n            setSliderValue(newValue);\r\n            setAmount(availableCoin * newValue / 100);\r\n        }\r\n        //Buymode\r\n        else {\r\n\r\n            if (orderModeIndex === 0) {\r\n                setSliderValue(newValue);\r\n                setAmount((availableUSDT / price) * newValue / 100);\r\n            } else if (orderModeIndex === 1) {\r\n                setMarketPrice(currentPrice);\r\n                setSliderValue(newValue);\r\n                setAmount(availableUSDT * newValue / 100);\r\n            } else if (orderModeIndex === 2) {\r\n                setSliderValue(newValue);\r\n                setPrice(limit);\r\n                setAmount((availableUSDT / price) * newValue / 100);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const search = props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        pair.current = params.get(\"pair\").toUpperCase();\r\n        pairToShow.current = pair.current.split(\"USDT\")[0] + \"/USDT\";\r\n\r\n        getMarketDetail();\r\n\r\n    }, []);\r\n\r\n\r\n    const setupWebSockets = (marketData) => {\r\n        const ws = new WebSocket(\"wss://socket.sigloyex.com\");\r\n\r\n        ws.onmessage = function (event) {\r\n            const data = JSON.parse(event.data);\r\n\r\n            if (data.method == \"state.update\") {\r\n                setCurrentPrice(data.params[0][marketData.name].last);\r\n                setTwentyFourHigh(data.params[0][marketData.name].high);\r\n                setTwentyFourLowest(data.params[0][marketData.name].low);\r\n                setTwentyFourOpen(data.params[0][marketData.name].open);\r\n                setTwentyFourVolume(data.params[0][marketData.name].volume);\r\n            } else if (data.method == \"depth.update\") {\r\n                setLastTsCurrentPrice(data.params[1].last);\r\n\r\n                if (0.01 < parseNumber(data.params[1].last)) {\r\n                    setFloorAmount(1000);\r\n\r\n                } else if (data.params[1].last > 10.0) {\r\n                    setFloorAmount(1000000);\r\n                } else if (0.0001 > data.params[1].last) {\r\n                    setFloorAmount(1);\r\n                }\r\n\r\n                const buyLs = [];\r\n                const sellLs = [];\r\n                if (data.params[1].asks != undefined) {\r\n                    data.params[1].asks.forEach((elem, index) => {\r\n                        sellLs.push(elem);\r\n                    });\r\n                }\r\n                if (data.params[1].bids != undefined) {\r\n                    data.params[1].bids.forEach((elem, index) => {\r\n                        buyLs.push(elem);\r\n                    });\r\n                }\r\n\r\n                // data.params[1].forEach((elem, index) => {\r\n                //     if (elem.asks ) {\r\n                //         buyLs.push(elem);\r\n                //     }\r\n                //     if (elem.bids) {\r\n                //         sellLs.push(elem);\r\n                //     }\r\n                // });\r\n\r\n                setSellOrdersBook((prv) => {\r\n                    const ls = prv;\r\n                    ls.splice(\r\n                        sellOrdersBook.length - 1,\r\n                        sellLs.length - (6 - sellOrdersBook.length)\r\n                    );\r\n\r\n                    sellLs.forEach((elem) => {\r\n                        if (elem[1] > 0) {\r\n                            ls.push(elem);\r\n                        }\r\n                    });\r\n                    ls.sort(function (a, b) {\r\n                        return a.amount - b.amount;\r\n                    });\r\n                    return [...ls];\r\n                });\r\n                setBuyOrdersBook((prv) => {\r\n                    const ls = prv;\r\n\r\n                    ls.splice(\r\n                        buyOrdersBook.length - 1,\r\n                        buyLs.length - (6 - buyOrdersBook.length)\r\n                    );\r\n                    buyLs.forEach((elem) => {\r\n                        if (elem[1] > 0) {\r\n                            ls.push(elem);\r\n                        }\r\n                    });\r\n                    ls.sort(function (a, b) {\r\n                        return b.amount - a.amount;\r\n                    });\r\n                    return [...ls];\r\n                });\r\n            } else if (data.method == \"deals.update\") {\r\n                // \"type\": \"sell\",             #order type\r\n                // \"time\": 1496458040.059284,  #order time\r\n                // \"price\": \"17868.41\",        #order price\r\n                // \"id\": 29433,                #order no\r\n                // \"amount\": \"0.0281\",         #order count\r\n                // \"client_id\": \"abc\"          #client id\r\n\r\n                setTradeHistory((prv) => {\r\n                    const ls = prv;\r\n                    if (ls.length > 200) {\r\n                        ls.splice(ls.length - 1, ls.length - 200 + data.params[1].length);\r\n                    }\r\n                    const s = data.params[1];\r\n                    s.forEach((elem) => {\r\n                        ls.push(elem);\r\n\r\n                        setLastTsIsBuy(elem.type == \"buy\");\r\n                    });\r\n                    return [...ls];\r\n                });\r\n            }\r\n        };\r\n\r\n        ws.onopen = function (event) {\r\n            // //console.log(event);\r\n            // const msg = JSON.stringify({\r\n            //   method: \"server.ping\",\r\n            //   params: [],\r\n            //   id: 11,\r\n            // });\r\n            // ws.send(msg);\r\n\r\n            // ws.send(\r\n            //     JSON.stringify({\r\n            //         method: \"deals.query\",\r\n            //         params: [marketData.name, 15, 0],\r\n            //         id: 16,\r\n            //     })\r\n            // );\r\n\r\n            ws.send(\r\n                JSON.stringify({\r\n                    method: \"state.subscribe\",\r\n                    params: [marketData.name],\r\n                    id: 14,\r\n                })\r\n            );\r\n\r\n            ws.send(\r\n                JSON.stringify({\r\n                    method: \"deals.subscribe\",\r\n                    params: [marketData.name],\r\n                    id: 5\r\n                })\r\n            );\r\n\r\n            ws.send(\r\n                JSON.stringify({\r\n                    \"method\": \"depth.subscribe\",\r\n                    \"params\": [\r\n                        marketData.name,\r\n                        5,\r\n                        \"0\"\r\n                    ],\r\n                    id: 15\r\n                })\r\n            );\r\n\r\n\r\n        };\r\n    };\r\n\r\n    const [isLoadingPendingOrders, setLoadingPendingOrders] = useState(false);\r\n    const pendingOrdersPage = useRef(1);\r\n\r\n    const getPendingOrders = useCallback(async () => {\r\n        setLoadingPendingOrders(true);\r\n        const name = pair.current;\r\n        const res = await axios.get(`core/orderPending?market=${name}&page=1&limit=100`, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        console.log(res);\r\n        if (res.data.status == \"ok\") {\r\n            setCurrentOrders(res.data.data.data);\r\n            setLoadingPendingOrders(false);\r\n        } else {\r\n            setError(true)\r\n        }\r\n        setLoadingPendingOrders(false);\r\n    }, [])\r\n\r\n    const getOrderFinished = useCallback(async () => {\r\n        setLoadingPendingOrders(true);\r\n        const name = pair.current;\r\n        const res = await axios.get(`core/orderFinished?market=${name}`, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n\r\n        setOrdersHistory(res.data.data.data);\r\n        setLoadingPendingOrders(false);\r\n    }, [])\r\n\r\n    const cancelPendingOrders = useCallback(async (id) => {\r\n        setLoadingPendingOrders(true);\r\n        const name = pair.current;\r\n        const res = await axios.delete(`core/orderPendingCancel?market=${name}&id=${id}`, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        addToast('Your Order Was Canceled', {appearance: \"info\", autoDismiss: true});\r\n        getBalanceInfo();\r\n        getPendingOrders();\r\n        setLoadingPendingOrders(false);\r\n    }, [])\r\n\r\n\r\n    const context = useContext(Context);\r\n    const theme = useContext(Theme);\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    let totalAmountsAsks = 0;\r\n    let totalAmountsBids = 0;\r\n\r\n\r\n    return (\r\n        error == true ? <NotAllowed history={history}/>\r\n            :\r\n            <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n\r\n                {isLoading || !marketDetail ? (\r\n                    <LoadingDialog/>\r\n                ) : (\r\n                    <div>\r\n\r\n                        <Popover\r\n                            id=\"coinsPopover\"\r\n                            open={isOpenCoinSelectorPopover}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: \"top\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                        >\r\n                            <Scrollbars\r\n                                autoHide\r\n                                autoHideTimeout={1000}\r\n                                style={{minHeight: 400, width: 200}}\r\n                            >\r\n                                <List component=\"nav\" aria-label=\"coins-list-popover\">\r\n                                    {marketList.map((item, index) => {\r\n                                        return (\r\n                                            <ListItem\r\n                                                key={index}\r\n                                                button\r\n                                                onClick={() => {\r\n                                                    history.replace(\"/trade?pair=\" + item);\r\n                                                    history.go();\r\n                                                }}\r\n                                                className=\"pb-0 pt-2\"\r\n                                            >\r\n                                                <div className=\"d-flex justify-content-around\">\r\n                                                    <p className=\"coin-list-name me-2\">{item}</p>\r\n                                                </div>\r\n                                            </ListItem>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </Scrollbars>\r\n                        </Popover>\r\n                        <NavBar isOpen={isOpen}/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"container-fluid \">\r\n                            <Grid\r\n                                className={`${width >= 960 ? \"vh-95\" : \"min-h-400\"}`}\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"space-between\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid\r\n                                    item\r\n                                    className={`card exchange-history rounded  ${\r\n                                        width >= 960 ? \"vh-95\" : \"min-h-400\"\r\n                                    }`}\r\n                                    xs={12}\r\n                                    lg={2}\r\n                                >\r\n                                    <div className={`card-header ${context.locale == \"fa\" ? \"ps-0\" : 'pe-0'}`}>\r\n                                        <ul className=\"nav nav-tabs card-header-tabs \"\r\n                                            dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <li className=\"nav-item  me-0\">\r\n                                                <a\r\n                                                    className={`nav-link pe-2 ps-2 ${\r\n                                                        isOrderBookSelected\r\n                                                            ? `active`\r\n                                                            : \"trade-history-btn from-top mt-1\"\r\n                                                    }`}\r\n                                                    aria-current=\"true\"\r\n                                                    onClick={() => setIsOrderBookIsSelected(true)}\r\n                                                >\r\n                                                    <div className>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Trade.OrderBook\"\r\n                                                            defaultMessage=\"OrderBook\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li className=\"nav-item me-0\">\r\n                                                <a\r\n                                                    className={`nav-link pe-2 ps-2 ${\r\n                                                        !isOrderBookSelected\r\n                                                            ? `active `\r\n                                                            : \"trade-history-btn from-top mt-1\"\r\n                                                    }`}\r\n                                                    onClick={() => setIsOrderBookIsSelected(false)}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.TradeHistory\"\r\n                                                        defaultMessage=\"TradeHistory\"\r\n                                                    />\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"card-body mb-2\">\r\n                                        <h6 className=\"card-title\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            {isOrderBookSelected ? <FormattedMessage\r\n                                                    id=\"Trade.OrderBook\"\r\n                                                    defaultMessage=\"TradeHistory\"\r\n                                                /> :\r\n                                                <FormattedMessage\r\n                                                    id=\"Trade.TradeHistory\"\r\n                                                    defaultMessage=\"TradeHistory\"\r\n                                                />}\r\n                                        </h6>\r\n                                        <ul className=\"list-group list-group-flush mb-2 sellingMode\">\r\n                                            <li className=\"mt-2  nav-li d-flex text-capitalize\">\r\n                                                <div\r\n                                                    className=\"d-flex flex-column justify-content-center\"\r\n                                                    style={{flex: 1}}\r\n                                                >\r\n                        <span className=\"\">\r\n                          {isOrderBookSelected ? <FormattedMessage\r\n                              id=\"Trade.OrderBook.Price\"\r\n                              defaultMessage=\"Price\"\r\n                          /> : <FormattedMessage\r\n                              id=\"Trade.OrderBook.Time\"\r\n                              defaultMessage=\"Time\"\r\n                          />}\r\n                        </span>\r\n                                                    {isOrderBookSelected && (\r\n                                                        <span\r\n                                                            className=\"\"\r\n                                                            style={{fontSize: 10}}\r\n                                                        >\r\n                            (USDT)\r\n                          </span>\r\n                                                    )}\r\n                                                </div>\r\n\r\n                                                <div\r\n                                                    className=\"d-flex flex-column justify-content-center\"\r\n                                                    style={{flex: 1}}\r\n                                                >\r\n                        <span className=\"\">\r\n                          {isOrderBookSelected ? <FormattedMessage\r\n                              id=\"Trade.OrderBook.Amount\"\r\n                              defaultMessage=\"Amount\"\r\n                          /> : <FormattedMessage\r\n                              id=\"Trade.OrderBook.Price\"\r\n                              defaultMessage=\"Price\"\r\n                          />}\r\n                        </span>\r\n                                                    {isOrderBookSelected && (\r\n                                                        <span\r\n                                                            className=\"\"\r\n                                                            style={{fontSize: 10}}\r\n                                                        >\r\n                            ({marketDetail.trading_name})\r\n                          </span>\r\n                                                    )}\r\n                                                </div>\r\n\r\n                                                <div\r\n                                                    className=\"d-flex flex-column justify-content-center\"\r\n                                                    style={{flex: 1}}\r\n                                                >\r\n                        <span className=\"\">\r\n                          {isOrderBookSelected ? marketDetail.trading_name : <FormattedMessage\r\n                              id=\"Trade.OrderBook.Volume\"\r\n                              defaultMessage=\"Volume\"\r\n                          />}\r\n                        </span>\r\n                                                    {isOrderBookSelected && (\r\n                                                        <span\r\n                                                            className=\"\"\r\n                                                            style={{fontSize: 10}}\r\n                                                        >\r\n                            (TOTAL)\r\n                          </span>\r\n                                                    )}\r\n                                                </div>\r\n                                            </li>\r\n                                            <Scrollbars\r\n                                                className=\"exchange-market-cryptos mt-1 mt-3\"\r\n                                                autoHide\r\n                                                autoHideTimeout={1000}\r\n                                                style={{height: isOrderBookSelected ? \"147px\" : \"400px\"}}\r\n                                            >\r\n                                                {isOrderBookSelected\r\n                                                    ? sellOrdersBook.map((item, index) => {\r\n                                                        {\r\n                                                            totalAmountsAsks += parseFloat(item[1])\r\n                                                        }\r\n                                                        return (\r\n                                                            <li\r\n                                                                key={index}\r\n                                                                className=\"position-relative list-group-item d-flex justify-content-around \"\r\n                                                            >\r\n                                                                <div\r\n                                                                    className=\"trade-books-li position-absolute d-flex\"\r\n\r\n                                                                />\r\n                                                                <span style={{flex: 1, textAlign: \"left\"}}\r\n                                                                      className=\"sellMode fw-bold\">\r\n                                                    {parseFloat(item[0])}\r\n                                </span>\r\n                                                                <span\r\n\r\n                                                                    style={{flex: 1, textAlign: \"left\"}}\r\n                                                                >\r\n                                          {Math.floor(parseFloat(item[1]) * floorAmount) / floorAmount}\r\n                                </span>\r\n                                                                <span\r\n\r\n                                                                    style={{flex: 1, textAlign: \"left\"}}\r\n                                                                >\r\n                                  {parseNumber(Math.floor(totalAmountsAsks * floorAmount) / floorAmount ?? 0)}\r\n                                </span>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })\r\n                                                    : tradeHistory.slice(0).reverse().map((item, index) => {\r\n                                                        return (\r\n                                                            <li\r\n                                                                key={index}\r\n                                                                className={`list-group-item d-flex ${item.type == \"buy\" ? \"tradeHistoryListBuyMode\" : \"tradeHistoryListSellMode\"} justify-content-around `}>\r\n                                                                <section>\r\n                                                                    {parseFulDate(item.time).split(\" \")[1]}\r\n                                                                </section>\r\n                                                                <section className=\"fw-bold\">\r\n                                                                    {parseNumber(item.price)}\r\n                                                                </section>\r\n                                                                <section\r\n                                                                >\r\n                                                                    {Math.floor(parseFloat(item.amount) * floorAmount) / floorAmount}\r\n                                                                </section>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })}\r\n                                            </Scrollbars>\r\n                                        </ul>\r\n                                        <hr/>\r\n                                        {isOrderBookSelected && (\r\n                                            <div className=\" last-exchange-container text-center mt-2 mb-2\">\r\n                      <span\r\n                          className=\"last-exchange-amount\"\r\n                          style={{\r\n                              color: lastTsIsBuy\r\n                                  ? \"var(--green-color)\"\r\n                                  : \"var(--red-color)\"\r\n                          }}\r\n                      >\r\n                        $ {parseNumber(lastTsCurrentPrice)}\r\n                      </span>\r\n                                            </div>\r\n                                        )}\r\n                                        <hr/>\r\n                                        {isOrderBookSelected && (\r\n                                            <Scrollbars\r\n                                                className=\"exchange-market-cryptos mt-1 mt-3\"\r\n                                                autoHide\r\n                                                autoHideTimeout={1000}\r\n                                                style={{height: isOrderBookSelected ? \"150px\" : \"400px\"}}\r\n                                            >\r\n                                                <ul className=\"list-group list-group-flush mt-2 buyingMode\">\r\n                                                    {buyOrdersBook.slice(0).reverse().map((item, index) => {\r\n                                                        {\r\n                                                            totalAmountsBids += parseFloat(item[1])\r\n                                                        }\r\n                                                        return (\r\n                                                            <li\r\n                                                                key={index}\r\n                                                                className=\"position-relative list-group-item d-flex justify-content-around \"\r\n                                                            >\r\n                                                                <div\r\n                                                                    className=\"trade-books-li position-absolute d-flex\"\r\n\r\n                                                                />\r\n                                                                <span style={{flex: 1, textAlign: \"left\"}}\r\n                                                                      className=\"buyMode fw-bold\">\r\n                                                {parseFloat(item[0])}\r\n                                </span>\r\n                                                                <span\r\n\r\n                                                                    style={{flex: 1, textAlign: \"left\"}}\r\n                                                                >\r\n                                                {Math.floor(parseFloat(item[1]) * floorAmount) / floorAmount}\r\n                                </span>\r\n                                                                <span\r\n\r\n                                                                    style={{flex: 1, textAlign: \"left\"}}\r\n                                                                >\r\n                                 {Math.floor(totalAmountsBids * floorAmount) / floorAmount ?? 0}\r\n                                </span>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })}\r\n                                                </ul>\r\n                                            </Scrollbars>\r\n                                        )}\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    lg={8}\r\n                                    className={`card  bg-light ${width >= 960 ? \"vh-95\" : \"h-400\"}`}\r\n                                    style={{position: \"relative\"}}\r\n                                >\r\n                                    <div className=\"card p-exchange-nav\">\r\n                                        <ul className=\"nav exchange-nav rounded\">\r\n                                            <li\r\n                                                className=\"nav-item crypto-name d-flex\"\r\n                                                aria-describedby=\"coinsPopover\"\r\n                                            >\r\n                      <span className=\"stared btn \">\r\n                        <RiStarLine className=\"far fa-bookmark\" size={20}/>\r\n                      </span>\r\n\r\n\r\n                                                {/*<MarketSearchBar size={width / 3} Name={marketDetail.name}/>*/}\r\n                                                <MarketBar Name={marketDetail.name} place={\"trade\"}/>\r\n\r\n                                                {/*<a*/}\r\n                                                {/*    className=\"nav-link slide-dropdown \"*/}\r\n                                                {/*    aria-current=\"page\"*/}\r\n                                                {/*    onClick={(e) => {*/}\r\n                                                {/*        setAnchorEl(e.currentTarget);*/}\r\n                                                {/*        setIsOpenCoinSelectorPopover(true);*/}\r\n                                                {/*    }}*/}\r\n                                                {/*>*/}\r\n                                                {/*    {pairToShow.current}*/}\r\n                                                {/*    <IoMdArrowDropdown className=\"fas fa-angle-down\"/>*/}\r\n                                                {/*</a>*/}\r\n\r\n                                                <span className=\"info btn rounded-circle\">\r\n                        <BsInfo className=\"fas fa-info \" size={30}/>\r\n                      </span>\r\n                                            </li>\r\n                                            <li className=\"nav-item crypto-price\">\r\n                                                <p className>$ {parseNumber(currentPrice)}</p>\r\n                                            </li>\r\n                                            <li className=\"nav-item crypto-24H\">\r\n                                                <p className=\"small\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.24hChange\"\r\n                                                        defaultMessage=\"24hChange\"\r\n                                                    />\r\n                                                </p>\r\n                                                <p className={`Percent ${currentPrice > twentyFourOpen ? \"gain\" : \"lose\"} `}>\r\n                                                    {(((currentPrice - twentyFourOpen) / twentyFourOpen) * 100).toFixed(2)}%\r\n                                                </p>\r\n                                            </li>\r\n                                            <li className=\"nav-item highest-24H\">\r\n                                                <p className=\"small\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.24hHighest\"\r\n                                                        defaultMessage=\"24hHighest\"\r\n                                                    />\r\n                                                </p>\r\n                                                <p className>{parseNumber(twentyFourHigh)}</p>\r\n                                            </li>\r\n                                            <li className=\"nav-item lowest-24H\">\r\n                                                <p className=\"small\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.24hLowest\"\r\n                                                        defaultMessage=\"24hLowest\"\r\n                                                    />\r\n                                                </p>\r\n                                                <p className>{parseNumber(twentyFourLowest)}</p>\r\n                                            </li>\r\n                                            <li className=\"nav-item  volume-24H\">\r\n                                                <p className=\"small\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.24hVolume\"\r\n                                                        defaultMessage=\"24hVolume\"\r\n                                                    />\r\n                                                </p>\r\n                                                <p className>{parseNumber(twentyFourVolume)}</p>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <TradingViewWidget\r\n                                        className={`${width >= 960 ? \"vh-95\" : \"h-400\"} `}\r\n                                        autosize\r\n                                        isTransparent={true}\r\n                                        theme={theme.themName}\r\n                                        ref={chartRef}\r\n                                        symbol={pair.current}\r\n                                        hide_side_toolbar={width >= 960 ? false : true}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    lg={2}\r\n                                    className={`exchange-form ${\r\n                                        width >= 960 ? \"vh-95\" : \"min-h-400\"\r\n                                    } card ${!isLoggedIn && \"blur-3px\"}`}\r\n                                >\r\n                                    <span className=\"close\">×</span>\r\n                                    <div className=\"card-header\">\r\n                                        <ul className=\"nav nav-tabs card-header-tabs \"\r\n                                            dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <li className=\"nav-item me-0\">\r\n                                                <a\r\n                                                    className=\"nav-link active\"\r\n                                                    aria-current=\"true\"\r\n                                                    href=\"#\"\r\n                                                >\r\n                                                    <div className>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Trade.SpotTrading\"\r\n                                                            defaultMessage=\"SpotTrading\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            {/* <li className=\"nav-item mt-1\">\r\n                  <a className=\"nav-link trade-history-btn from-top \" href=\"#\">\r\n                    Margin\r\n                  </a>\r\n                </li> */}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"card-body mb-2\">\r\n                                        <div className={`card-container ${\r\n                                            !isLoggedIn && \"disabledButton\"\r\n                                        }`}\r\n                                        >\r\n                                            <div className=\"d-flex buy-sell-gp\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                {/*<button*/}\r\n                                                {/*    type=\"button\"*/}\r\n                                                {/*    onClick={() => setIsBuyMode(true)}*/}\r\n                                                {/*    className={`buy-button ${*/}\r\n                                                {/*        isBuyMode && \"green-selected\"*/}\r\n                                                {/*    }`}*/}\r\n                                                {/*<FormattedMessage*/}\r\n                                                {/*    id=\"Trade.SpotTrading.Buy\"*/}\r\n                                                {/*    defaultMessage=\"Buy\"*/}\r\n                                                {/*/>*/}\r\n                                                {/*</button>*/}\r\n                                                {/*<button*/}\r\n                                                {/*    type=\"button\"*/}\r\n                                                {/*    onClick={() => setIsBuyMode(false)}*/}\r\n                                                {/*    className={`sell-button ${*/}\r\n                                                {/*        !isBuyMode && \"red-selected\"*/}\r\n                                                {/*    }`}*/}\r\n                                                {/*>*/}\r\n                                                {/*    <FormattedMessage*/}\r\n                                                {/*        id=\"Trade.SpotTrading.Sell\"*/}\r\n                                                {/*        defaultMessage=\"Sell\"*/}\r\n                                                {/*    />*/}\r\n                                                {/*</button>*/}\r\n\r\n                                                <div\r\n                                                    className={`${context.locale == \"fa\" ? \"switch-button-sec\" : \"switch-button\"}`}>\r\n                                                    <input className=\"switch-button-checkbox\" type=\"checkbox\"\r\n                                                           onChange={() => setIsBuyMode(!isBuyMode)}></input>\r\n                                                    <label className=\"switch-button-label\" htmlFor=\"\"><span\r\n                                                        className=\"switch-button-label-span\">\r\n                                                              <FormattedMessage\r\n                                                                  id=\"Trade.SpotTrading.Buy\"\r\n                                                                  defaultMessage=\"Buy\"\r\n                                                              />\r\n                                                </span></label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"d-flex pt-2\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        setOrderModeIndex(0);\r\n                                                        setPrice(0);\r\n                                                        setAmount(0);\r\n                                                        setSliderValue(0)\r\n                                                    }}\r\n                                                    className={`${\r\n                                                        orderModeIndex == 0\r\n                                                            ? \"text-button-selected\"\r\n                                                            : \"text-button\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.Limit\"\r\n                                                        defaultMessage=\"Limit\"\r\n                                                    />\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        setOrderModeIndex(1);\r\n                                                        setPrice(marketPrice);\r\n                                                        setAmount(0);\r\n                                                        setSliderValue(0)\r\n                                                    }}\r\n                                                    className={`${\r\n                                                        orderModeIndex == 1\r\n                                                            ? \"text-button-selected\"\r\n                                                            : \"text-button\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.Market\"\r\n                                                        defaultMessage=\"Market\"\r\n                                                    />\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        setOrderModeIndex(2);\r\n                                                        setPrice(0);\r\n                                                        setAmount(0);\r\n                                                        setSliderValue(0)\r\n                                                    }}\r\n                                                    className={`${\r\n                                                        orderModeIndex == 2\r\n                                                            ? \"text-button-selected\"\r\n                                                            : \"text-button\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.Stop-limit\"\r\n                                                        defaultMessage=\"Stop-limit\"\r\n                                                    />\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"pt-3 d-flex justify-content-between pe-1 ps-1\"\r\n                                                 dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <p style={{fontSize: 12, color: \"#737373\"}}>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.AVBL\"\r\n                                                        defaultMessage=\"avbl\"\r\n                                                    />\r\n                                                </p>\r\n                                                {isLoadingBalances ? (\r\n                                                    <CircularProgress size={16}/>\r\n                                                ) : (\r\n                                                    <p style={{fontSize: 15, color: \"#737373\"}}>\r\n                                                        {isBuyMode\r\n                                                            ? availableUSDT + \" USDT\"\r\n                                                            : availableCoin + \" \" + marketDetail.trading_name}\r\n                                                    </p>\r\n                                                )}\r\n                                            </div>\r\n                                            <form\r\n                                                onSubmit={orderModeIndex == 0 ? addLimitOrderHandler : orderModeIndex == 1 ? addMarketOrderHandler : orderModeIndex == 2 && addStopLimitOrderHandler}\r\n                                                style={{height: \"92%\", position: \"relative\"}}>\r\n\r\n                                                {orderModeIndex != 2 && (\r\n                                                    <div\r\n                                                        className={`form-floating exchange-form-input rounded-pill pe-4 ps-4 ${orderModeIndex == 1 && 'disabledButton disabledColor'}`}\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <input\r\n                                                            className=\"w-100 form-control \"\r\n                                                            id=\"price-field\"\r\n                                                            dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                            placeholder=\"\"\r\n                                                            type={\"text\"}\r\n                                                            pattern=\"[0-9]+([\\.,][0-9]+)?\" step=\"0.0000001\"\r\n                                                            value={orderModeIndex != 1 ? price : \"Act at the market price\"}\r\n                                                            disabled={orderModeIndex == 1}\r\n                                                            onChange={(e) => {\r\n                                                                if (orderModeIndex != 1) {\r\n                                                                    setPrice(e.target.value);\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                        <label htmlFor=\"floatingPassword\">\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.SpotTrading.price\"\r\n                                                                defaultMessage=\"price\"\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )}\r\n                                                {orderModeIndex == 2 && (\r\n                                                    <div\r\n                                                        className=\"form-floating exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <input\r\n                                                            className=\"w-100  form-control\"\r\n                                                            id=\"stop-field\"\r\n                                                            dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                            placeholder=\"\"\r\n                                                            type=\"text\"\r\n                                                            pattern=\"[0-9]+([\\.,][0-9]+)?\" step=\"0.0000001\"\r\n                                                            value={stop}\r\n                                                            onChange={(e) => {\r\n                                                                setStop(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        <label htmlFor=\"floatingPassword\">\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.SpotTrading.Stop\"\r\n                                                                defaultMessage=\"Stop\"\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )}\r\n                                                {orderModeIndex == 2 && (\r\n                                                    <div\r\n                                                        className=\"form-floating mt-3 exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <input\r\n                                                            className=\"w-100 form-control\"\r\n                                                            id=\"limit-field\"\r\n                                                            dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                            placeholder=\"\"\r\n                                                            type=\"text\"\r\n                                                            pattern=\"[0-9]+([\\.,][0-9]+)?\" step=\"0.0000001\"\r\n                                                            value={limit}\r\n                                                            onChange={(e) => {\r\n                                                                setLimit(e.target.value);\r\n                                                                setPrice(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        <label htmlFor=\"floatingPassword\">\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.SpotTrading.price\"\r\n                                                                defaultMessage=\"Price\"\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div\r\n                                                    className=\"form-floating mt-3 exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                    dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    <input\r\n                                                        className=\" w-100  form-control\"\r\n                                                        id=\"amount-field\"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                        label={context.locale == \"fa\" ? \"حساب\" : \"Account\"}\r\n                                                        type=\"text\"\r\n                                                        pattern=\"[0-9]+([\\.,][0-9]+)?\" step=\"0.0000001\"\r\n                                                        value={amount}\r\n                                                        onChange={(e) => setAmount(e.target.value)}\r\n                                                    />\r\n                                                    <label htmlFor=\"floatingPassword\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Trade.SpotTrading.amount\"\r\n                                                            defaultMessage=\"amount\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                                <PrettoSlider\r\n                                                    className={`pt-4 ${!price > 0 && 'disabledButton'}`}\r\n                                                    style={{\r\n                                                        width: \"90%\",\r\n                                                        paddingLeft: 8,\r\n                                                        marginLeft: 6,\r\n                                                    }}\r\n                                                    ValueLabelComponent={SliderValueLabelComponent}\r\n                                                    marks={marks}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    value={sliderValue}\r\n                                                    aria-label=\"slider\"\r\n                                                    defaultValue={0}\r\n                                                    onChange={handleSliderChange}\r\n                                                />\r\n                                                <div className=\"row\">\r\n                                                    <button\r\n                                                        className={`button ${isBuyMode ? 'buttonBuyMode' : 'buttonSellMode'} `}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Trade.SpotTrading.PlaceOrder\"\r\n                                                            defaultMessage=\"PlaceOrder\"\r\n                                                        />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoggedIn ? (\r\n                                        <div className=\"btn-group Register-Login\"\r\n                                             role=\"group\"\r\n                                        >\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => history.push(\"login\")}\r\n                                                className=\"btn rounded-pill Register-Login-btn \"\r\n                                            >\r\n                                                <FormattedMessage\r\n                                                    id=\"Trade.SpotTrading.RegisterOrLogin\"\r\n                                                    defaultMessage=\"RegisterOrLogin\"\r\n                                                />\r\n                                            </button>\r\n\r\n                                        </div>\r\n                                    ) : addingOrder && (\r\n                                        <div className=\"btn-group exchange-form-loading\">\r\n                                            <CircularProgress/>\r\n\r\n                                        </div>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    lg={12}\r\n                                >\r\n                                    <div\r\n                                        className={`row Orders shadow ${width < 1000 && \"mb-5\"} ${!isLoggedIn && \"disabledButton blur-3px\"}`}\r\n                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <div className=\"card col-xs-12\">\r\n                                            <div className=\"card-header\">\r\n                                                <ul className=\"nav nav-tabs card-header-tabs\"\r\n                                                    dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    <li className=\"nav-item me-0\">\r\n                                                        <a\r\n                                                            onClick={() => setIsCurrentOrdersSelected(true)}\r\n                                                            className={`nav-link  from-top ${\r\n                                                                isCurrentOrdersSelected ? \"active\" : \"Orders-btn \"\r\n                                                            }`}\r\n                                                            aria-current={`${\r\n                                                                isCurrentOrdersSelected ? \"true\" : \"false\"\r\n                                                            }`}\r\n                                                        >\r\n                                                            <div className>\r\n                                                                <FormattedMessage\r\n                                                                    id=\"Trade.CurrentOrders\"\r\n                                                                    defaultMessage=\"CurrentOrders\"\r\n                                                                />\r\n                                                            </div>\r\n                                                        </a>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item me-0\">\r\n                                                        <a\r\n                                                            onClick={() => setIsCurrentOrdersSelected(false)}\r\n                                                            aria-current={`${\r\n                                                                !isCurrentOrdersSelected ? \"true\" : \"false\"\r\n                                                            }`}\r\n                                                            className={`nav-link ${\r\n                                                                !isCurrentOrdersSelected\r\n                                                                    ? \"active\"\r\n                                                                    : \"Orders-btn \"\r\n                                                            }  from-top`}\r\n                                                        >\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.OrdersHistory\"\r\n                                                                defaultMessage=\"OrdersHistory\"\r\n                                                            />\r\n                                                        </a>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            <div className=\"card-body mb-3\">\r\n                                                <div className=\"table-container col-xs-12 col-md-12 col-sm-12\">\r\n                                                    <div style={{overflowX: \"auto\"}}>\r\n                                                        <TableContainer>\r\n                                                            <Table style={{overflowX: \"auto\"}} aria-label=\"table\">\r\n                                                                <TableHead>\r\n                                                                    <TableRow dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.OrderTime\"\r\n                                                                                    defaultMessage=\"OrderTime\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Type\"\r\n                                                                                    defaultMessage=\"Type\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Side\"\r\n                                                                                    defaultMessage=\"Side\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Limit\"\r\n                                                                                    defaultMessage=\"Limit\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Amount\"\r\n                                                                                    defaultMessage=\"Amount\"\r\n                                                                                />{\" \"}\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Unexecuted\"\r\n                                                                                    defaultMessage=\"Unexecuted\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className=\"table-passage\">\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Avg-price\"\r\n                                                                                    defaultMessage=\"Avg-price\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell>\r\n                                                                            <p className={`table-passage ${!isCurrentOrdersSelected && 'd-none'}`}>\r\n                                                                                <FormattedMessage\r\n                                                                                    id=\"Trade.Table.Operation\"\r\n                                                                                    defaultMessage=\"Operation\"\r\n                                                                                />\r\n                                                                            </p>\r\n                                                                        </TableCell>\r\n                                                                    </TableRow>\r\n                                                                </TableHead>\r\n                                                                <TableBody\r\n                                                                    className={` ${isLoadingPendingOrders && \"disabledButton\"}`}\r\n                                                                    sx={{border: \"none\"}}>\r\n                                                                    {(isCurrentOrdersSelected\r\n                                                                        ? currentOrders\r\n                                                                        : ordersHistory).map((item, index) => (\r\n\r\n                                                                        <TableRow key={item.id}>\r\n                                                                            <TableCell className={\"p-0\"}>\r\n                                                                                <p className=\"table-passage\">\r\n                                                                                    {parseFulDate(new Date((item.create_time)))}\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={\"p-0\"}>\r\n                                                                                <p className=\"table-passage\">\r\n                                                                                    {item.order_type}\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={`p-0 `}>\r\n                                                                                <p className={`table-passage `}\r\n                                                                                   style={item.type == 'buy' ? {\r\n                                                                                       color: '#2ebd5e',\r\n                                                                                       fontWeight: 700\r\n                                                                                   } : {\r\n                                                                                       color: '#c93532',\r\n                                                                                       fontWeight: 700\r\n                                                                                   }}>\r\n                                                                                    {item.type}\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={\"p-0\"}>\r\n                                                                                <p className=\"table-passage\">\r\n                                                                                    {parseNumber(item.price)}\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={\"p-0\"}>\r\n                                                                                <p className=\"table-passage\">\r\n                                                                                <span>{Math.floor(parseFloat(item.amount) * 1000000) / 1000000}\r\n                                                                                    <span\r\n                                                                                        className=\"ps-1 currency\">{item.type == 'sell' ? marketDetail.name.split(\"USDT\")[0] : (marketDetail.name.split(marketDetail.name.split(\"USDT\")[0]))}</span></span>\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={\"p-0\"}>\r\n                                                                                <p className=\"table-passage \">\r\n                                                                                <span\r\n                                                                                    className=\"\">{Math.floor(parseFloat(item.left) * 1000000) / 1000000}\r\n                                                                                    <span\r\n                                                                                        className=\"ps-1 currency\">{item.type == 'sell' ? marketDetail.name.split(\"USDT\")[0] : (marketDetail.name.split(marketDetail.name.split(\"USDT\")[0]))}</span></span>\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={\"p-0\"}>\r\n                                                                                <p className=\"table-passage\">\r\n                                                                                    {`${parseNumber(item.avg_price)}`}<span\r\n                                                                                    className=\"currency\">  USDT</span>\r\n                                                                                </p>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell className={\"p-0\"} style={{\r\n                                                                                maxWidth: 200,\r\n                                                                                textAlign: 'center'\r\n                                                                            }}>\r\n                                                                                {isCurrentOrdersSelected && (\r\n                                                                                    <button className=\"cancel-button \"\r\n                                                                                            onClick={() => cancelPendingOrders(item.id)}>\r\n                                                                                        <FormattedMessage\r\n                                                                                            id=\"Trade.Table.CancelOrder\"\r\n                                                                                            defaultMessage=\"CancelOrder\"\r\n                                                                                        />\r\n                                                                                    </button>\r\n                                                                                )}\r\n                                                                            </TableCell>\r\n                                                                            {isLoadingPendingOrders &&\r\n                                                                                <div\r\n                                                                                    className=\"btn-group OrdersTable-loading\">\r\n                                                                                    <CircularProgress/></div>}\r\n                                                                        </TableRow>\r\n                                                                    ))}\r\n                                                                </TableBody>\r\n                                                            </Table>\r\n                                                        </TableContainer>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </div>\r\n                        <>\r\n                            <div className={`btn-group  Buy-sell-responsive-btn fixed-bottom ${isOpen ? 'd-none' : ''}`}\r\n                                 role=\"group\">\r\n                                <button\r\n                                    onClick={() => {\r\n                                        setOpen(true)\r\n                                        setIsBuyMode(false)\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-secondary me-1 rounded-pill Sell-btn\"\r\n                                >\r\n                                    Sell\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        setOpen(true)\r\n                                        setIsBuyMode(true)\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-secondary ms-1 rounded-pill Buy-btn \"\r\n                                >\r\n                                    Buy\r\n                                </button>\r\n                            </div>\r\n\r\n                            <BottomModal isOpen={isOpen} onDismiss={() => setOpen(false)}>\r\n                                <Scrollbars\r\n                                    autoHide\r\n                                    autoHideTimeout={1000}\r\n                                    style={{minHeight: 250, maxHeight: \"fit-content\"}}\r\n                                >\r\n                                    <div className=\"card-body \">\r\n                                        <div\r\n                                            className={`card-container ${\r\n                                                !isLoggedIn && \"disabledButton blur-3px\"\r\n                                            }`}\r\n                                        >\r\n                                            <div className=\"d-flex buy-sell-gp\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                {/*<button*/}\r\n                                                {/*    type=\"button\"*/}\r\n                                                {/*    onClick={() => setIsBuyMode(true)}*/}\r\n                                                {/*    className={`buy-button ${*/}\r\n                                                {/*        isBuyMode && \"green-selected\"*/}\r\n                                                {/*    }`}*/}\r\n                                                {/*<FormattedMessage*/}\r\n                                                {/*    id=\"Trade.SpotTrading.Buy\"*/}\r\n                                                {/*    defaultMessage=\"Buy\"*/}\r\n                                                {/*/>*/}\r\n                                                {/*</button>*/}\r\n                                                {/*<button*/}\r\n                                                {/*    type=\"button\"*/}\r\n                                                {/*    onClick={() => setIsBuyMode(false)}*/}\r\n                                                {/*    className={`sell-button ${*/}\r\n                                                {/*        !isBuyMode && \"red-selected\"*/}\r\n                                                {/*    }`}*/}\r\n                                                {/*>*/}\r\n                                                {/*    <FormattedMessage*/}\r\n                                                {/*        id=\"Trade.SpotTrading.Sell\"*/}\r\n                                                {/*        defaultMessage=\"Sell\"*/}\r\n                                                {/*    />*/}\r\n                                                {/*</button>*/}\r\n\r\n                                                <div className=\"switch-button\">\r\n                                                    <input className=\"switch-button-checkbox\" type=\"checkbox\"\r\n                                                           onChange={() => setIsBuyMode(!isBuyMode)}\r\n                                                           checked={!isBuyMode}></input>\r\n                                                    <label className=\"switch-button-label\" htmlFor=\"\"><span\r\n                                                        className=\"switch-button-label-span\">\r\n                                                              <FormattedMessage\r\n                                                                  id=\"Trade.SpotTrading.Buy\"\r\n                                                                  defaultMessage=\"Buy\"\r\n                                                              />\r\n                                                </span></label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"d-flex pt-1\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        setOrderModeIndex(0);\r\n                                                    }}\r\n                                                    className={`${\r\n                                                        orderModeIndex == 0\r\n                                                            ? \"text-button-selected\"\r\n                                                            : \"text-button\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.Limit\"\r\n                                                        defaultMessage=\"Limit\"\r\n                                                    />\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        setOrderModeIndex(1);\r\n                                                        setPrice(marketPrice);\r\n                                                    }}\r\n                                                    className={`${\r\n                                                        orderModeIndex == 1\r\n                                                            ? \"text-button-selected\"\r\n                                                            : \"text-button\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.Market\"\r\n                                                        defaultMessage=\"Market\"\r\n                                                    />\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => setOrderModeIndex(2)}\r\n                                                    className={`${\r\n                                                        orderModeIndex == 2\r\n                                                            ? \"text-button-selected\"\r\n                                                            : \"text-button\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.Stop-limit\"\r\n                                                        defaultMessage=\"Stop-limit\"\r\n                                                    />\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"pt-3 d-flex justify-content-between pe-1 ps-1\"\r\n                                                 dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <p style={{fontSize: 12, color: \"#737373\"}}>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.AVBL\"\r\n                                                        defaultMessage=\"avbl\"\r\n                                                    />\r\n                                                </p>\r\n                                                {isLoadingBalances ? (\r\n                                                    <CircularProgress size={16}/>\r\n                                                ) : (\r\n                                                    <p style={{fontSize: 15, color: \"#737373\"}}>\r\n                                                        {isBuyMode\r\n                                                            ? availableUSDT ?? 0 + \" USDT\"\r\n                                                            : availableCoin ?? 0 + \" \" + marketDetail.trading_name}\r\n                                                    </p>\r\n                                                )}\r\n                                            </div>\r\n                                            <form style={{height: \"92%\", position: \"relative\"}}>\r\n\r\n                                                {orderModeIndex != 2 && (\r\n                                                    <div\r\n                                                        className=\"form-floating exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <input\r\n                                                            className=\"w-100 form-control \"\r\n                                                            id=\"price-field\"\r\n                                                            dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                            placeholder=\"\"\r\n                                                            type=\"number\"\r\n                                                            value={price}\r\n                                                            disabled={orderModeIndex == 1}\r\n                                                            onChange={(e) => {\r\n                                                                if (orderModeIndex != 1) {\r\n                                                                    setPrice(e.target.value);\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                        <label htmlFor=\"floatingPassword\">\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.SpotTrading.price\"\r\n                                                                defaultMessage=\"price\"\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )}\r\n                                                {orderModeIndex == 2 && (\r\n                                                    <div\r\n                                                        className=\"form-floating exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <input\r\n                                                            className=\"w-100  form-control\"\r\n                                                            id=\"stop-field\"\r\n                                                            dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                            placeholder=\"\"\r\n                                                            type=\"number\"\r\n                                                            value={stop}\r\n                                                            onChange={(e) => {\r\n                                                                setStop(e.target.value);\r\n                                                                setPrice(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        <label htmlFor=\"floatingPassword\">\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.SpotTrading.Stop-limit\"\r\n                                                                defaultMessage=\"Stop-limit\"\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )}\r\n                                                {orderModeIndex == 2 && (\r\n                                                    <div\r\n                                                        className=\"form-floating mt-3 exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <input\r\n                                                            className=\"w-100   form-control\"\r\n                                                            id=\"limit-field\"\r\n                                                            dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                            placeholder=\"\"\r\n                                                            type=\"number\"\r\n                                                            value={limit}\r\n                                                            onChange={(e) => {\r\n                                                                setLimit(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        <label htmlFor=\"floatingPassword\">\r\n                                                            <FormattedMessage\r\n                                                                id=\"Trade.SpotTrading.limit\"\r\n                                                                defaultMessage=\"limit\"\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div\r\n                                                    className=\"form-floating mt-3 exchange-form-input rounded-pill pe-4 ps-4 \"\r\n                                                    dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                    <input\r\n                                                        className=\" w-100  form-control\"\r\n                                                        id=\"amount-field\"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}\r\n                                                        label={context.locale == \"fa\" ? \"حساب\" : \"Account\"}\r\n                                                        type=\"number\"\r\n                                                        value={amount}\r\n                                                        onChange={(e) => setAmount(e.target.value)}\r\n                                                    />\r\n\r\n                                                    <label htmlFor=\"floatingPassword\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Trade.SpotTrading.amount\"\r\n                                                            defaultMessage=\"amount\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n\r\n                                                <div className='percent-select mt-3'>\r\n                                                    <FormControl component=\"fieldset\">\r\n                                                        <FormLabel component=\"legend\">Percent</FormLabel>\r\n                                                        <RadioGroup row aria-label=\"gender\"\r\n                                                                    name=\"row-radio-buttons-group\">\r\n                                                            <FormControlLabel value={'25'}\r\n                                                                              control={<Radio\r\n                                                                                  style={{color: '#6699ff'}}/>}\r\n                                                                              label=\"25%\"/>\r\n                                                            <FormControlLabel value={'50'}\r\n                                                                              control={<Radio\r\n                                                                                  style={{color: '#6699ff'}}/>}\r\n                                                                              label=\"50%\"/>\r\n                                                            <FormControlLabel value={'75'}\r\n                                                                              control={<Radio\r\n                                                                                  style={{color: '#6699ff'}}/>}\r\n                                                                              label=\"75%\"/>\r\n                                                            <FormControlLabel\r\n                                                                value={'100'}\r\n                                                                control={<Radio style={{color: '#6699ff'}}/>}\r\n                                                                label=\"100%\"\r\n                                                            />\r\n                                                        </RadioGroup>\r\n                                                    </FormControl>\r\n                                                </div>\r\n\r\n                                                <button\r\n                                                    className={`button ${isBuyMode ? 'buttonBuyMode' : 'buttonSellMode'} `}>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Trade.SpotTrading.PlaceOrder\"\r\n                                                        defaultMessage=\"PlaceOrder\"\r\n                                                    />\r\n                                                </button>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </Scrollbars>\r\n\r\n                                {!isLoggedIn && (\r\n                                    <div\r\n                                        className=\"btn-group Register-Login\"\r\n                                        role=\"group\"\r\n                                    >\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => history.push(\"login\")}\r\n                                            className=\"btn rounded-pill Register-Login-btn \"\r\n                                        >\r\n                                            <FormattedMessage\r\n                                                id=\"Trade.SpotTrading.RegisterOrLogin\"\r\n                                                defaultMessage=\"RegisterOrLogin\"\r\n                                            />\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n\r\n                            </BottomModal>\r\n                        </>\r\n                    </div>\r\n                )}\r\n            </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState, useRef, useContext, useCallback} from \"react\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport '../css/bootstrap.css';\r\nimport '../css/coinInfo.css';\r\nimport Footer from \"../widgets/Footer\";\r\nimport {BsStar} from '@react-icons/all-files/bs/BsStar';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function CoinInfoScreen(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [infos, setInfos] = useState();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const coinInfo = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            const coinInfo = await fetch('http://192.168.1.113:8181/getcoin/BTC' );\r\n           console.log(coinInfo);\r\n            if (coinInfo.status !== 200) {\r\n                throw new Error(coinInfo);\r\n            }\r\n\r\n            // const marketL = (listResponse.data);\r\n            //\r\n            // const loadedList = [];\r\n            //\r\n            //\r\n            // for (var keys in marketL) {\r\n            //     loadedList.push({\r\n            //         name: marketL[keys].markets,\r\n            //         rank: marketL[keys].rank\r\n            //     });\r\n            // }\r\n            //\r\n            // loadedList.sort(function (a, b) {\r\n            //     return a.rank - b.rank\r\n            // });\r\n            //\r\n            //\r\n            // const response = await axios.get('core/marketTickerAll');\r\n            //\r\n            // if (response.status !== 200) {\r\n            //     throw new Error('Something went wrong!');\r\n            // }\r\n            //\r\n            // const data = await (response.data.data.ticker);\r\n            //\r\n            // const loadedData = [];\r\n            //\r\n            // for (var i = 0; i <= loadedList.length; i++) {\r\n            //     for (var key in data) {\r\n            //         if (loadedList[i] != undefined && loadedList[i].name != undefined && key == loadedList[i].name[0]) {\r\n            //             loadedData.push({\r\n            //                 id: i + 1,\r\n            //                 name: key,\r\n            //                 lastPrice: data[key].last,\r\n            //                 dayOpen: data[key].open,\r\n            //                 marketCap: data[key].buy_amount\r\n            //             });\r\n            //         }\r\n            //     }\r\n            // }\r\n            //\r\n            //\r\n            // setTickers(loadedData);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        coinInfo()\r\n    }, [coinInfo]);\r\n\r\n    const context = useContext(Context);\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-sm-12 col-xs-12 col-md-12  col-lg-10 col-xl-10  \">\r\n                        <div className=\"card shadow-lg\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"title-container \">\r\n                                    <div className=\"row justify-content-between\">\r\n                                        <div className=\"crypto-title d-flex col-xl-8 col-lg-7 col-sm-12 ms-xl-5\">\r\n                <span className=\"pt-1 pb-3\">\r\n                  <img src=\"img/BTC_Ico.png\" className=\"crypto-info-img img-fluid\"/>\r\n                </span>\r\n                                            <h1>Ethereum ETH</h1>\r\n                                            <span role=\"button\" className=\"stared \">\r\n                  <BsStar className=\"far fa-star\"/>\r\n                </span>\r\n                                        </div>\r\n                                        <div className=\"card border-0 col-xl-4 col-lg-3 mt-4 col-sm-12  price-amount\">\r\n                                            <div className=\"card-body\">\r\n                                                <h2 className=\"crypto-price\">\r\n                                                    $2,475.43 <span className=\"crypto-percent\">(-0.53%)</span>\r\n                                                </h2>\r\n                                                <span className=\"per-btc\">0.06582098 BTC</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\" crypto-tags gap-2 ms-sm-5 ms-xs-3 d-lg-flex first-badge-group\">\r\n                                    <span className=\"badge \">\r\n                                             <FormattedMessage\r\n                                                 id=\"CoinInfo.Rank\"\r\n                                                 defaultMessage=\"Rank\"\r\n                                             />\r\n                                        1</span>\r\n                                    <span className=\"badge \">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.POW\"\r\n                                                defaultMessage=\"POW\"\r\n                                            />\r\n                                    </span>\r\n                                    <span className=\"badge \">\r\n                                        <FormattedMessage\r\n                                            id=\"CoinInfo.Coin\"\r\n                                            defaultMessage=\"Coin\"\r\n                                        />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"dropdown-and-link ms-sm-5 ms-xs-3 mt-3\">\r\n                                        <a className=\" small rounded link m-2\" type=\"button\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.Whitepaper\"\r\n                                                defaultMessage=\"Coin\"\r\n                                            />\r\n                                        </a>\r\n                                        <a className=\" small rounded link m-2\" type=\"button\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.SourceCode\"\r\n                                                defaultMessage=\"SourceCode\"\r\n                                            />\r\n                                        </a>\r\n                                        <br/>\r\n                                        <a className=\" small rounded dropdown-toggle m-2\" type=\"button\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.Explorer\"\r\n                                                defaultMessage=\"Explorer\"\r\n                                            />\r\n                                        </a>\r\n                                        <ul\r\n                                            className=\"dropdown-menu\"\r\n                                            aria-labelledby=\"dropdownMenuButton1\"\r\n                                        >\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"#\">\r\n                                                    Action\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"#\">\r\n                                                    Another action\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"#\">\r\n                                                    Something else here\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <a className=\" small rounded dropdown-toggle m-2\" type=\"button\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.Website\"\r\n                                                defaultMessage=\"Website\"\r\n                                            />\r\n                                        </a>\r\n                                        <ul\r\n                                            className=\"dropdown-menu\"\r\n                                            aria-labelledby=\"dropdownMenuButton1\"\r\n                                        >\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"#\">\r\n                                                    Action\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"#\">\r\n                                                    Another action\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"#\">\r\n                                                    Something else here\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"first-time mt-3 ms-sm-5 ms-xs-3 text-center d-flex\">\r\n                                        <div className=\"crypto-first-date  me-5\">\r\n                                            <span dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                  <FormattedMessage\r\n                                                      id=\"CoinInfo.DateOfIssue\"\r\n                                                      defaultMessage=\"DateOfIssue\"\r\n                                                  />\r\n                                            </span>\r\n                                            <div className=\"first-date\">2008-10-31</div>\r\n                                        </div>\r\n                                        <div className=\"crypto-first-price me-5\">\r\n                                            <span dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                   <FormattedMessage\r\n                                                       id=\"CoinInfo.IssuePrice:\"\r\n                                                       defaultMessage=\"IssuePrice:\"\r\n                                                   />\r\n                                            </span>\r\n                                            <div className=\"first-price\">$2,475.43</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"card-body col-md-8 col-xl-8 col-sm-12 mt-5 ms-4 pe-0\">\r\n                                    <div className=\"card-title fw-bold\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <FormattedMessage\r\n                                            id=\"CoinInfo.Introduction\"\r\n                                            defaultMessage=\"Introduction:\"\r\n                                        />\r\n                                    </div>\r\n                                    <p className=\"text-capitalize Coin introduction text p-3\"\r\n                                       dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        Ethereum, founded by Vitalik Buterin, created an alternative\r\n                                        protocol for building decentralized applications, by building what\r\n                                        is essentially the ultimate abstract foundational layer: a\r\n                                        blockchain with a built-in Turing-complete programming language,\r\n                                        allowing anyone to write smart contracts and decentralized\r\n                                        applications where they can create their own arbitrary rules for\r\n                                        ownership, transaction formats, and state transition functions.\r\n                                        Ethereum has pioneered the concept of a blockchain smart contract\r\n                                        platform. Smart contracts are computer programs that automatically\r\n                                        execute the actions necessary to fulfill an agreement between\r\n                                        several parties on the internet. They were designed to reduce the\r\n                                        need for trusted intermediates between contractors, thus reducing\r\n                                        transaction costs while also increasing transaction reliability.\r\n                                        Ethereum’s principal innovation was designing a platform that\r\n                                        allowed it to execute smart contracts using the blockchain, which\r\n                                        further reinforces the already existing benefits of smart contract\r\n                                        technology. Ethereum’s blockchain was designed, according to\r\n                                        co-founder Gavin Wood, as a sort of “one computer for the entire\r\n                                        planet,” theoretically able to make any program more robust,\r\n                                        censorship-resistant and less prone to fraud by running it on a\r\n                                        globally distributed network of public nodes.\r\n                                    </p>\r\n                                    <div className=\"card border-0\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"col-12\">\r\n                                                <img\r\n                                                    src=\"img/new_chart.png\"\r\n                                                    className=\"crypto-chart img-fluid\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-2 col-xl-2 col-sm-12\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={`card-body col-lg-3 col-md-4 col-xl-2 col-sm-12 mt-5 ${context.locale == \"fa\" ? \"me-5\" : \"me-2\"}`}\r\n                                    dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                    <div className=\"card market-cap border-0 mt-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <h6 className=\"card-subtitle mb-2 \">\r\n                                                <FormattedMessage\r\n                                                    id=\"CoinInfo.MarketCap\"\r\n                                                    defaultMessage=\"MarketCap:\"\r\n                                                />\r\n                                            </h6>\r\n                                            <div className=\"market-cap-info \">\r\n                                                <span>$739,362,006,627</span>\r\n                                                <div className=\"crypto-percent\">3.47%</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card fully-diluted border-0 mt-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <h6 className=\"card-subtitle mb-2 \">\r\n                                                <FormattedMessage\r\n                                                    id=\"CoinInfo.FullyDilutedMarketCap\"\r\n                                                    defaultMessage=\"FullyDilutedMarketCap:\"\r\n                                                />\r\n                                            </h6>\r\n                                            <div className=\"fully-diluted-info  \">\r\n                                                <span>$823,125,098,699</span>\r\n                                                <div className=\"crypto-percent\">3.40%</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card volume-24h border-0 mt-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <h6 className=\"card-subtitle mb-2 \">\r\n                                                <FormattedMessage\r\n                                                    id=\"CoinInfo.Volume24h\"\r\n                                                    defaultMessage=\"Volume24h:\"\r\n                                                />\r\n                                            </h6>\r\n                                            <div className=\"volume-24h-info  \">\r\n                                                <span>$24,331,321,338</span>\r\n                                                <div className=\"crypto-percent\">2.16%</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-body volume-divide-market-container\">\r\n                                            <h6 className=\"card-subtitle mb-2 \">\r\n                                                <FormattedMessage\r\n                                                    id=\"CoinInfo.Volume/MarketCap\"\r\n                                                    defaultMessage=\"Volume/MarketCap:\"\r\n                                                />\r\n                                            </h6>\r\n                                            <div className=\"volume-divide-market  me-5\">\r\n                                                <span>0.03322</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card fully-diluted border-0 mt-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <h6 className=\"card-subtitle mb-2 \">\r\n                                                <FormattedMessage\r\n                                                    id=\"CoinInfo.CirculatingSupply\"\r\n                                                    defaultMessage=\"CirculatingSupply\"\r\n                                                />\r\n                                            </h6>\r\n                                            <div className=\"fully-diluted-info \">\r\n                                                <span>18,776,556.00 BTC</span>\r\n                                                <div className=\"progressBar-container me-3 mt-3\">\r\n                                                    <ProgressBar bgColor=\"#425157\" height=\"15px\" completed={60}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body supply-container\">\r\n                                        <h6 className=\"card-subtitle mb-2 Max-Supply\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.MaxSupply\"\r\n                                                defaultMessage=\"MaxSupply\"\r\n                                            /> <span>21,000,000</span>\r\n                                        </h6>\r\n                                        <h6 className=\"card-subtitle mb-2 Total-Supply mt-2\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.TotalSupply\"\r\n                                                defaultMessage=\"TotalSupply\"\r\n                                            /> <span>18,776,668</span>\r\n                                        </h6>\r\n                                        <h4 className=\"card-subtitle mb-4 Total-Supply mt-5\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.HighestPrice\"\r\n                                                defaultMessage=\"HighestPrice\"\r\n                                            /> <span>$64,863.10</span>{\" \"}\r\n                                            <div className=\"crypto-percent\">+27.74%</div>\r\n                                        </h4>\r\n                                        <h4 className=\"card-subtitle mb-2 Total-Supply mt-2\">\r\n                                            <FormattedMessage\r\n                                                id=\"CoinInfo.LowestPrice\"\r\n                                                defaultMessage=\"LowestPrice\"\r\n                                            /> <span>$65.53</span>{\" \"}\r\n                                            <div className=\"crypto-percent\">+27.74%</div>\r\n                                        </h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <Footer/>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport QRCode from \"qrcode.react\";\r\nimport {Theme} from \"../ThemeContext\";\r\n\r\nconst QrCode = (props) => {\r\n    const theme = useContext(Theme);\r\n    return (\r\n        <div>\r\n            <QRCode\r\n                value={props.value}\r\n                renderAs=\"svg\"\r\n                fgColor={theme.theme == \"light\" ? \"#040a13\" : \"#fff\"}\r\n                bgColor={theme.theme == \"light\" ? \"#fff\" : \"#040a13\"}\r\n                level='Q'\r\n                size={props.size}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QrCode;\r\n\r\n\r\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport '../css/bootstrap.css';\r\nimport '../css/deposit.css';\r\nimport {FaSearchDollar} from '@react-icons/all-files/fa/FaSearchDollar';\r\nimport {BiCopy} from '@react-icons/all-files/bi/BiCopy';\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport CopyToCLipBoard from 'copy-to-clipboard-react';\r\nimport MarketSearchSec from \"../widgets/MarketSearchSec\";\r\nimport QrCode from \"../widgets/QrCode\";\r\nimport axios from \"axios\";\r\nimport {Badge, CircularProgress} from \"@material-ui/core\";\r\n\r\nexport default function DepositScreen() {\r\n\r\n    const context = useContext(Context);\r\n\r\n    const [selectedNetworks, setNetworks] = useState();\r\n\r\n    const [selectedOne, setSelectedOne] = useState();\r\n    const [configs, setConfigs] = useState();\r\n    const [chains, setChain] = useState([]);\r\n\r\n    const [width, setWidth] = useState();\r\n\r\n    const [address, setAddress] = useState(\"Copy text Button\");\r\n    const [coinType, setCoinType] = useState();\r\n    const [copySuccess, setCopySuccess] = useState(false);\r\n\r\n\r\n    const [IsLoading, setIsLoading] = useState(false);\r\n    const [isLoading, setIsloading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchGeneralList = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('/v1/common/asset/config');\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n\r\n            const generalLi = await response.json();\r\n            // const data = await (response.data.data.ticker);\r\n\r\n\r\n            const loadedData = [];\r\n\r\n\r\n            for (var key in generalLi.data) {\r\n                loadedData.push({\r\n                    name: generalLi.data[key].asset,\r\n                    deposit_least_amount: generalLi.data[key].deposit_least_amount,\r\n                    withdraw_tx_fee: generalLi.data[key].withdraw_tx_fee,\r\n                    chain: generalLi.data[key].chain,\r\n                    can_deposit: generalLi.data[key].can_deposit\r\n                });\r\n            }\r\n\r\n            setConfigs(loadedData);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchGeneralList();\r\n        setInterval(() => {\r\n            setWidth(window.innerWidth);\r\n        }, 100);\r\n    }, [fetchGeneralList]);\r\n\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    useEffect(() => {\r\n        if (!isLoggedIn)\r\n            history.push('login');\r\n    }, []);\r\n\r\n    const fetchCoinData = useCallback(async (val, networks, config) => {\r\n        setIsLoading(true);\r\n        setSelectedOne(null);\r\n        setCopySuccess(false);\r\n\r\n        const loadedConfigs = [];\r\n        for (var key in networks) {\r\n            if (networks[key].name === val) {\r\n                setNetworks(networks[key]);\r\n            }\r\n            for (var i in config) {\r\n                for (var j in networks[key].networks) {\r\n                    if (networks[key].name === val && config[i].name === val && networks[key].networks[j] == config[i].chain) {\r\n                        loadedConfigs.push({\r\n                            name: val,\r\n                            network: networks[key].networks[j],\r\n                            chain: config[i].chain,\r\n                            withdraw_tx_fee: config[i].withdraw_tx_fee\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setChain(loadedConfigs);\r\n        setCoinType(val);\r\n\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n\r\n    let content;\r\n\r\n    if (chains.length === 0 && selectedNetworks != undefined) {\r\n        content = <li className=\"list-group-item border-0\">Found no Chain.</li>;\r\n    }\r\n\r\n    if (error) {\r\n        content = <li className=\"list-group-item border-0\">{error}</li>;\r\n    }\r\n\r\n    if (IsLoading) {\r\n        content = <li className=\"list-group-item border-0\"><CircularProgress/></li>;\r\n    }\r\n\r\n    const fetchAddress = useCallback(async (val, loadedConfigs) => {\r\n        setIsloading(true);\r\n        let smart_contract_name;\r\n        if (loadedConfigs.chain == undefined)\r\n            smart_contract_name = loadedConfigs[0].chain;\r\n        smart_contract_name = loadedConfigs.chain;\r\n        const Addresses = await axios.get(`/core/balanceDepositAddress?coin_type=${val}&smart_contract_name=${smart_contract_name}` , {\r\n            headers:{\r\n                'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        if (Addresses.status !== 200) {\r\n            throw new Error('Something went wrong!');\r\n        }\r\n        if (Addresses.data.data.coin_address) {\r\n            setAddress(Addresses.data.data.coin_address);\r\n            setCopySuccess(true);\r\n        } else {\r\n            setCopySuccess(false);\r\n        }\r\n\r\n        setIsloading(false);\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    let adressContent;\r\n\r\n\r\n    if (chains.length === 0 && selectedNetworks != undefined) {\r\n        adressContent = <li className=\"list-group-item border-0\">Found no Chain.</li>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        adressContent = <li className=\"list-group-item border-0\"><CircularProgress/></li>;\r\n    }\r\n\r\n    return (\r\n        <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center mb-3\">\r\n                    <div className=\"col-md-10 col-lg-10 col-xl-8 col-xxl-8 col-sm-12 col-xs-12 \">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"Deposit-title-container ms-1\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                    <p className=\"title m-0\">\r\n                                        <FormattedMessage\r\n                                            id=\"Deposit.Title\"\r\n                                            defaultMessage=\"Deposit\"\r\n                                        />\r\n                                    </p>\r\n                                    <span className=\"explain\">\r\n                 <FormattedMessage\r\n                     id=\"Deposit.SubTitle\"\r\n                     defaultMessage=\"SubTitle\"\r\n                 />\r\n            </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8 col-xl-8 col-sm-12 col-xs-12\">\r\n                                        <div className=\"card deposit-card\">\r\n                                            <div className=\"card-header border-0\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <label className=\"fw-bold\">Coin</label>\r\n                                                <MarketSearchSec\r\n                                                    configData={configs}\r\n                                                    onFetchCoinData={fetchCoinData}\r\n                                                    size={width < 500 ? 200 : 300}\r\n                                                    lable={<FormattedMessage\r\n                                                        id=\"Deposit.Coin\"\r\n                                                        defaultMessage=\"Coin\"/>}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"Protocols\">\r\n                                                    <h5 className=\"Protocol-Type mt-3 mb-4\"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.ProtocolType\"\r\n                                                            defaultMessage=\"ProtocolType\"\r\n                                                        />\r\n                                                    </h5>\r\n                                                    <ul className=\"list-group list-group-horizontal-md Protocol-list \">\r\n                                                        {chains.map((chains, index) => (\r\n                                                            <li className=\"list-group-item col-3\">\r\n                                                                <a className=\"col-12\" href=\"#\">\r\n                                                                    <button onClick={() => {\r\n                                                                        setSelectedOne(index);\r\n                                                                        fetchAddress(coinType, chains);\r\n                                                                    }}\r\n                                                                            className={`${selectedOne == index ? 'protocolBtn-selected' : 'protocolBtn'}`}>\r\n                                                                        {\r\n                                                                            chains.network\r\n\r\n                                                                        }\r\n                                                                        <br/>\r\n                                                                        <span className=\"fee-container\">\r\n                                                          <div className=\"fee-amount\"></div>\r\n                                                                            {\" \"}\r\n                                                        </span>\r\n                                                                    </button>\r\n                                                                </a>\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                    <section\r\n                                                        className='card-text text-center protocol-feedback'>{content}</section>\r\n                                                </div>\r\n                                                <div className={`Completion`}>\r\n\r\n                                                    <h5 className=\"address mt-4 mb-5 d-lg-flex justify-content-between\"\r\n                                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.DepositTo\"\r\n                                                            defaultMessage=\"DepositTo\"\r\n                                                        />\r\n                                                    </h5>\r\n                                                    <section\r\n                                                        className='card-text text-center protocol-feedback'>{adressContent}</section>\r\n                                                    {copySuccess && !isLoading &&\r\n                                                    <div className=\"row justify-content-center m-5 m-sm-0\">\r\n                                                        <div\r\n                                                            className=\"QR-code d-flex justify-content-center\">\r\n                                                            <QrCode size={width < 400 ? 120 : 200} value={address}/>\r\n                                                        </div>\r\n\r\n                                                        <div className=\" row justify-content-center mt-3\">\r\n                                                            <div\r\n                                                                className=\"CopyToCLipBoard d-flex justify-content-center\">\r\n                                                                <Badge  badgeContent={<BiCopy/>} color=\"secondary\" >\r\n                                                                    <CopyToCLipBoard\r\n                                                                        text={address}\r\n                                                                    />\r\n                                                                </Badge>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-xl-4 col-sm-12 col-xs-12\">\r\n                                        <div className=\"card border-0\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <div className=\"card-header\">\r\n                                                <div className=\"instruction-box \">\r\n                                                    <p className=\"explantation m-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.Attention\"\r\n                                                            defaultMessage=\"Attention\"\r\n                                                        />\r\n                                                    </p>\r\n                                                    <p className=\"text-center title mt-2\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.Attention.first\"\r\n                                                            defaultMessage=\"Attention\"\r\n                                                        />\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body list-container\">\r\n                                                <ol className=\"list-group list-group-numbered \">\r\n                                                    <li className=\"list-group-item border-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.Attention.second\"\r\n                                                            defaultMessage=\"Attention\"\r\n                                                        />\r\n                                                    </li>\r\n                                                    <li className=\"list-group-item border-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.Attention.third\"\r\n                                                            defaultMessage=\"Attention\"\r\n                                                        />\r\n                                                    </li>\r\n                                                    <li className=\"list-group-item border-0\">\r\n                                                        <FormattedMessage\r\n                                                            id=\"Deposit.Attention.forth\"\r\n                                                            defaultMessage=\"Attention\"\r\n                                                        />\r\n                                                    </li>\r\n                                                </ol>\r\n                                                <hr/>\r\n                                                <button className=\"btn FAQ mt-2\" type=\"button\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.DepositFAQ\"\r\n                                                        defaultMessage=\"DepositFAQ\"\r\n                                                    />\r\n                                                </button>\r\n                                                {/*<h5 className=\"go-trade mt-3 mb-4\">*/}\r\n                                                {/*    <FormattedMessage*/}\r\n                                                {/*        id=\"Deposit.GoTrade\"*/}\r\n                                                {/*        defaultMessage=\"GoTrade\"*/}\r\n                                                {/*    />*/}\r\n                                                {/*</h5>*/}\r\n                                                {/*<div className=\"d-grid gap-2 d-md-block d-flex mt-3\">*/}\r\n                                                {/*    <button className=\"go-trade-usdt\" type=\"button\">*/}\r\n                                                {/*        <FormattedMessage*/}\r\n                                                {/*            id=\"Deposit.BTC/USDT\"*/}\r\n                                                {/*            defaultMessage=\"Deposit.BTC/USDT\"*/}\r\n                                                {/*        />*/}\r\n                                                {/*    </button>*/}\r\n                                                {/*</div>*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 mt-3 \">\r\n                                    <div className=\"card p-3 deposit-records\">\r\n                                        <div className=\"card-header mb-3\">\r\n                                            <h4 className=\"card-title\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <FormattedMessage\r\n                                                    id=\"Deposit.Table.Title\"\r\n                                                    defaultMessage=\"Last 5 Deposit records\"\r\n                                                />\r\n                                            </h4>\r\n                                        </div>\r\n                                        <table>\r\n                                            <tbody>\r\n                                            <tr className=\"deposit-records-title \">\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.Table.Time\"\r\n                                                        defaultMessage=\"Time\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.Table.Coin\"\r\n                                                        defaultMessage=\"Coin\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.Table.ProtocolType\"\r\n                                                        defaultMessage=\"ProtocolType\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.Table.DepositAddress\"\r\n                                                        defaultMessage=\"DepositAddress\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.Table.Status\"\r\n                                                        defaultMessage=\"Status\"\r\n                                                    />\r\n                                                </th>\r\n                                                <th>\r\n                                                    <FormattedMessage\r\n                                                        id=\"Deposit.Table.TXID\"\r\n                                                        defaultMessage=\"TXID\"\r\n                                                    />\r\n                                                </th>\r\n                                            </tr>\r\n                                            <tr className=\"deposit-records-content\">\r\n                                                <td>Jill</td>\r\n                                                <td>Smith</td>\r\n                                                <td>50</td>\r\n                                                <td>50</td>\r\n                                                <td>50</td>\r\n                                                <td>50</td>\r\n                                            </tr>\r\n                                            <tr className=\"deposit-records-content\"></tr>\r\n                                            <tr className=\"deposit-records-content\"></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport '../css/bootstrap.css';\r\nimport '../css/FAQ.css';\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\n\r\n\r\nexport default function FAQScreen(props) {\r\n\r\n  const context =useContext(Context);\r\n\r\n  return (\r\n    <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n     <NavBar />\r\n      <br/>\r\n      <br/>\r\n      <br/>\r\n      <br/>\r\n      <div className=\"container-fluid \">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-12 col-lg-12 col-xl-10  col-sm-12 col-xs-12\">\r\n          <div className=\"card \" dir={context.locale == \"fa\" && \"rtl\"}>\r\n            <div className=\"row justify-content-between\">\r\n              <div className=\"card-body col-lg-6 explanation-container\">\r\n                <h2 className=\"card-title mb-5\">\r\n                  <FormattedMessage\r\n                      id=\"FAQScreen.Title\"\r\n                      defaultMessage=\"FAQ About Withdrawal\"\r\n                  />\r\n                </h2>\r\n                <div className=\"card-text\">\r\n                  <h5>\r\n                    <FormattedMessage\r\n                        id=\"FAQScreen.SubTitle\"\r\n                        defaultMessage=\"How long does it take my withdrawal to arrive?\"\r\n                    />\r\n                  </h5>\r\n                  <FormattedMessage\r\n                      id=\"FAQScreen.ThreeProcedures\"\r\n                      defaultMessage=\"Three Procedures\"\r\n                  />\r\n                  <br />{\" \"}\r\n                  <strong>\r\n                    <FormattedMessage\r\n                        id=\"FAQScreen.BlockConfirmations\"\r\n                        defaultMessage=\"BlockConfirmations\"\r\n                    />\r\n                  </strong>\r\n                  <br />\r\n                  <FormattedMessage\r\n                      id=\"FAQScreen.BlockConfirmations.Explanation\"\r\n                      defaultMessage=\"FAQScreen.BlockConfirmations.Explanation\"\r\n                  />\r\n                </div>\r\n                <h2 className=\"card-title mb-5 mt-5\">\r\n                  <FormattedMessage\r\n                      id=\"FAQScreen.BlockConfirmations.FAQAboutDeposit\"\r\n                      defaultMessage=\"FAQScreen.BlockConfirmations.FAQAboutDeposit\"\r\n                  />\r\n                </h2>\r\n                <div className=\"card-text\">\r\n                  <p></p>\r\n                  <h5>\r\n                    <FormattedMessage\r\n                        id=\"FAQScreen.BlockConfirmations.Explanation.sec\"\r\n                        defaultMessage=\"FAQScreen.BlockConfirmations.Explanation.sec\"\r\n                    />\r\n                  </h5>\r\n                  <br />{\" \"}\r\n\r\n                  <FormattedMessage\r\n                      id=\"FAQScreen.UsersCan\"\r\n                      defaultMessage=\"Users Can\"\r\n                  />\r\n                  <p />\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body col-lg-6 coins-table-container\">\r\n                <div className=\" mt-3\" style={{ overflowX: \"auto\" }}>\r\n                  <table>\r\n                    <tbody>\r\n                    <tr className=\"FAQ-table-titles\">\r\n                      <th>\r\n                        <FormattedMessage\r\n                            id=\"FAQScreen.Table.CoinType\"\r\n                            defaultMessage=\"CoinType\"\r\n                        />\r\n                      </th>\r\n                      <th>\r\n                        <FormattedMessage\r\n                            id=\"FAQScreen.Table.MainnetType\"\r\n                            defaultMessage=\"MainnetType\"\r\n                        />\r\n                      </th>\r\n                      <th>\r\n                        <FormattedMessage\r\n                            id=\"FAQScreen.Table.MinimumWithdrawal\"\r\n                            defaultMessage=\"MinimumWithdrawal\"\r\n                        />\r\n                      </th>\r\n                      <th>\r\n                        <FormattedMessage\r\n                            id=\"FAQScreen.Table.WithdrawalFee\"\r\n                            defaultMessage=\"WithdrawalFee\"\r\n                        />\r\n                      </th>\r\n                      <th>\r\n                        <FormattedMessage\r\n                            id=\"FAQScreen.Table.Explorer\"\r\n                            defaultMessage=\"Explorer\"\r\n                        />\r\n                      </th>\r\n                    </tr>\r\n                    <tr className=\"FAQ-table-body\">\r\n                      <td>Jill</td>\r\n                      <td>Smith</td>\r\n                      <td>50</td>\r\n                      <td>50</td>\r\n                      <td>50</td>\r\n                    </tr>\r\n                    <tr className=\"FAQ-table-body\">\r\n                      <td>Eve</td>\r\n                      <td>Jackson</td>\r\n                      <td>94</td>\r\n                      <td>94</td>\r\n                      <td>94</td>\r\n                    </tr>\r\n                    <tr className=\"FAQ-table-body\">\r\n                      <td>Adam</td>\r\n                      <td>Johnson</td>\r\n                      <td>67</td>\r\n                      <td>67</td>\r\n                      <td>67</td>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport \"../css/idVerification.css\"\r\nimport {FaRegIdCard} from \"@react-icons/all-files/fa/FaRegIdCard\";\r\nimport {FaIdCardAlt} from \"@react-icons/all-files/fa/FaIdCardAlt\";\r\nimport {GrContactInfo} from \"@react-icons/all-files/gr/GrContactInfo\";\r\nimport {RiQrScan2Line} from \"@react-icons/all-files/ri/RiQrScan2Line\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\"\r\nimport 'react-spring-modal/styles.css';\r\nimport {CenterModal, ModalCloseTarget, ModalTitle} from \"react-spring-modal\";\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {LoginContext} from \"../../Root\";\r\n\r\nexport default function IdVerification(props) {\r\n\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    useEffect(() => {\r\n        if(!isLoggedIn)\r\n            history.push('login');\r\n    }, []);\r\n\r\n    const context = useContext(Context);\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10 col-lg-10 col-xl-8 col-xxl-8 col-sm-12 col-xs-12\">\r\n                        <div className=\"card shadow\">\r\n                            <div className=\"card-header id-verification-header border-0\">\r\n                                <h2 className=\"card-title p-4\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n            <span className={`id-badge ${context.locale == \"fa\" ? \"ms-3\" : \"me-3\"}`}>\r\n              <FaIdCardAlt className=\"fas fa-id-card-alt\"/>\r\n            </span>\r\n                                    <FormattedMessage\r\n                                        id=\"IDVerification.Title\"\r\n                                        defaultMessage=\"IDVerification\"\r\n                                    />\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"verification-explanation\">\r\n                                    <p className=\"text-capitalize card-text\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <FormattedMessage\r\n                                            id=\"IDVerification.Explanation\"\r\n                                            defaultMessage=\"Some Explanation\"\r\n                                        />\r\n                                    </p>\r\n                                    <ul className=\"list-group list-group-horizontal-md d-flex justify-content-around\"\r\n                                        dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                        <li className=\"list-group-item border-0\">\r\n                                            <i className=\"fas fa-info-circle\"/>\r\n                                            <FormattedMessage\r\n                                                id=\"IDVerification.WithdrawalLimit:\"\r\n                                                defaultMessage=\"WithdrawalLimit:\"\r\n                                            />\r\n                                            <span className=\"withdraw-amount\">\r\n                    <FormattedMessage\r\n                        id=\"IDVerification.WithdrawalLimit.Amount:\"\r\n                        defaultMessage=\"Amount:\"\r\n                    /></span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item border-0\">\r\n                                            <i className=\"fas fa-info-circle\"/>\r\n                                            <FormattedMessage\r\n                                                id=\"IDVerification.JoinMining\"\r\n                                                defaultMessage=\"JoinMining\"\r\n                                            />\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"howToVerify mt-5 p-4\">\r\n                                        <h3 className=\"card-title howToVerify-text\"\r\n                                            dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <FormattedMessage\r\n                                                id=\"IDVerification.VerifyTitle\"\r\n                                                defaultMessage=\"VerifyTitle\"\r\n                                            />\r\n                                        </h3>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"idVerification-steps mt-2 \">\r\n                                                <ul className=\" tilesWrap\">\r\n                                                    <li className={`first-card`}>\r\n                                                        <h2>1</h2>\r\n                                                        <h3>\r\n                                                            <div className=\"basicInfo-container\">\r\n                                                                <GrContactInfo className=\"fas fa-file-invoice\"/>\r\n                                                                <div className=\"basicInfo-text mt-1\">\r\n                                                                    <FormattedMessage\r\n                                                                        id=\"IDVerification.BasicInfo\"\r\n                                                                        defaultMessage=\"BasicInfo\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </h3>\r\n                                                    </li>\r\n\r\n                                                    <CenterModal isOpen={isOpen} onDismiss={() => setOpen(false)}>\r\n                                                        <ModalTitle style={{textAlign:\"center\"}}>ID Verification</ModalTitle>\r\n\r\n                                                        <div className=\"mt-3\">\r\n                                                            <FormControl component=\"fieldset\">\r\n                                                                <FormLabel component=\"legend\" style={{color: \"#9c3030\"}}>ID Type</FormLabel>\r\n                                                                <RadioGroup row aria-label=\"position\" name=\"position\"\r\n                                                                            defaultValue=\"top\">\r\n                                                                    <FormControlLabel\r\n                                                                        value=\"idCard\"\r\n                                                                        control={<Radio color=\"primary\" style={{color: \"#9c3030\"}}/>}\r\n                                                                        label=\"Id Card\"\r\n                                                                        labelPlacement=\"Id Card\"\r\n                                                                    />\r\n                                                                    <FormControlLabel\r\n                                                                        value=\"passport\"\r\n                                                                        control={<Radio color=\"primary\" style={{color: \"#9c3030\"}}/>}\r\n                                                                        label=\"passport\"\r\n                                                                        labelPlacement=\"passport\"\r\n                                                                    />\r\n                                                                </RadioGroup>\r\n                                                            </FormControl>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-floating mt-3\">\r\n                                                            <select className=\"form-select\" id=\"floatingSelectGrid\"\r\n                                                                    aria-label=\"Floating label select example\">\r\n                                                                <option selected></option>\r\n                                                                <option value=\"1\">One</option>\r\n                                                                <option value=\"2\">Two</option>\r\n                                                                <option value=\"3\">Three</option>\r\n                                                            </select>\r\n                                                            <label htmlFor=\"floatingSelectGrid\">Nationality</label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"row mt-3 g-2\">\r\n                                                            <div className=\"col-md\">\r\n                                                                <div className=\"form-floating\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control\"\r\n\r\n                                                                    />\r\n                                                                    <label>First Name</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md\">\r\n                                                                <div className=\"form-floating\">\r\n                                                                    <input\r\n                                                                        type=\"email\"\r\n                                                                        className=\"form-control\"\r\n                                                                    />\r\n                                                                    <label >Last Name</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-floating mb-3 mt-4\">\r\n                                                            <input\r\n                                                                type=\"email\"\r\n                                                                className=\"form-control\"\r\n                                                                id=\"floatingInput\"\r\n                                                                placeholder=\"name@example.com\"\r\n                                                            />\r\n                                                            <label htmlFor=\"floatingInput\">Email address</label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mt-3 mb-4\">\r\n                                                            <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\"\r\n                                                                   style={{display: \"none\"}}/>\r\n                                                            <label htmlFor=\"icon-button-file\">\r\n                                                                <IconButton color=\"primary\" aria-label=\"upload picture\"\r\n                                                                            component=\"span\" style={{color: \"#9c3030\"}}>\r\n                                                                    <PhotoCamera/>\r\n                                                                </IconButton>\r\n                                                                Upload The Photo\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                        <div >\r\n\r\n                                                            <Button variant=\"outlined\" color=\"primary\" style={{color: \"#9c3030\" , borderColor:\"#9c3030\"}}>\r\n                                                                Submit\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </CenterModal>\r\n\r\n                                                    <li className={` ${!props.isVerified ? \"not-verifiedLI\" : \"second-card\"}`}\r\n                                                        onClick={() => setOpen(true)}>\r\n                                                        <h2>2</h2>\r\n                                                        <h3 className={`${!props.isVerified ? \"not-verified\" : \"\"}`}>\r\n\r\n                        <span className=\"basicInfo-container mt-1\">\r\n                          <FaRegIdCard className=\"fas fa-id-card\"/>\r\n                          <div className=\"basicInfo-text\">\r\n                                <FormattedMessage\r\n                                    id=\"IDVerification.UploadIDCard\"\r\n                                    defaultMessage=\"UploadIDCard\"\r\n                                />\r\n                          </div>\r\n                        </span>\r\n                                                        </h3>\r\n                                                    </li>\r\n                                                    <li className={`${!props.isVerified ? \"not-verifiedLI\" : \"third-card \"}`}>\r\n                                                        <h2>3</h2>\r\n                                                        <h3 className={`${!props.isVerified ? \"not-verified\" : \"\"}`}>\r\n                        <span className=\"basicInfo-container mt-1\">\r\n                          <RiQrScan2Line className=\"fas fa-portrait\"/>\r\n                          <div className=\"basicInfo-text\">\r\n                                 <FormattedMessage\r\n                                     id=\"IDVerification.FaceRecognition\"\r\n                                     defaultMessage=\"FaceRecognition\"\r\n                                 />\r\n                          </div>\r\n                        </span>\r\n                                                        </h3>\r\n                                                    </li>\r\n                                                </ul>\r\n                                                {/*<div className={`readyVerification ${context.locale != \"fa\" ? \"text-end\" : \"text-start\"} p-3`} dir={context.locale == \"fa\" && \"rtl\"}>*/}\r\n                                                {/*  <div className={`form-check ${context.locale == \"fa\" ? \"text-end\" : \"text-start\"}`} dir={context.locale == \"fa\" && \"rtl\"}>*/}\r\n                                                {/*    <input className=\"form-check-input\" type=\"checkbox\" />*/}\r\n                                                {/*    <label className=\"form-check-label\">*/}\r\n                                                {/*      <FormattedMessage*/}\r\n                                                {/*          id=\"IDVerification.Promise\"*/}\r\n                                                {/*          defaultMessage=\"Promise\"*/}\r\n                                                {/*      />*/}\r\n                                                {/*    </label>*/}\r\n                                                {/*  </div>*/}\r\n                                                {/*  <button className=\"bn30\" disabled>*/}\r\n                                                {/*    <FormattedMessage*/}\r\n                                                {/*        id=\"IDVerification.VerificationBtn\"*/}\r\n                                                {/*        defaultMessage=\"VerificationBtn\"*/}\r\n                                                {/*    />*/}\r\n                                                {/*  </button>*/}\r\n                                                {/*</div>*/}\r\n                                            </div>\r\n                                            <div className=\"useful-info\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                                <h3 className=\"card-title \">\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDVerification.AttentionList\"\r\n                                                        defaultMessage=\"AttentionList\"\r\n                                                    />\r\n                                                </h3>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        <FormattedMessage\r\n                                                            id=\"IDVerification.AttentionList.first\"\r\n                                                            defaultMessage=\"\"\r\n                                                        />\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <FormattedMessage\r\n                                                            id=\"IDVerification.AttentionList.second\"\r\n                                                            defaultMessage=\"\"\r\n                                                        />\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <FormattedMessage\r\n                                                            id=\"IDVerification.AttentionList.third\"\r\n                                                            defaultMessage=\"\"\r\n                                                        />\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext, useEffect, useState, useCallback} from 'react';\r\nimport '../css/bootstrap.css';\r\nimport '../css/MarketList.css';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport Footer from \"../widgets/Footer\";\r\nimport {FaSearchDollar} from \"@react-icons/all-files/fa/FaSearchDollar\";\r\nimport {FaHashtag} from \"@react-icons/all-files/fa/FaHashtag\";\r\nimport {AiFillCaretUp} from \"@react-icons/all-files/ai/AiFillCaretUp\";\r\nimport {AiFillCaretDown} from \"@react-icons/all-files/ai/AiFillCaretDown\";\r\nimport {FaAngleDoubleRight} from \"@react-icons/all-files/fa/FaAngleDoubleRight\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\n\r\nimport axios from \"axios\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst MarketList = () => {\r\n\r\n    const context = useContext(Context);\r\n    const history = useHistory();\r\n\r\n    const [tickers, setTickers] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const fetchCoinHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n\r\n            const listResponse = await axios.get('currencies/list');\r\n\r\n            if (listResponse.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n            const marketL = (listResponse.data);\r\n\r\n            const loadedList = [];\r\n\r\n\r\n            for (var keys in marketL) {\r\n                loadedList.push({\r\n                    name: marketL[keys].markets,\r\n                    rank: marketL[keys].rank\r\n                });\r\n            }\r\n\r\n            loadedList.sort(function (a,b){return a.rank - b.rank});\r\n\r\n\r\n            const response = await axios.get('core/marketTickerAll');\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n\r\n            const data = await (response.data.data.ticker);\r\n\r\n            const loadedData = [];\r\n\r\n            for (var i = 0; i <= loadedList.length; i++) {\r\n                for (var key in data) {\r\n                    if (loadedList[i] != undefined && loadedList[i].name != undefined && key.toLowerCase() == loadedList[i].name[0].toLowerCase()) {\r\n                        loadedData.push({\r\n                            id: i + 1,\r\n                            name: key,\r\n                            lastPrice: data[key].last,\r\n                            dayOpen: data[key].open,\r\n                            marketCap: data[key].buy_amount\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            setTickers(loadedData);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCoinHandler();\r\n    }, [fetchCoinHandler]);\r\n\r\n    let content;\r\n\r\n    if (tickers.length === 0) {\r\n        content = <p>Found no Coin.</p>;\r\n    }\r\n\r\n    if (error) {\r\n        content = <p>{error}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        content = <p><CircularProgress/></p>;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------------------------\r\n    const [currentSearch, setCurrentSearch] = React.useState(\"\");\r\n    const [nameSortActiveINC, setNameSortActiveINC] = React.useState(false);\r\n    const [nameSortActiveDEC, setNameSortActiveDEC] = React.useState(false);\r\n    const [priceSortActiveINC, setPriceSortActiveINC] = React.useState(false);\r\n    const [priceSortActiveDEC, setPriceSortActiveDEC] = React.useState(false);\r\n    const [percentSortActiveDEC, setPercentSortActiveDEC] = React.useState(false);\r\n    const [percentSortActiveINC, setPercentSortActiveINC] = React.useState(false);\r\n    const [marketSortActiveDEC, setMarketSortActiveDEC] = React.useState(false);\r\n    const [marketSortActiveINC, setMarketSortActiveINC] = React.useState(false);\r\n\r\n\r\n    function compareNameINC(object1, object2, key) {\r\n        const obj1 = object1[key].toUpperCase()\r\n        const obj2 = object2[key].toUpperCase()\r\n\r\n        if (obj1 < obj2) {\r\n            return -1\r\n        }\r\n        if (obj1 > obj2) {\r\n            return 1\r\n        }\r\n        return 0\r\n    }\r\n\r\n    function compareNameDEC(object1, object2, key) {\r\n        const obj1 = object1[key].toUpperCase()\r\n        const obj2 = object2[key].toUpperCase()\r\n\r\n        if (obj1 > obj2) {\r\n            return -1\r\n        }\r\n        if (obj1 < obj2) {\r\n            return 1\r\n        }\r\n        return 0\r\n    }\r\n\r\n    function compareNumberINC(object1, object2, key) {\r\n        const obj1 = object1[key]\r\n        const obj2 = object2[key]\r\n\r\n        return obj2 - obj1\r\n    }\r\n\r\n    function compareNumberDEC(object1, object2, key) {\r\n        const obj1 = object1[key]\r\n        const obj2 = object2[key]\r\n\r\n        return obj1 - obj2\r\n    }\r\n\r\n    function comparePercentINC(object1, object2, key1, key2) {\r\n        const obj1 = object1[key1] / object1[key2]\r\n        const obj2 = object2[key1] / object2[key2]\r\n\r\n        return obj2 - obj1\r\n    }\r\n\r\n    function comparePercentDEC(object1, object2, key1, key2) {\r\n        const obj1 = object1[key1] / object1[key2]\r\n        const obj2 = object2[key1] / object2[key2]\r\n\r\n        return obj1 - obj2\r\n    }\r\n\r\n\r\n    const sortListNameINC = (tickers) => {\r\n        setNameSortActiveDEC(false);\r\n        setPriceSortActiveINC(false);\r\n        setPriceSortActiveDEC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n        setMarketSortActiveINC(false)\r\n\r\n        if (!nameSortActiveINC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNameINC(ticker1, ticker2, 'name')\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListNameDEC = (tickers) => {\r\n        setNameSortActiveINC(false);\r\n        setPriceSortActiveINC(false);\r\n        setPriceSortActiveDEC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n        setMarketSortActiveINC(false)\r\n\r\n        if (!nameSortActiveDEC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNameDEC(ticker1, ticker2, 'name')\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListPriceINC = (tickers) => {\r\n        setPriceSortActiveDEC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n        setMarketSortActiveINC(false)\r\n\r\n        if (!priceSortActiveINC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberINC(ticker1, ticker2, 'lastPrice')\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListPriceDEC = (tickers) => {\r\n        setPriceSortActiveINC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n        setMarketSortActiveINC(false)\r\n\r\n        if (!priceSortActiveDEC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'lastPrice')\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberINC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListPercentINC = (tickers) => {\r\n        setPriceSortActiveINC(false)\r\n        setPriceSortActiveDEC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setMarketSortActiveDEC(false);\r\n        setMarketSortActiveINC(false);\r\n\r\n        if (!percentSortActiveINC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return (comparePercentINC(ticker1, ticker2, 'lastPrice', 'dayOpen'))\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListPercentDEC = (tickers) => {\r\n        setPriceSortActiveINC(false)\r\n        setPriceSortActiveDEC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n        setMarketSortActiveINC(false);\r\n\r\n        if (!percentSortActiveDEC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return (comparePercentDEC(ticker1, ticker2, 'lastPrice', 'dayOpen'))\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListMarketCapINC = (tickers) => {\r\n        setPriceSortActiveINC(false)\r\n        setPriceSortActiveDEC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n\r\n        if (!marketSortActiveINC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberINC(ticker1, ticker2, 'marketCap')\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortListMarketCapDEC = (tickers) => {\r\n        setPriceSortActiveINC(false)\r\n        setPriceSortActiveDEC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveINC(false);\r\n\r\n        if (!marketSortActiveDEC) {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'marketCap')\r\n            })\r\n        } else {\r\n            tickers.sort((ticker1, ticker2) => {\r\n                return compareNumberDEC(ticker1, ticker2, 'id')\r\n            })\r\n        }\r\n    }\r\n\r\n    const defaultSort = (tickers) => {\r\n        setPriceSortActiveINC(false)\r\n        setPriceSortActiveDEC(false);\r\n        setNameSortActiveDEC(false);\r\n        setNameSortActiveINC(false);\r\n        setPercentSortActiveDEC(false);\r\n        setPercentSortActiveINC(false);\r\n        setMarketSortActiveINC(false);\r\n        setMarketSortActiveDEC(false);\r\n\r\n        tickers.sort((ticker1, ticker2) => {\r\n            return compareNumberDEC(ticker1, ticker2, 'id')\r\n        })\r\n    }\r\n    //******************************************************************************************************************************************\r\n\r\n    console.log(tickers)\r\n\r\n    return (\r\n        <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid  \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-xs-8 mt-3 col-md-8 col-sm-12 col-xs-12\">\r\n                        <div className=\"card  text-center border-0\">\r\n                            <div className=\"card-header d-flex justify-content-between marketList-header\">\r\n                                <ul className=\"nav nav-tabs card-header-tabs\">\r\n                                    <li className=\"nav-item\">\r\n                                        <h4 className=\"nav-link active mt-3\" aria-current=\"true\" href=\"#\">\r\n                                            <FormattedMessage\r\n                                                id=\"MarketList.Title\"\r\n                                                defaultMessage=\"Market List\"\r\n                                            />\r\n                                        </h4>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"input-group marketList-crypto-search \">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control \"\r\n                                        placeholder=\"...\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"button-addon2\"\r\n                                        onChange={e => setCurrentSearch(e.target.value)}\r\n                                    />\r\n                                    <button className=\"btn \" type=\"button\" id=\"button-addon2\">\r\n              <span>\r\n                <FaSearchDollar className=\"fas fa-search-dollar\"/>\r\n              </span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body shadow marketList-body\">\r\n                                <div\r\n                                    className=\"tab-pane  crypto-table\"\r\n                                    id=\"market-table\"\r\n                                    role=\"tabpanel\"\r\n                                    aria-labelledby=\"pills-home-tab\"\r\n                                >\r\n\r\n                                    <table className=\"market-table bg-transparent text-center \">\r\n                                        <thead>\r\n                                        <tr className=\"crypto-property\">\r\n                                            <th className={`fa-sort ${!nameSortActiveINC && !nameSortActiveDEC && !priceSortActiveINC && !priceSortActiveDEC && !percentSortActiveINC && !percentSortActiveDEC && !marketSortActiveINC && !marketSortActiveDEC && 'sorted text'}`}\r\n                                                scope=\"col\" onClick={() => {\r\n                                                defaultSort(tickers)\r\n                                            }}><FaHashtag/></th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"MarketList.Name\"\r\n                                                    defaultMessage=\"Name\"\r\n                                                />{\" \"}\r\n                                                <span>\r\n                      <AiFillCaretUp onClick={() => {\r\n                          setNameSortActiveINC(!nameSortActiveINC);\r\n                          sortListNameINC(tickers)\r\n                      }} className={`fas fa-sort ${nameSortActiveINC && 'sorted'}`}/>\r\n                      <AiFillCaretDown onClick={() => {\r\n                          setNameSortActiveDEC(!nameSortActiveDEC);\r\n                          sortListNameDEC(tickers)\r\n                      }} className={`fas fa-sort ${nameSortActiveDEC && 'sorted'}`}/>\r\n\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"MarketList.LatestPrice\"\r\n                                                    defaultMessage=\"LatestPrice\"\r\n                                                />(USD){\" \"}\r\n                                                <span>\r\n                        <AiFillCaretUp onClick={() => {\r\n                            setPriceSortActiveINC(!priceSortActiveINC);\r\n                            sortListPriceINC(tickers)\r\n                        }} className={`fas fa-sort ${priceSortActiveINC && 'sorted'}`}/>\r\n                      <AiFillCaretDown onClick={() => {\r\n                          setPriceSortActiveDEC(!priceSortActiveDEC);\r\n                          sortListPriceDEC(tickers)\r\n                      }} className={`fas fa-sort ${priceSortActiveDEC && 'sorted'}`}/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"MarketList.24HChange\"\r\n                                                    defaultMessage=\"24HChange\"\r\n                                                />{\" \"}\r\n                                                <span>\r\n                        <AiFillCaretUp onClick={() => {\r\n                            setPercentSortActiveINC(!percentSortActiveINC);\r\n                            sortListPercentINC(tickers)\r\n                        }} className={`fas fa-sort ${percentSortActiveINC && 'sorted'}`}/>\r\n                      <AiFillCaretDown onClick={() => {\r\n                          setPercentSortActiveDEC(!percentSortActiveDEC);\r\n                          sortListPercentDEC(tickers)\r\n                      }} className={`fas fa-sort ${percentSortActiveDEC && 'sorted'}`}/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"MarketList.MarketCap\"\r\n                                                    defaultMessage=\"MarketCap\"\r\n                                                />\r\n                                                <span>\r\n                        <AiFillCaretUp onClick={() => {\r\n                            setMarketSortActiveINC(!marketSortActiveINC);\r\n                            sortListMarketCapINC(tickers)\r\n                        }} className={`fas fa-sort ${marketSortActiveINC && 'sorted'}`}/>\r\n                      <AiFillCaretDown onClick={() => {\r\n                          setMarketSortActiveDEC(!marketSortActiveDEC);\r\n                          sortListMarketCapDEC(tickers)\r\n                      }} className={`fas fa-sort ${marketSortActiveDEC && 'sorted'}`}/>\r\n\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\"/>\r\n                                        </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody id='lists'>\r\n                                        {tickers.filter(ticker => {\r\n                                            if (currentSearch === \"\") {\r\n                                                return ticker\r\n                                            } else if (ticker.name.toLowerCase().startsWith(currentSearch.toLowerCase())) {\r\n                                                return ticker\r\n                                            }\r\n                                        }).map((ticker) => (\r\n                                            <tr className=\"marketListGlow\" key={ticker.id}\r\n                                                onClick={() => history.push(`Trade?pair=${ticker.name}`)}>\r\n                                                <th scope=\"row\">{ticker.id}</th>\r\n                                                <td className=\"d-flex justify-content-center\">\r\n\r\n                                                    <p>{ticker.name}</p>{\" \"}\r\n                                                </td>\r\n                                                <td>{ticker.lastPrice}</td>\r\n                                                <td className={`Percent ${ticker.lastPrice > ticker.dayOpen ? \"inGrow\" : \"inLose\"} `}>\r\n                                                    {(((ticker.lastPrice - ticker.dayOpen)/ ticker.dayOpen) *100).toFixed(2)}%\r\n                                                </td>\r\n                                                <td>{ticker.marketCap}</td>\r\n                                                <td>\r\n                                                        <span aria-controls=\"simple-menu\"\r\n                                                              aria-haspopup=\"true\">\r\n                                                            <FaAngleDoubleRight\r\n                                                                className=\"fas ACCIco fa-angle-double-right\"/>\r\n                                                        </span>\r\n                                                    <span\r\n                                                        className=\"table-Trade\"\r\n\r\n                                                    >\r\n                                                        <FormattedMessage\r\n                                                            id=\"Wallet.WalletTable.trade\"\r\n                                                            defaultMessage=\"Trade\"\r\n                                                        />\r\n                                                    </span>\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        {/*                    <tr className=\"first-row marketListGlow\">*/}\r\n                                        {/*                        <th scope=\"row\">1</th>*/}\r\n                                        {/*                        <td className=\"d-flex justify-content-center\">*/}\r\n                                        {/*<span>*/}\r\n                                        {/*  <img*/}\r\n                                        {/*      src=\"img/A640879E7F4AEA61E6777EA053450AF7.png\"*/}\r\n                                        {/*      className=\"crypto-ico\"*/}\r\n                                        {/*      alt=\"...\"*/}\r\n                                        {/*  />*/}\r\n                                        {/*</span>*/}\r\n                                        {/*                            <p>XHV</p>{\" \"}*/}\r\n                                        {/*                        </td>*/}\r\n                                        {/*                        <td>Otto</td>*/}\r\n                                        {/*                        <td className=\"grow\">+37.81%</td>*/}\r\n                                        {/*                        <td>Jacob</td>*/}\r\n                                        {/*                        <td>*/}\r\n                                        {/*                            <FaAngleDoubleRight className=\"fas fa-angle-double-right\"/>*/}\r\n                                        {/*                        </td>*/}\r\n                                        {/*                    </tr>*/}\r\n                                        </tbody>\r\n\r\n                                    </table>\r\n                                    <section className='feedBack'>{content}</section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketList;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport '../css/bootstrap.css';\r\nimport '../css/messageCenter.css';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport Footer from \"../widgets/Footer\";\r\nimport { MdMoveToInbox } from \"@react-icons/all-files/md/MdMoveToInbox\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport Trail from \"../widgets/Trail\";\r\nimport {Context} from \"../../translation/Wrapper\"\r\n\r\nimport AccountsNavigator from \"../widgets/AccountsNavigator\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function MessagesScreen() {\r\n  const history = useHistory();\r\n  const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n  useEffect(() => {\r\n    if(!isLoggedIn)\r\n      history.push('login');\r\n  }, []);\r\n  const [open, set] = useState(true);\r\n  const context =useContext(Context);\r\n  return (\r\n      <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n        <NavBar />\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n      <div className=\"container-fluid \">\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-12 col-lg-12 col-xl-10  col-sm-12 col-xs-12\">\r\n        <div className=\"card shadow messagesBox\" >\r\n          <div className=\"card-header\">\r\n\r\n            <AccountsNavigator />\r\n\r\n            <h2 className=\"card-title inbox-title m-3\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n              {\" \"}\r\n              <FormattedMessage\r\n                  id=\"MessageCenter.Title\"\r\n                  defaultMessage=\"InBox\"\r\n              />{\" \"}\r\n              <span className=\"messageIco\">\r\n              <MdMoveToInbox className=\"fas fa-inbox \" />\r\n            </span>\r\n            </h2>\r\n            <div className=\"row justify-content-end\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n              <div className=\"deleteAndSelectAll-container\">\r\n                <button type=\"button\" className=\"btn deleteAll\">\r\n                  <i className=\"fas fa-trash-alt\" />\r\n                  <FormattedMessage\r\n                      id=\"MessageCenter.DeleteAll\"\r\n                      defaultMessage=\"DeleteAll\"\r\n                  />\r\n                </button>\r\n                <button type=\"button\" className=\"btn selectAll\">\r\n                  <i className=\"fas fa-envelope-open-text\" />\r\n                  <FormattedMessage\r\n                      id=\"MessageCenter.ReadAll\"\r\n                      defaultMessage=\"ReadAll\"\r\n                  />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <ul className=\"nav nav-tabs card-header-tabs messagesTabs\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n              <li className=\"nav-item all\">\r\n                <a className=\"nav-link active\" aria-current=\"true\" href=\"#\">\r\n                  <FormattedMessage\r\n                      id=\"MessageCenter.All\"\r\n                      defaultMessage=\"All\"\r\n                  />{\" \"}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item readed\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <FormattedMessage\r\n                      id=\"MessageCenter.readed\"\r\n                      defaultMessage=\"readed\"\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item unread\">\r\n                <a\r\n                    className=\"nav-link \"\r\n                    href=\"#\"\r\n                    tabIndex={-1}\r\n                    aria-disabled=\"true\"\r\n                >\r\n                  <FormattedMessage\r\n                      id=\"MessageCenter.unread\"\r\n                      defaultMessage=\"unread\"\r\n                  />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <ul className=\"list-group messagesContainer list-group-flush\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n              <li className=\"list-group-item \" >\r\n                <h6 className=\"passageTitle\" >\r\n                  Hey Title <br />\r\n                  <p className=\"passage\">Lorem dolor amet sit</p>\r\n                </h6>\r\n                <small>3 days ago</small>\r\n              </li>\r\n              <li className=\"list-group-item \" onClick={() => set(state => !state)}>\r\n                <h6 className=\"passageTitle\">\r\n                  Hey Title <br />\r\n                  <Trail open={open} >\r\n                  <p className=\"passage\">\r\n                    By default, jQuery comes with queue functionality for\r\n                    animations. This means that if you write multiple animate()\r\n                    calls after each other, jQuery creates an \"internal\" queue\r\n                    with these method calls. Then it runs the animate calls ONE by\r\n                    ONE. So, if you want to perform different animations after\r\n                    each other, we take advantage of the queue functionality:\r\n                  </p>\r\n                    <br/>\r\n                  </Trail>\r\n                </h6>\r\n                <small>3 days ago</small>\r\n              </li>\r\n              {/*{items.map(item => (*/}\r\n              {/*    <li key={item.id}>{item.name}</li>*/}\r\n\r\n              {/*  <li key={item.id} className=\"list-group-item \" onClick={() => set(state => !state)}>*/}\r\n              {/*  <h6 className=\"passageTitle\">*/}\r\n              {/*  Hey Title <br />*/}\r\n              {/*  <Trail open={open} >*/}\r\n              {/*  <p className=\"passage\">*/}\r\n              {/*  By default, jQuery comes with queue functionality for*/}\r\n              {/*  animations. This means that if you write multiple animate()*/}\r\n              {/*  calls after each other, jQuery creates an \"internal\" queue*/}\r\n              {/*  with these method calls. Then it runs the animate calls ONE by*/}\r\n              {/*  ONE. So, if you want to perform different animations after*/}\r\n              {/*  each other, we take advantage of the queue functionality:*/}\r\n              {/*  </p>*/}\r\n              {/*  <br/>*/}\r\n              {/*  </Trail>*/}\r\n              {/*  </h6>*/}\r\n              {/*  <small>3 days ago</small>*/}\r\n              {/*  </li>*/}\r\n              {/*))}*/}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n        <br/>\r\n        <br/>\r\n        <Footer />\r\n      </div>\r\n  );\r\n}\r\n","import React, {useContext , useEffect} from \"react\";\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport Footer from \"../widgets/Footer\";\r\nimport \"../css/bootstrap.css\";\r\nimport \"../css/preferencesSettings.css\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {Theme} from \"../ThemeContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport {CgListTree} from \"@react-icons/all-files/cg/CgListTree\";\r\nimport {MdStreetview} from \"@react-icons/all-files/md/MdStreetview\";\r\nimport {HiInboxIn} from \"@react-icons/all-files/hi/HiInboxIn\";\r\nimport {VscReferences} from \"@react-icons/all-files/vsc/VscReferences\";\r\nimport AccountsNavigator from \"../widgets/AccountsNavigator\";\r\n\r\nexport default function SettingScreen(props) {\r\n    const context = useContext(Context);\r\n    const theme = useContext(Theme);\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    useEffect(() => {\r\n  if(!isLoggedIn)\r\n      history.push('login');\r\n    }, []);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        button: {\r\n            display: 'block',\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <div className={`${context.locale == \"fa\" && \"font-face-farsi\"}`}>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-12 col-lg-12 col-xl-10  col-sm-12 col-xs-12\">\r\n                        <div className=\"card shadow preferencesSettings\">\r\n                            <div className=\"card-header\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n\r\n                                <AccountsNavigator />\r\n\r\n                                <h2 className=\"card-title\">\r\n                                    <FormattedMessage\r\n                                        id=\"Settings.Title\"\r\n                                        defaultMessage=\"Preferences Settings\"\r\n                                    />\r\n                                </h2>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"card-body\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                <ul className=\"list-group list-group-flush options\">\r\n                                    <li className=\"list-group-item order-Confirm-container  justify-content-around\">\r\n                                        <span className=\"order-Confirm\">\r\n                                                  <FormattedMessage\r\n                                                      id=\"Settings.OrderConfirm\"\r\n                                                      defaultMessage=\"OrderConfirm\"\r\n                                                  />\r\n                                        </span>\r\n                                        <span className=\"explanation\">\r\n                By activating Order Reminder, a pop-up tip will remind you to\r\n                double check when placing an order.\r\n              </span>\r\n                                        <span className=\"setting-center\">\r\n                <input type=\"checkbox\" name=\"A\" className=\"checkbox\"/>\r\n              </span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item order-Confirm-container  justify-content-around\">\r\n                                        <span className=\"order-Confirm\">\r\n                                            <FormattedMessage\r\n                                                id=\"Settings.UseCETasFees\"\r\n                                                defaultMessage=\"UseCETasFees\"\r\n                                            />\r\n                                        </span>\r\n                                        <span className=\"explanation\">\r\n\r\n              </span>\r\n                                        <span className=\"setting-center\">\r\n                <input type=\"checkbox\" name=\"A\" className=\"checkbox\"/>\r\n              </span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item order-Confirm-container  justify-content-around\">\r\n                                        <div className={`order-Confirm  ${context.locale != \"fa\" && \"me-lg-5\"} `}>\r\n                                            <FormattedMessage\r\n                                                id=\"Settings.LanguageSettings\"\r\n                                                defaultMessage=\"LanguageSettings\"\r\n                                            />\r\n                                        </div>\r\n                                        <span className=\"explanation\"/>\r\n                                        <FormControl  className={classes.formControl}>\r\n                                            {/*<InputLabel style={{color:'#8c8c8c'}} id=\"demo-controlled-open-select-label\">*/}\r\n                                            {/*    <FormattedMessage*/}\r\n                                            {/*        id=\"Settings.Language\"*/}\r\n                                            {/*        defaultMessage=\"Language\"*/}\r\n                                            {/*    />*/}\r\n                                            {/*</InputLabel>*/}\r\n                                            <Select\r\n                                                style={{color:'#8c8c8c' , textAlign:\"center\"}}\r\n                                                IconComponent={'ArrowDropDownIcon'}\r\n                                                labelId=\"demo-controlled-open-select-label\"\r\n                                                id=\"demo-controlled-open-select\"\r\n                                                defaultValue={'en'}\r\n                                                value={context.locale} onChange={context.selectLanguage}\r\n                                            >\r\n                                                <MenuItem value='en'>English</MenuItem>\r\n                                                <MenuItem value='fa'>فارسی</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </li>\r\n                                    {/*<li className=\"list-group-item order-Confirm-container  justify-content-around\">*/}\r\n                                    {/*    <div className={`order-Confirm  ${context.locale != \"fa\" && \"me-lg-5\"} `}>*/}\r\n                                    {/*        <FormattedMessage*/}\r\n                                    {/*            id=\"Settings.ExchangeRate\"*/}\r\n                                    {/*            defaultMessage=\"ExchangeRate\"*/}\r\n                                    {/*        />*/}\r\n                                    {/*    </div>*/}\r\n                                    {/*    <span className=\"explanation\"/>*/}\r\n\r\n                                    {/*    <FormControl className={classes.formControl}>*/}\r\n                                    {/*        <InputLabel id=\"demo-controlled-open-select-label\">*/}\r\n                                    {/*            <FormattedMessage*/}\r\n                                    {/*                id=\"Settings.Age\"*/}\r\n                                    {/*                defaultMessage=\"Age\"*/}\r\n                                    {/*            />*/}\r\n                                    {/*        </InputLabel>*/}\r\n                                    {/*        <Select*/}\r\n                                    {/*            labelId=\"demo-controlled-open-select-label\"*/}\r\n                                    {/*            id=\"demo-controlled-open-select\"*/}\r\n                                    {/*        >*/}\r\n                                    {/*            <MenuItem value=\"\">*/}\r\n                                    {/*                <em>None</em>*/}\r\n                                    {/*            </MenuItem>*/}\r\n                                    {/*            <MenuItem value={10}>Ten</MenuItem>*/}\r\n                                    {/*            <MenuItem value={20}>Twenty</MenuItem>*/}\r\n                                    {/*            <MenuItem value={30}>Thirty</MenuItem>*/}\r\n                                    {/*        </Select>*/}\r\n                                    {/*    </FormControl>*/}\r\n\r\n                                    {/*</li>*/}\r\n                                    <li className=\"list-group-item order-Confirm-container  justify-content-around\">\r\n                                        <span className=\"order-Confirm\">\r\n                                            <FormattedMessage\r\n                                                id=\"Settings.DarkMode\"\r\n                                                defaultMessage=\"DarkMode\"\r\n                                            />\r\n                                        </span>\r\n                                        <span className=\"explanation\">\r\n                By activating Order Reminder, a pop-up tip will remind you to\r\n                double check when placing an order.\r\n              </span>\r\n                                        <span className=\"setting-center\">\r\n                <input type=\"checkbox\" name=\"A\" className=\"checkbox\"  onChange={theme.themeChanger} checked={theme.theme === 'dark'}/>\r\n              </span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item order-Confirm-container  justify-content-around\">\r\n                                        <span className=\"order-Confirm\">\r\n                                                 <FormattedMessage\r\n                                                     id=\"Settings.E-mailSubscriptions\"\r\n                                                     defaultMessage=\"E-mailSubscriptions\"\r\n                                                 />\r\n                                        </span>\r\n                                        <span className=\"explanation\">\r\n                By activating Notifications, you will receive related Email\r\n                notifications from Sigloy.\r\n              </span>\r\n                                        <span className=\"setting-center\">\r\n                <input type=\"checkbox\" name=\"A\" className=\"checkbox\"/>\r\n              </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <Footer/>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nexport default function VerifiedScreen() {\r\n  return (\r\n    <div>\r\n      <meta charSet=\"UTF-8\" />\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\r\n      />\r\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n      <title>Crypto</title>\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\r\n        integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\r\n        crossOrigin=\"anonymous\"\r\n      />\r\n      <link rel=\"stylesheet\" href=\"css/bootstrap.css\" />\r\n      <link rel=\"stylesheet\" href=\"css/NavBar.css\" />\r\n      <link rel=\"stylesheet\" href=\"css/verified.css\" />\r\n      <nav className=\"navbar navbar-expand-lg fixed-top\" id=\"navMenu\">\r\n        <div className=\"container-fluid ps-3\" id=\"navbar-C\">\r\n          <a className=\"navbar-brand dark-them\" href=\"#\">\r\n            Crypto\r\n          </a>\r\n          <button type=\"button\" className=\"btn\" id=\"hidden-started\">\r\n            Get Started\r\n          </button>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarToggleExternalContent\"\r\n            aria-controls=\"navbarToggleExternalContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"btn dark-them btn-outline-light\">\r\n              <i className=\"fas fa-bars\" />\r\n            </span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse \">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 start-items\">\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link dark-them\" href=\"#\">\r\n                  Buy Crypto\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link dark-them\" href=\"#\">\r\n                  Markets\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link dark-them\" href=\"#\">\r\n                  Trade\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item  \">\r\n                <a className=\"nav-link dark-them\" href=\"#\">\r\n                  Trade\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item  \">\r\n                <a className=\"nav-link dark-them\" href=\"#\">\r\n                  Finance\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item  \">\r\n                <a className=\"nav-link dark-them\" href=\"#\">\r\n                  NFT\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <span className=\" navbar-text \">\r\n              <div className>\r\n                <ul className=\"navbar-nav end-items mt-1\" id=\"first-nav\">\r\n                  <li className=\"nav-item \">\r\n                    <a className=\"nav-link id-badge dark-them m-0\" href=\"#\">\r\n                      <i className=\"fas fa-id-badge\" />{\" \"}\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item \">\r\n                    <a className=\"nav-link bell dark-them m-0\" href=\"#\">\r\n                      <i className=\"fas fa-bell\" />{\" \"}\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <button type=\"button\" className=\"btn\" id=\"started\">\r\n                      Get Started\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"nav-item  \">\r\n                    <a className=\"nav-link  en dark-them\" href=\"#\">\r\n                      English\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item usd \">\r\n                    <a className=\"nav-link  Usd dark-them\" href=\"#\">\r\n                      USD\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item \">\r\n                    <a className=\"nav-link dark-them\" href=\"#\">\r\n                      <i className=\"fas fa-adjust\" />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div className=\"container-fluid \">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-sm-12 col-xs-12 col-md-12  col-lg-10 col-xl-10  \">\r\n            <div className=\"card shadow\">\r\n              <div className=\"card-body\">\r\n                <h2 className=\"card-title text-center\">Sigloy Exchange</h2>\r\n                <hr />\r\n                <div className=\"card verified-message\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"greenfy\">\r\n                      {\" \"}\r\n                      <div className=\"verify-ico\" />{\" \"}\r\n                    </div>\r\n                    <h3 className=\"card-titled text-center\">\r\n                      Your Account Was verified successfully\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect, useContext, useCallback} from \"react\";\r\nimport '../css/bootstrap.css';\r\nimport '../css/walletOverview.scss';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport Footer from \"../widgets/Footer\";\r\nimport {buildStyles, CircularProgressbar} from \"react-circular-progressbar\";\r\nimport {Doughnut, Pie} from 'react-chartjs-2';\r\nimport {FaEye} from '@react-icons/all-files/fa/FaEye';\r\nimport {FaEyeSlash} from '@react-icons/all-files/fa/FaEyeSlash';\r\nimport {TiArrowUnsorted} from '@react-icons/all-files/ti/TiArrowUnsorted';\r\nimport {FaAngleDoubleRight} from '@react-icons/all-files/fa/FaAngleDoubleRight';\r\nimport {Button, CircularProgress, ListItem, ListItemText, Menu, MenuItem} from \"@material-ui/core\";\r\nimport {FormattedMessage, FormattedDate} from 'react-intl';\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport axios from \"axios\";\r\n\r\nexport default function WalletOverview(props) {\r\n\r\n    const percentage = 55;\r\n    const [eye, setEye] = useState(true);\r\n    const [showTabs, setShowTabs] = useState(true);\r\n\r\n    const [assets, setAssets] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [networks, setNetworks] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const [hideAssets, setHideAssets] = useState(false);\r\n\r\n    const removeSmallAssets = () => {\r\n        setHideAssets(!hideAssets);\r\n    }\r\n\r\n    const context = useContext(Context);\r\n\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n\r\n\r\n    const data = {\r\n        labels: [\" % Spot Asset\", \" % Margin Asset\", \" % Perpetual Asset\"],\r\n        datasets: [{\r\n            backgroundColor: [\r\n                \"#b91d47\",\r\n                \"#2b5797\",\r\n                \"#1e7145\"\r\n            ],\r\n            hoverBackgroundColor: [\r\n                \"#de2655\",\r\n                \"#3d76cd\",\r\n                \"#2eaa69\"\r\n            ],\r\n            data: [55, 49, 44]\r\n        }]\r\n    };\r\n\r\n    const fetchCoinHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const listResponse = await axios.get('currencies/list');\r\n\r\n            if (listResponse.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n\r\n            const marketL = (listResponse.data);\r\n\r\n            console.log(listResponse);\r\n\r\n            const Response = await axios.get('core/balanceInfo' ,{\r\n                headers:{\r\n                    'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n\r\n            console.log(Response);\r\n\r\n            if (Response.status !== 200) {\r\n                throw new Error('Something went wrong with CoinList!');\r\n            }\r\n\r\n            const balanceInfo = (Response.data.data);\r\n\r\n            const response = await axios.get('core/marketTickerAll');\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n\r\n            const tickerAll = (response.data.data.ticker);\r\n\r\n            const loadedList = [];\r\n\r\n\r\n            for (var keys in marketL) {\r\n                for (var i in balanceInfo) {\r\n                    for (var j in tickerAll) {\r\n                        if (marketL[keys].short_name != null && marketL[keys].short_name == i && (marketL[keys].short_name) + \"USDT\" == j) {\r\n                             loadedList.push({\r\n                                name: marketL[keys].short_name,\r\n                                available: balanceInfo[i].available,\r\n                                frozen: balanceInfo[i].frozen,\r\n                                value: tickerAll[j].last,\r\n                                smallAsset: true\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var keys in marketL) {\r\n                for (var i in balanceInfo) {\r\n                    if (marketL[keys].short_name != null && marketL[keys].short_name == \"USDT\" && i == \"USDT\") {\r\n                         loadedList.push({\r\n                            name: marketL[keys].short_name,\r\n                            available: balanceInfo[i].available,\r\n                            frozen: balanceInfo[i].frozen,\r\n                            value: 1,\r\n                            smallAsset: true\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            const operation = (list1, list2, isUnion = false) =>\r\n                list1.filter(\r\n                    (set => a => isUnion !== set.has(a.short_name))(new Set(list2.map(b => b.name)))\r\n                );\r\n\r\n// Following functions are to be used:\r\n            const inBoth = (list1, list2) => operation(list1, list2, true)\r\n\r\n            const difference = inBoth(marketL, loadedList);\r\n\r\n            for (var j in difference) {\r\n                if (difference[j].short_name != undefined) {\r\n                     loadedList.push({\r\n                        name: difference[j].short_name,\r\n                        available: 0,\r\n                        frozen: 0,\r\n                        value: 0,\r\n                        smallAsset: false\r\n                    });\r\n                }\r\n            }\r\n\r\n            setAssets(loadedList);\r\n            let sum = loadedList.reduce((accumulator, current) => accumulator + parseFloat(current.value) * (parseFloat(current.available) + parseFloat(current.frozen)), 0.00);\r\n\r\n            setTotal(Math.floor(sum * 100) / 100);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    let content;\r\n\r\n    if (assets.length === 0) {\r\n        content = <p>Found no Coin.</p>;\r\n    }\r\n\r\n    if (error) {\r\n        content = <p>{error}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        content = <p><CircularProgress /></p>;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn){\r\n            history.push('login');\r\n        }\r\n        else {\r\n            fetchCoinHandler();\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10 col-lg-10 col-xl-8 col-xxl-8 col-sm-12 col-xs-12\">\r\n                        <div className=\"card shadow total-assets\">\r\n                            <div className=\"card-header d-flex justify-content-between\"\r\n                                 dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                <FormattedMessage\r\n                                    id=\"Wallet.Title\"\r\n                                    defaultMessage=\"Wallet status\"\r\n                                />\r\n\r\n\r\n                            </div>\r\n                            <div className=\"card-body \">\r\n                                <div className=\"row \">\r\n                                    <div className=\"card-header status pe-0\">\r\n                                        <div className=\"justify-content-between justify-content-sm-start d-flex\">\r\n                                            <div className=\"Est-total me-5 ms-1\">\r\n                                                <p className=\"title m-0\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Wallet.TotalAssets\"\r\n                                                        defaultMessage=\"Est. Total Assets \"\r\n                                                    />{\" \"}\r\n                                                    <span onClick={() => {\r\n                                                        setEye(!eye)\r\n                                                    }} className=\"eye-ico ps-4\">\r\n                                                        {eye ? <FaEye/> : <FaEyeSlash/>}\r\n                    </span>\r\n                                                </p>\r\n                                                {eye ? total : '**********'}\r\n                                                <span className=\"crypto-type\">USDT </span>\r\n                                            </div>\r\n                                            <div className=\"Est-percent me-5 ms-1\">\r\n                                                <p className=\"title m-0\">\r\n                                                    <FormattedMessage\r\n                                                        id=\"Wallet.PNL\"\r\n                                                        defaultMessage=\"Last 24H PNL\"\r\n                                                    />\r\n                                                </p>{eye ? '- -' : '* *'}\r\n                                                <span className=\"crypto-type\">%</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-grid gap-2 d-md-block d-flex mt-5 \">\r\n                                            <button className=\"withdraw\" type=\"button\"\r\n                                                    onClick={() => history.push(\"withdraw\")}>\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.Withdraw\"\r\n                                                    defaultMessage=\"SpotWallets\"\r\n                                                />\r\n                                            </button>\r\n                                            <button className=\"Deposit\" type=\"button\"\r\n                                                    onClick={() => history.push(\"deposit\")}>\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.Deposit\"\r\n                                                    defaultMessage=\"MarginWallets\"\r\n                                                />\r\n                                            </button>\r\n                                            <button className=\"Transfer\" type=\"button\" disabled={true}>\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.Transfer\"\r\n                                                    defaultMessage=\"WalletPerpetualWallets\"\r\n                                                />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"chart-container \">\r\n\r\n                                        <Doughnut\r\n                                            height={200}\r\n                                            width={200}\r\n\r\n                                            data={data}\r\n\r\n                                            options={{\r\n                                                responsive: false,\r\n                                                layouts: {\r\n                                                    padding: {\r\n                                                        top: 50\r\n                                                    }\r\n                                                },\r\n                                                plugins: {\r\n                                                    legend: {\r\n                                                        display: false,\r\n                                                        position: 'bottom'\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        position: 'bottom',\r\n                                                        text: [\"assets\", '( USDT )']\r\n\r\n                                                    },\r\n                                                    animation: {\r\n                                                        duration: 0\r\n                                                    }\r\n                                                }\r\n                                            }}\r\n                                        />\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"pie-progress-container-wallet\">\r\n                                        <div className={`pie_progress `}>\r\n                                            <CircularProgressbar styles={buildStyles({\r\n\r\n\r\n                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                strokeLinecap: 'butt',\r\n\r\n                                                // Text size\r\n                                                textSize: '18px',\r\n\r\n\r\n                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                pathTransitionDuration: 0.5,\r\n\r\n                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                // pathTransition: 'none',\r\n\r\n                                                // Colors\r\n                                                pathColor: `#4d88ff`,\r\n                                                textColor: '#717171',\r\n                                                trailColor: '#d6d6d6',\r\n                                                backgroundColor: '#4d88ff',\r\n                                            })}\r\n                                                                 value={percentage} text={`${percentage}%`}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"pie_progress-title text-capitalize\"\r\n                                             dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                            <FormattedMessage\r\n                                                id=\"Wallet.ProgressBar.24HWithdrawLimit\"\r\n                                                defaultMessage=\"24H Withdraw Limit\"\r\n                                            />\r\n                                        </div>\r\n                                        <p className=\"withdraw-amount text-capitalize\">250/500</p>\r\n                                    </div>\r\n                                    {/*                        <div>*/}\r\n                                    {/*                            <button id=\"button_start\">start()</button>*/}\r\n                                    {/*                            <button id=\"button_stop\">stop()</button>*/}\r\n                                    {/*                            <button id=\"button_go\">go('50')</button>*/}\r\n                                    {/*                            <button id=\"button_go_percentage\">go('50%')</button>*/}\r\n                                    {/*                            <button id=\"button_finish\">finish()</button>*/}\r\n                                    {/*                            <button id=\"button_reset\">reset()</button>*/}\r\n                                    {/*                        </div>*/}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card shadow financial-asset mt-2\">\r\n                            <div className=\"d-grid gap-2 d-md-block d-flex  mt-2 \"\r\n                                 dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                <button onClick={() => {\r\n                                    setShowTabs(!showTabs)\r\n                                }}\r\n                                        type=\"button\" className=\"btn Accounts-container\">\r\n                                    <FormattedMessage\r\n                                        id=\"Wallets.Btn.container\"\r\n                                        defaultMessage=\"Wallets\"\r\n                                    />\r\n                                </button>\r\n                                <div\r\n                                    className={`form-check ${context.locale != \"fa\" && \"float-end\"} me-md-5 ms-2 mt-2`}>\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"checkbox\"\r\n                                        defaultValue\r\n                                        id=\"flexCheckDefault\"\r\n                                        onChange={removeSmallAssets}\r\n                                    />\r\n                                    <label className={`form-check-label ${context.locale == \"fa\" && \"float-start\"}`}\r\n                                           htmlFor=\"flexCheckDefault\">\r\n                                        <FormattedMessage\r\n                                            id=\"Wallet.HideSmallAssets\"\r\n                                            defaultMessage=\"HideSmallAssets\"\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-header \">\r\n                                {showTabs &&\r\n                                <ul className=\"nav nav-tabs card-header-tabs\" dir={context.locale == \"fa\" && \"rtl\"}>\r\n                                    <li className=\"nav-item Accounts\">\r\n                                        <div className=\"nav-link active\" aria-current=\"true\">\r\n                                            <span className=\"coloring\"/>\r\n                                            <FormattedMessage\r\n                                                id=\"Wallet.SpotWallets\"\r\n                                                defaultMessage=\"SpotWallets\"\r\n                                            />{\" \"}\r\n                                            <i className=\"fas fa-sort-down\"/>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item Accounts disabled\" aria-disabled>\r\n                                        <div className=\"nav-link \" aria-current=\"true\">\r\n                                            <FormattedMessage\r\n                                                id=\"Wallet.MarginWallets\"\r\n                                                defaultMessage=\"MarginWallets\"\r\n                                            />\r\n                                            <i className=\"fas fa-sort-down\"/>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item Accounts disabled\" aria-disabled>\r\n                                        <div className=\"nav-link \" aria-current=\"true\">\r\n                                            <FormattedMessage\r\n                                                id=\"Wallet.PerpetualWallets\"\r\n                                                defaultMessage=\"PerpetualWallets\"\r\n                                            />\r\n                                            <i className=\"fas fa-sort-down\"/>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                                }\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div\r\n                                    className=\"tab-pane  crypto-table\"\r\n                                    id=\"market-table\"\r\n                                    role=\"tabpanel\"\r\n                                    aria-labelledby=\"pills-home-tab\"\r\n                                >\r\n                                    <table className=\" bg-transparent text-center \">\r\n                                        <thead>\r\n                                        <tr className=\"wallet-crypto-property \">\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.WalletTable.Name\"\r\n                                                    defaultMessage=\"Name\"\r\n                                                />{\" \"}\r\n                                                <span>\r\n                      <TiArrowUnsorted className=\"fas fa-sort\"/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.WalletTable.Amount\"\r\n                                                    defaultMessage=\"Amount\"\r\n                                                />{\" \"}\r\n                                                <span>\r\n                      <TiArrowUnsorted className=\"fas fa-sort\"/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.WalletTable.Available\"\r\n                                                    defaultMessage=\"Available\"\r\n                                                />{\" \"}\r\n                                                <span>\r\n                      <TiArrowUnsorted className=\"fas fa-sort\"/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.WalletTable.Frozen\"\r\n                                                    defaultMessage=\"Frozen\"\r\n                                                />\r\n                                                <span>\r\n                      <TiArrowUnsorted className=\"fas fa-sort\"/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <FormattedMessage\r\n                                                    id=\"Wallet.WalletTable.MarketValue\"\r\n                                                    defaultMessage=\"MarketValue\"\r\n                                                />\r\n                                                <span>\r\n                      <TiArrowUnsorted className=\"fas fa-sort\"/>\r\n                    </span>\r\n                                            </th>\r\n                                            <th scope=\"col\"/>\r\n                                        </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody >\r\n                                        {assets.map((asset) => (\r\n                                            (hideAssets === false ? (\r\n                                                        <tr className=\"first-row wallet-glow\">\r\n                                                            <td className=\"d-flex justify-content-center\">\r\n                                                                <p>{asset.name}</p>\r\n                                                            </td>\r\n                                                            <td className=\"Amount\">{eye ? parseFloat(asset.available) + parseFloat(asset.frozen) : '****'}</td>\r\n                                                            <td className=\"Available \">{eye ? asset.available : '****'}</td>\r\n                                                            <td className=\"Frozen\">{eye ? asset.frozen : '****'}</td>\r\n                                                            <td className=\"MarketValue\">{eye ? Math.floor(parseFloat(asset.value) * (parseFloat(asset.available) + parseFloat(asset.frozen)) * 100) / 100 + ' USDT' : '****'}</td>\r\n                                                            <td className=\"menu\">\r\n                                                                <div className=\"dropdown\">\r\n                                                                    <button className=\"menu-title btn \"\r\n                                                                            aria-controls=\"simple-menu\"\r\n                                                                            aria-haspopup=\"true\">\r\n                                                                        <FaAngleDoubleRight\r\n                                                                            className=\"fas ACCIco fa-angle-double-right\"/>\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    type=\"button\"\r\n                                                                    className=\"btn btn-outline-secondary table-Trade\"\r\n                                                                >\r\n                                                                    <FormattedMessage\r\n                                                                        id=\"Wallet.WalletTable.trade\"\r\n                                                                        defaultMessage=\"Trade\"\r\n                                                                    />\r\n                                                                </button>\r\n                                                                <ul className=\"menu-dropdown\">\r\n                                                                    <ListItem\r\n                                                                        onClick={() => history.push(\"deposit\")}><ListItemText>Deposit</ListItemText></ListItem>\r\n                                                                    <ListItem\r\n                                                                        onClick={() => history.push(\"withdraw\")}><ListItemText>Withdraw</ListItemText></ListItem>\r\n                                                                    <ListItem\r\n                                                                        onClick={() => history.push(\"Trade?pair=btcusdt\")}><ListItemText>Exchange</ListItemText></ListItem>\r\n                                                                </ul>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                    :\r\n                                                    asset.smallAsset && (\r\n                                                        <tr className=\"first-row wallet-glow\">\r\n                                                            <td className=\"d-flex justify-content-center\">\r\n                                                                <p>{asset.name}</p>\r\n                                                            </td>\r\n                                                            <td className=\"Amount\">{eye ? parseFloat(asset.available) + parseFloat(asset.frozen) : '****'}</td>\r\n                                                            <td className=\"Available \">{eye ? asset.available : '****'}</td>\r\n                                                            <td className=\"Frozen\">{eye ? asset.frozen : '****'}</td>\r\n                                                            <td className=\"MarketValue\">{eye ? Math.floor(parseFloat(asset.value) * (parseFloat(asset.available) + parseFloat(asset.frozen)) * 100) / 100 + ' USDT' : '****'}</td>\r\n                                                            <td className=\"menu\">\r\n                                                                <div className=\"dropdown\">\r\n                                                                    <button className=\"menu-title btn \"\r\n                                                                            aria-controls=\"simple-menu\"\r\n                                                                            aria-haspopup=\"true\">\r\n                                                                        <FaAngleDoubleRight\r\n                                                                            className=\"fas ACCIco fa-angle-double-right\"/>\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    type=\"button\"\r\n                                                                    className=\"btn btn-outline-secondary table-Trade\"\r\n                                                                >\r\n                                                                    <FormattedMessage\r\n                                                                        id=\"Wallet.WalletTable.trade\"\r\n                                                                        defaultMessage=\"Trade\"\r\n                                                                    />\r\n                                                                </button>\r\n                                                                <ul className=\"menu-dropdown\">\r\n                                                                    <ListItem\r\n                                                                        onClick={() => history.push(\"deposit\")}><ListItemText>Deposit</ListItemText></ListItem>\r\n                                                                    <ListItem\r\n                                                                        onClick={() => history.push(\"withdraw\")}><ListItemText>Withdraw</ListItemText></ListItem>\r\n                                                                    <ListItem\r\n                                                                        onClick={() => history.push(\"Trade?pair=btcusdt\")}><ListItemText>Exchange</ListItemText></ListItem>\r\n                                                                </ul>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                            )\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <section className='walletTableFeedback'>{content}</section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/*            <div class=\"card Financial History\">*/}\r\n                        {/*                <div class=\"card-header \">*/}\r\n                        {/*                    Financial Asset*/}\r\n                        {/*                    <div class=\"form-\">*/}\r\n                        {/*                 */}\r\n                        {/*                    </div>*/}\r\n                        {/*                </div>*/}\r\n                        {/*                <div class=\"card-body\">*/}\r\n                        {/*                    <div class=\"tab-pane  crypto-table\" id=\"history-table\" role=\"tabpanel\"*/}\r\n                        {/*                         aria-labelledby=\"pills-home-tab\">*/}\r\n                        {/*                        <table class=\"table bg-transparent text-center \">*/}\r\n                        {/*                            <thead>*/}\r\n                        {/*                            <tr class=\"crypto-property\">*/}\r\n                        {/*                                <th scope=\"col\">Name <span><i class=\"fas fa-sort\"></i></span></th>*/}\r\n                        {/*                                <th scope=\"col\">Coin Type<span><i class=\"fas fa-sort\"></i></span></th>*/}\r\n                        {/*                                <th scope=\"col\">Operation <span><i class=\"fas fa-sort\"></i></span></th>*/}\r\n                        {/*                                <th scope=\"col\">Amount<span><i class=\"fas fa-sort\"></i></span></th>*/}\r\n                        {/*                                <th scope=\"col\">status</th>*/}\r\n                        {/*                            </tr>*/}\r\n                        {/*                            </thead>*/}\r\n                        {/*                            <tbody>*/}\r\n                        {/*                            </tbody>*/}\r\n                        {/*                        </table>*/}\r\n                        {/*                    </div>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport \"../css/Convert.css\";\r\nimport \"../css/bootstrap.css\";\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {MdCompareArrows} from \"@react-icons/all-files/md/MdCompareArrows\";\r\nimport {Context} from \"../../translation/Wrapper\";\r\nimport MarketSearchSec from \"../widgets/MarketSearchSec\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {parseNumber} from \"../../Extentions\";\r\nimport axios from \"axios\";\r\nimport {CenterModal, ModalTitle} from \"react-spring-modal\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport LoadingDialog from \"../widgets/LoadingDialog\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst Convert = () => {\r\n\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currentPriceUSD, setCurrentPriceUSD] = useState();\r\n    const [swap, setSwap] = useState(true);\r\n\r\n    const [first, setFirst] = useState();\r\n    const [second, setSecond] = useState();\r\n    const [price, setPrice] = useState();\r\n    const priceRef = useRef(\"\");\r\n\r\n    const [isBuyMode, setIsBuyMode] = useState(true);\r\n    const [availableCoin, setAvailableCoin] = useState(\"--\");\r\n    const [availableCoinName, setAvailableCoinName] = useState(\" \");\r\n    const [convertAmount, setConvertAmount] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [calculated, setCalculated] = useState();\r\n\r\n    const getMarketDetail = useCallback(async (val) => {\r\n\r\n        if (val != undefined) {\r\n            setAvailableCoinName(val);\r\n            setLoading(true);\r\n            await axios.get(`core/balanceInfo`, {\r\n                headers: {\r\n                    'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            }).then((res) => {\r\n                let loadedData;\r\n                if (res.data.data[val]) {\r\n                    loadedData = res.data.data[val].available;\r\n                } else {\r\n                    loadedData = 0;\r\n                }\r\n                setAvailableCoin(loadedData);\r\n            });\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            history.push('login');\r\n        }\r\n\r\n    }, []);\r\n\r\n    const {addToast} = useToasts();\r\n\r\n    const context = useContext(Context);\r\n\r\n    const notMatch = <p className=\"text-danger ms-4 text-capitalize fw-bold\">the selected coins must be different</p>;\r\n\r\n\r\n    const setupWebSockets = (marketData) => {\r\n        setLoading(true);\r\n        setPrice(\"\");\r\n        const ws = new WebSocket(\"wss://socket.sigloyex.com\");\r\n        ws.onmessage = function (event) {\r\n            const data = JSON.parse(event.data);\r\n            if (data.method == \"state.update\") {\r\n                //setCurrentPrice(data.params[0][marketData].last);\r\n                if (marketData != \"USDTUSDT\" && marketData != \"usdtUSDT\") {\r\n                    setCurrentPriceUSD(data.params[0][marketData].last);\r\n                } else {\r\n                    setCurrentPriceUSD(1);\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n        ws.onopen = function (event) {\r\n            // //console.log(event);\r\n            // const msg = JSON.stringify({\r\n            //   method: \"server.ping\",\r\n            //   params: [],\r\n            //   id: 11,\r\n            // });\r\n            // ws.send(msg);\r\n            ws.send(\r\n                JSON.stringify({\r\n                        \"method\": \"state.subscribe\",\r\n                        \"params\": [\r\n                            marketData\r\n                        ],\r\n                        \"id\": 15\r\n                    }\r\n                )\r\n            );\r\n\r\n        };\r\n        setLoading(false);\r\n    };\r\n\r\n    const Calculator = (Price) => {\r\n        if (Price && currentPriceUSD) {\r\n            setCalculated(Price * currentPriceUSD + \"  USDT\");\r\n        }\r\n    }\r\n\r\n\r\n    const convert = useCallback(async (fi, sec) => {\r\n        setIsLoading(true);\r\n        const Amount = priceRef.current.value;\r\n        const tokken = \"bearer \" + localStorage.getItem(\"token\");\r\n        const ConvertOrder = {\r\n            \"fromcurrency\": fi,\r\n            \"tocurrency\": sec,\r\n            \"amount\": Amount\r\n        }\r\n\r\n\r\n        const response = await fetch(`http://31.192.237.52:8080/convert/check_convert_amount`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(ConvertOrder),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': tokken,\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        if (data.status != \"ok\") {\r\n            addToast(data.errors[0].msg, {appearance: \"error\", autoDismiss: true});\r\n        } else {\r\n            setConvertAmount(data.data.convert_value);\r\n            setOpen(true);\r\n        }\r\n        setIsLoading(false);\r\n    }, [])\r\n\r\n    async function addConvert() {\r\n        setIsLoading(true);\r\n        console.log(\"hi\")\r\n        const Amount = priceRef.current.value;\r\n        const tokken = \"bearer \" + localStorage.getItem(\"token\");\r\n        const ConvertOrder = {\r\n            \"fromcurrency\": first,\r\n            \"tocurrency\": second,\r\n            \"amount\": Amount\r\n        }\r\n        console.log(ConvertOrder);\r\n        const response = await fetch(`http://31.192.237.52:8080/convert/convert`, {\r\n        method: 'POST',\r\n            body: JSON.stringify(ConvertOrder),\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n                'Authorization': tokken,\r\n        }\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.status != \"ok\") {\r\n        addToast(data.errors[0].msg, {appearance: \"error\", autoDismiss: true});\r\n        setOpen(false);\r\n    } else {\r\n        console.log(data);\r\n        addToast('Your Order Was successful', {appearance: \"success\", autoDismiss: true});\r\n        setPrice(\"\");\r\n        setOpen(false);\r\n        getMarketDetail();\r\n    }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    let content ;\r\n    if (isLoading){\r\n        content = <CircularProgress size={16}/>;\r\n    }\r\n\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n\r\n            <div className=\" header col-xs-12 col-md-12 col-sm-12 mt-5\" id=\"header\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header-title \">\r\n                        <h2 className=\"card-title\">Convert</h2>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10 col-lg-10 col-xl-10 col-xxl-8 col-sm-12 col-xs-12\">\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"card CovertCard border-0\">\r\n\r\n                            <div className=\"card-body mb-5 shadow\">\r\n\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n\r\n\r\n                                {/*<button className=\" col-2 d-flex justify-content-center convertIcon\"*/}\r\n                                {/*        onClick={() => {*/}\r\n                                {/*            setSwap(!swap);*/}\r\n                                {/*            setIsBuyMode(!isBuyMode);*/}\r\n                                {/*            setAvailableCoinName(\"\");*/}\r\n                                {/*            setAvailableCoin(0);*/}\r\n                                {/*        }}>*/}\r\n                                {/*    <MdCompareArrows/>*/}\r\n                                {/*</button>*/}\r\n\r\n\r\n                                <form onSubmit={addConvert}>\r\n                                    <div className=\"row justify-content-around\">\r\n                                        <div className=\"col-4 marketBarContainer mt-3\">\r\n                                            <label className=\"d-flex justify-content-between \">From </label>\r\n                                            <MarketSearchSec onSocket={setupWebSockets}\r\n                                                             onGetMarketDetail={getMarketDetail}\r\n                                                             setFirst={setFirst}\r\n                                                             lable={\"From\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-4 marketBarContainer mt-3\">\r\n                                            <label>To</label>\r\n                                            <MarketSearchSec market={true} setSecond={setSecond} lable={\"To\"}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-around mt-3\">\r\n                                        <div className=\"col-4 toConvert\">\r\n                                            <input type=\"text\" className=\"form-control\"\r\n                                                   placeholder=\"Please enter 0.0003-50\" disabled={first == second}\r\n                                                   value={price}\r\n                                                   ref={priceRef}\r\n                                                   onChange={(e) => {\r\n                                                       setPrice(e.target.value);\r\n                                                       Calculator(e.target.value);\r\n                                                   }}\r\n                                            />\r\n                                            <p\r\n                                                className={` m-0 text-secondary d-inline`}>\r\n                                                {first == second && first != undefined && notMatch}\r\n                                                {availableCoin + \" \" + availableCoinName}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"col-4 toConvert \">\r\n                                            <input type=\"text\"\r\n                                                   className={`form-control ${!calculated ? 'disabledInput' : 'disabledInputCompleted fw-bold'}`}\r\n                                                   placeholder=\"Please enter 0.0003-50\"\r\n                                                   value={calculated}/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <CenterModal isOpen={isOpen} >\r\n                                        <button className=\"btn-close\" onClick={() => setOpen(false)}></button>\r\n                                        <div className={`modalContent ${isLoading && 'disabledButton'}`}>\r\n                                        <ModalTitle style={{textAlign: \"center\"}}>Check Amount</ModalTitle>\r\n                                        <p className=\"convertText\">Your Calculated Amount is : <br/><span className=\"convertAmount\">{convertAmount}</span></p>\r\n                                        <button type=\"submit\" onClick={addConvert} className=\" convertBtn p-3\">Convert {content} </button>\r\n                                        </div>\r\n                                    </CenterModal>\r\n\r\n                                </form>\r\n\r\n                                <br/>\r\n                                <a className=\"d-flex justify-content-center\">\r\n                                    <button\r\n                                        className={`bnConvert ${calculated && 'bn25'}  col-md-4 col-xs-8 col-sm-6 col-xl-3 ${!calculated && 'disabledInput'} `}\r\n                                        onClick={() => convert(first, second)}>\r\n                                        Place\r\n                                    </button>\r\n                                </a>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Convert;\r\n","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\r\nimport NavBar from \"../widgets/NavBar\";\r\nimport \"../css/forgetPawword.css\";\r\nimport axios from \"axios\";\r\nimport {CountdownCircleTimer} from \"react-countdown-circle-timer\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {LoginContext} from \"../../Root\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst ForgetPassword = () => {\r\n\r\n    const history = useHistory();\r\n    const {isLoggedIn, setIsLoggedIn} = useContext(LoginContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [Timer, setTimer] = useState(false);\r\n\r\n    const emailRef = useRef(\"\");\r\n    const codeRef = useRef(\"\");\r\n    const passRef = useRef(\"\");\r\n    const repPassRef = useRef(\"\");\r\n    const userName = useRef(\"\");\r\n    const tempToken = useRef(\"\");\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [repPass, setRepPass] = useState(\"\");\r\n    const [enteredCode, setEnteredCode] = useState(\"\");\r\n    const [nextStep, setNextStep] = useState(false);\r\n\r\n    const {addToast} = useToasts();\r\n\r\n    const getCode = useCallback(async (event) => {\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        const email = emailRef.current.value;\r\n        localStorage.setItem( \"username\" , email);\r\n        try {\r\n            const emailCode = await axios.post('auth/2fa/get_code', {\"username\": email}, {\r\n                headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n            });\r\n\r\n            if (emailCode.status !== 200) {\r\n                throw new Error('Something went wrong with Code!');\r\n            }\r\n\r\n            const Code = (emailCode.data.data);\r\n\r\n            localStorage.setItem( \"tempToken\" , Code.tmp_token);\r\n\r\n\r\n            setNextStep(true);\r\n            addToast(\"Check Your email !\", {appearance: \"info\", autoDismiss: true});\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            addToast(error.toString(), {appearance: \"error\", autoDismiss: true});\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n\r\n    const resetPassword = useCallback(async (event) => {\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n\r\n        const code = codeRef.current.value;\r\n        const pass = passRef.current.value;\r\n        const RepPass = repPassRef.current.value;\r\n        const tempToken = localStorage.getItem( \"tempToken\");\r\n        const userName = localStorage.getItem( \"username\");\r\n\r\n        const resetPassRequest = {\r\n            \"tmp_token\": tempToken,\r\n            \"email_code\": code,\r\n            \"username\": userName,\r\n            \"new_passwords\": {\r\n                \"new_password\": pass,\r\n                \"new_password_confirm\": RepPass\r\n            }\r\n        }\r\n\r\n        console.log(resetPassRequest);\r\n\r\n        try {\r\n            const RestCode = await axios.post('auth/forget/reset_password', resetPassRequest, {\r\n                headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n            });\r\n\r\n            if (RestCode.status !== 200) {\r\n                throw new Error('Something went wrong with Code!');\r\n            }\r\n\r\n            const Code = (RestCode.data.data);\r\n            console.log(RestCode);\r\n\r\n            setNextStep(false);\r\n\r\n            addToast(\"Your Password was change successfully\", {appearance: \"success\", autoDismiss: true});\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            addToast(error.toString(), {appearance: \"error\", autoDismiss: true});\r\n        }\r\n\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            history.push('login');\r\n        }\r\n\r\n    }, []);\r\n\r\n    let content;\r\n    if (isLoading) {\r\n        content = <CircularProgress size={16}/>;\r\n    }\r\n\r\n    const renderTime = ({remainingTime}) => {\r\n        if (remainingTime === 0) {\r\n\r\n        }\r\n        return (\r\n            <div className=\"timer\">\r\n                <div className=\"value\">{remainingTime}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"col-12\">\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-xl-3 col-md-6 col-sm-10 card shadow rounded p-3\">\r\n                            <div className=\"card-header border-0\">\r\n                                <h3 className=\"card-title\">Reset Password</h3>\r\n                                <p className={`mt-4 mb-0 text-capitalize ${!nextStep && 'd-none'}`}>Please enter your\r\n                                    email address below and we will send you\r\n                                    information to change your password.</p>\r\n                                <p className={`mt-4 mb-0 text-capitalize ${nextStep && 'd-none'}`}>Please enter your The\r\n                                    code we send for You </p>\r\n                            </div>\r\n                            <div className=\"card-body border-0\">\r\n                                {!nextStep ? <form className={`form-group ${isLoading && 'disabledButton'}`} onSubmit={getCode}>\r\n                                        <div\r\n                                            className={`form-floating resetPass-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3`}>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control border-0\"\r\n                                                id=\"floatingInputValue\"\r\n                                                placeholder=\"name@example.com\"\r\n                                                value={enteredEmail}\r\n                                                onChange={(e) => {\r\n                                                    setEnteredEmail(e.target.value);\r\n                                                }}\r\n                                                ref={emailRef}\r\n                                            />\r\n                                            <label>Email Address</label>\r\n                                        </div>\r\n\r\n                                        <button className=\"bnt-hover bnt\" type=\"submit\">GetCode {content}</button>\r\n\r\n                                        {/*<CountdownCircleTimer*/}\r\n                                        {/*    isPlaying*/}\r\n                                        {/*    size={60}*/}\r\n                                        {/*    duration={10}*/}\r\n                                        {/*    colors={[[\"#004777\", 0.33], [\"#A30000\"]]}*/}\r\n                                        {/*    onComplete={() => [Timer]}*/}\r\n                                        {/*>*/}\r\n                                        {/*    {renderTime}*/}\r\n                                        {/*</CountdownCircleTimer>*/}\r\n                                    </form> :\r\n                                    <form className={`form-group ${isLoading && 'disabledButton'}`} onSubmit={resetPassword}>\r\n                                        <div className=\"row timer justify-content-end mb-4\">\r\n                                            <CountdownCircleTimer\r\n                                                isPlaying\r\n                                                size={45}\r\n                                                strokeWidth={5}\r\n                                                duration={180}\r\n                                                colors={[[\"#004777\", 0.50], [\"#69042c\", 0.75], [\"#A30000\"]]}\r\n                                                onComplete={() => [Timer]}\r\n                                            >\r\n                                                {renderTime}\r\n                                            </CountdownCircleTimer>\r\n                                        </div>\r\n                                        <div\r\n                                            className={`form-floating resetPass-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3`}>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control border-0\"\r\n                                                value={enteredCode}\r\n                                                onChange={(e) => {\r\n                                                    setEnteredCode(e.target.value);\r\n                                                }}\r\n                                                ref={codeRef}\r\n                                            />\r\n                                            <label >Code</label>\r\n                                        </div>\r\n                                        <div\r\n                                            className={`form-floating resetPass-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3`}>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control border-0\"\r\n                                                value={pass}\r\n                                                onChange={(e) => {\r\n                                                    setPass(e.target.value);\r\n                                                }}\r\n                                                ref={passRef}\r\n                                            />\r\n                                            <label>NewPass</label>\r\n                                        </div>\r\n                                        <div\r\n                                            className={`form-floating resetPass-input rounded-pill pt-1 pb-1 pe-5 ps-5 mb-3`}>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                className=\"form-control border-0\"\r\n                                                value={repPass}\r\n                                                onChange={(e) => {\r\n                                                    setRepPass(e.target.value);\r\n                                                }}\r\n                                                ref={repPassRef}\r\n                                            />\r\n                                            <label >NewPass Repeat</label>\r\n                                        </div>\r\n                                        <button className=\"bnt-hover bnt\" type=\"submit\">Reset\r\n                                            Password {content}</button>\r\n\r\n                                    </form>}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import React, {createContext, useState} from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport App from \"./App\";\r\nimport SocketContext from \"./SocketContext\";\r\nimport LoginAndSignup from \"./component/LoginAndSignup/LoginAndSignup\";\r\nimport Account from \"./component/accounts/Account\";\r\nimport AccountLevel from \"./component/accounts/AccountLevel\";\r\nimport Withdraw from \"./component/market/Withdraw\";\r\nimport Trade from \"./component/market/Trade\";\r\nimport CoinInfoScreen from \"./component/coins/CoinInfoScreen\";\r\nimport DepositScreen from \"./component/market/DepositScreen\";\r\nimport FAQScreen from \"./component/more_pages/FAQScreen\";\r\nimport IdVerification from \"./component/accounts/IdVerification\";\r\nimport MarketList from \"./component/market/MarketList\";\r\nimport MessagesScreen from \"./component/accounts/MessagesScreen\";\r\nimport SettingScreen from \"./component/accounts/SettingScreen\";\r\nimport VerifiedScreen from \"./component/widgets/VerifiedScreen\";\r\nimport WalletOverview from \"./component/accounts/WalletOverview\";\r\nimport Convert from \"./component/market/Convert\";\r\nimport {create} from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport {StylesProvider, jssPreset} from \"@material-ui/core/styles\";\r\nimport NotAllowed from \"./component/widgets/NotAllowed\";\r\nimport ForgetPassword from \"./component/LoginAndSignup/ForgetPassword\";\r\n\r\n\r\nconst jss = create({plugins: [...jssPreset().plugins, rtl()]});\r\n\r\nexport const LoginContext = createContext();\r\nexport const VerificationContext = createContext();\r\n\r\n\r\nconst Root = () => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(\r\n        localStorage.getItem(\"token\") != null\r\n    );\r\n\r\n    const [isVerified, setIsVerified] = useState(\r\n        localStorage.getItem(\"verified\") != null &&\r\n        localStorage.getItem(\"verified\") == \"true\"\r\n    );\r\n\r\n    localStorage.removeItem(\"tempToken\");\r\n    localStorage.removeItem(\"username\");\r\n\r\n\r\n    return (\r\n        <StylesProvider jss={jss}>\r\n            <LoginContext.Provider value={{isLoggedIn, setIsLoggedIn}}>\r\n                <VerificationContext.Provider value={{isVerified, setIsVerified}}>\r\n                    <SocketContext.Consumer>\r\n\r\n                        {(value) => {\r\n                            return (\r\n                                <Router>\r\n                                    <Switch>\r\n                                        <Route\r\n                                            component={(props) => <App socket={value} {...props} />}\r\n                                            exact\r\n                                            path=\"/\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <LoginAndSignup isSignup={false} socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/login\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <LoginAndSignup isSignup={true} socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/signup\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <ForgetPassword socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/forgetPassword\"\r\n                                        />\r\n\r\n                                        <Route\r\n                                            component={(props) => <NotAllowed socket={value} {...props} />}\r\n                                            exact\r\n                                            path=\"/account\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <AccountLevel socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/accountLevel\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => <Trade socket={value} {...props} />}\r\n                                            exact\r\n                                            path=\"/trade\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <Withdraw socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/withdraw\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <CoinInfoScreen socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/coin_info\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <DepositScreen socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/deposit\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <Convert socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/Convert\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <FAQScreen socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/faq\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <IdVerification socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/id_verification\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <MarketList socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/markets\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <MessagesScreen socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/messages\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <SettingScreen socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/settings\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <VerifiedScreen socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/verified\"\r\n                                        />\r\n                                        <Route\r\n                                            component={(props) => (\r\n                                                <WalletOverview socket={value} {...props} />\r\n                                            )}\r\n                                            exact\r\n                                            path=\"/wallet_overview\"\r\n                                        />\r\n                                    </Switch>\r\n                                </Router>\r\n                            );\r\n                        }}\r\n\r\n                    </SocketContext.Consumer>\r\n                </VerificationContext.Provider>\r\n            </LoginContext.Provider>\r\n        </StylesProvider>\r\n    );\r\n};\r\n\r\nexport default Root;\r\n","export default __webpack_public_path__ + \"static/media/IranNastaliq.32e9d4e9.ttf\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Root from \"./Root\";\r\nimport './App.css'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport SocketContext from \"./SocketContext\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Wrapper from \"./translation/Wrapper\";\r\nimport './component/css/IranNastaliq.ttf';\r\nimport ThemeContext from \"./component/ThemeContext\";\r\nimport {ToastProvider} from \"react-toast-notifications\";\r\nimport axios from \"axios\";\r\nimport {notifyErrorMessage} from \"./App\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n<ThemeContext>\r\n    <Wrapper >\r\n    <ToastProvider autoDismissTimeout={6500} placement={\"bottom-right\"} >\r\n    <BrowserRouter>\r\n      <Root />\r\n    </BrowserRouter>\r\n    </ToastProvider>\r\n    </Wrapper>\r\n</ThemeContext>\r\n        ,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}