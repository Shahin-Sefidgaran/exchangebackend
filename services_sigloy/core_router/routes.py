"""
This dictionary is used in core_router to apply some changes on uri and
 arguments of each core route(apply some validation)
"""
core_routes = {
    'check_convert_amount' : {'uri': '/check_convert_amount', 'args': ()},
    'convert' : {'uri': '/convert', 'args': ()},
    'market_list': {'uri': '/marketList', 'args': ()},
    'market_ticker': {'uri': '/marketTicker', 'args': ('market',)},
    'market_ticker_all': {'uri': '/marketTickerAll', 'args': ()},
    'market_depth': {'uri': '/marketDepth', 'args': ('market', 'merge')},
    'market_deals': {'uri': '/marketDeals', 'args': ('market',)},
    'market_kline': {'uri': '/marketKline', 'args': ('market', 'type')},
    'market_info': {'uri': '/marketInfo', 'args': ()},
    'market_detail': {'uri': '/marketDetail', 'args': ('market',)},
    'amm_market': {'uri': '/ammMarket', 'args': ('market',)},
    'order_limit': {'uri': '/orderLimit', 'args': ('market', 'type', 'amount', 'price')},
    'order_stop_limit': {'uri': '/orderStopLimit', 'args': ('market', 'type', 'amount', 'price','stop_price')},
    'order_limit_batch': {'uri': '/orderLimitBatch',
                          'args': ('market', 'type', 'amount', 'price', 'batch_orders')},
    'order_market': {'uri': '/orderMarket', 'args': ('market', 'type', 'amount')},
    'order_ioc': {'uri': '/orderIoc', 'args': ('market', 'type', 'amount', 'price')},
    'order_pending': {'uri': '/orderPending', 'args': ('market', 'page', 'limit')},
    'order_finished': {'uri': '/orderFinished', 'args': ('market',)},
    'order_status': {'uri': '/orderStatus', 'args': ('market', 'id')},
    'order_status_batch': {'uri': '/orderStatusBatch', 'args': ('market', 'batch_ids')},
    'order_deals': {'uri': '/orderDeals', 'args': ('id', 'page', 'limit')},
    'order_user_deals': {'uri': '/orderUserDeals', 'args': ('market', 'page', 'limit')},
    'order_pending_cancel': {'uri': '/orderPendingCancel', 'args': ('market', 'id')},
    'order_pending_cancel_batch': {'uri': '/orderPendingCancelBatch', 'args': ('market', 'batch_ids')},
    'order_pending_cancel_all': {'uri': '/orderPendingCancelAll', 'args': ('accountId', 'market')},
    'order_mining_difficulty': {'uri': '/orderMiningDifficulty', 'args': ()},
    'credit_account_info': {'uri': '/creditAccountInfo', 'args': ()},
    'balance_info': {'uri': '/balanceInfo', 'args': ()},
    'balance_coin_withdraw_list': {'uri': '/balanceCoinWithdrawList', 'args': ()},
    'balance_coin_withdraw': {'uri': '/balanceCoinWithdraw',
                              'args': ('coin_type', 'coin_address', 'actual_amount', 'transfer_method')},
    'balance_coin_withdraw_cancel': {'uri': '/balanceCoinWithdrawCancel', 'args': ('coinWithdrawId',)},
    'balance_coin_deposit_list': {'uri': '/balanceCoinDepositList', 'args': ()},
    'balance_deposit_address': {'uri': '/balanceDepositAddress', 'args': ('coinType',)},
    'balance_deposit_address_new': {'uri': '/balanceDepositAddressNew', 'args': ('coinType',)},
    'sub_account_transfer': {'uri': '/subAccountTransfer', 'args': ('coinType', 'amount')},
    'sub_account_balance': {'uri': '/subAccountBalance', 'args': ()},
    'sub_account_transfer_history': {'uri': '/subAccountTransferHistory', 'args': ()},
    'margin_transfer': {'uri': '/marginTransfer', 'args': ('fromAccount', 'toAccount', 'coinType', 'amount')},
    'margin_account': {'uri': '/marginAccount', 'args': ()},
    'margin_account_currency': {'uri': '/marginAccountCurrency', 'args': ('market',)},
    'margin_config': {'uri': '/marginConfig', 'args': ()},
    'margin_config_currency': {'uri': '/marginConfigCurrency', 'args': ('market',)},
    'margin_loan_history': {'uri': '/marginLoanHistory', 'args': ()},
    'margin_loan': {'uri': '/marginLoan', 'args': ('market', 'coinType', 'amount')},
    'margin_flat': {'uri': '/marginFlat', 'args': ('market', 'coinType', 'amount')},
    'currency_rate': {'uri': '/currencyRate', 'args': ()},
    'asset_config': {'uri': '/assetConfig', 'args': ()},
    'contract_balance_transfer': {'uri': '/contractBalanceTransfer',
                                  'args': ('coin_type', 'amount', 'transfer_side')},
    'ping': {'uri': '/ping', 'args': ()},
    'time': {'uri': '/time', 'args': ()},
    'p_market_list': {'uri': '/pMarketList', 'args': ()},
    'market_limit_config': {'uri': '/marketLimitConfig', 'args': ()},
    'p_market_ticker': {'uri': '/pMarketTicker', 'args': ('market',)},
    'p_market_depth': {'uri': '/pMarketDepth', 'args': ('market', 'merge', 'limit')},
    'p_market_deals': {'uri': '/pMarketDeals', 'args': ('market',)},
    'market_funding_history': {'uri': '/marketFundingHistory', 'args': ('market', 'offset', 'limit')},
    'market_user_deals': {'uri': '/marketUserDeals', 'args': ('market', 'side', 'offset', 'limit')},
    'p_market_kline': {'uri': '/pMarketKline', 'args': ('market', 'type')},
    'adjust_leverage': {'uri': '/adjustLeverage', 'args': ('market', 'leverage', 'position_type')},
    'get_position_amount': {'uri': '/getPositionAmount', 'args': ('market', 'price', 'side')},
    'asset_query': {'uri': '/assetQuery', 'args': ()},
    'put_limit_order': {'uri': '/putLimitOrder', 'args': ('market', 'amount', 'price', 'side')},
    'put_market_order': {'uri': '/putMarketOrder', 'args': ('market', 'side', 'amount')},
    'put_stop_limit_order': {'uri': '/putStopLimitOrder',
                             'args': ('market', 'amount', 'side', 'price', 'stop_type', 'stop_price')},
    'put_stop_market_order': {'uri': '/putStopMarketOrder',
                              'args': ('market', 'amount', 'side', 'stop_type', 'stop_price')},
    'put_limit_close_order': {'uri': '/putLimitCloseOrder', 'args': ('market', 'positionId', 'amount', 'price')},
    'put_market_close_order': {'uri': '/putMarketCloseOrder', 'args': ('market', 'position_id')},
    'cancel_pending_order': {'uri': '/cancelPendingOrder', 'args': ('market', 'order_id')},
    'cancel_pending_order_all': {'uri': '/cancelPendingOrderAll', 'args': ('market',)},
    'cancel_pending_stop_order': {'uri': '/cancelPendingStopOrder', 'args': ('market', 'order_id')},
    'query_pending_order': {'uri': '/queryPendingOrder', 'args': ('market', 'side', 'offset', 'limit')},
    'query_finished_order': {'uri': '/queryFinishedOrder', 'args': ('market', 'side', 'offset', 'limit')},
    'query_stop_order': {'uri': '/queryStopOrder', 'args': ('market', 'side', 'offset', 'limit')},
    'query_order_status': {'uri': '/queryOrderStatus', 'args': ('market', 'order_id')},
    'query_pending_position': {'uri': '/queryPendingPosition', 'args': ()},
    'adjust_position_margin': {'uri': '/adjustPositionMargin', 'args': ('market', 'amount', 'type')},
}
